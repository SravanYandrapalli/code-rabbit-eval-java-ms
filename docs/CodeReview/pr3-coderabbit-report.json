{
  "repository": "code-rabbit-eval-java-ms",
  "owner": "SravanYandrapalli",
  "pr": {
    "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/3",
    "id": 2815978826,
    "node_id": "PR_kwDOPtYExc6n2G1K",
    "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/3",
    "diff_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/3.diff",
    "patch_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/3.patch",
    "issue_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/issues/3",
    "number": 3,
    "state": "open",
    "locked": false,
    "title": "Feature/fixes after coderabbit",
    "user": {
      "login": "SravanYandrapalli",
      "id": 11624818,
      "node_id": "MDQ6VXNlcjExNjI0ODE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11624818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SravanYandrapalli",
      "html_url": "https://github.com/SravanYandrapalli",
      "followers_url": "https://api.github.com/users/SravanYandrapalli/followers",
      "following_url": "https://api.github.com/users/SravanYandrapalli/following{/other_user}",
      "gists_url": "https://api.github.com/users/SravanYandrapalli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SravanYandrapalli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SravanYandrapalli/subscriptions",
      "organizations_url": "https://api.github.com/users/SravanYandrapalli/orgs",
      "repos_url": "https://api.github.com/users/SravanYandrapalli/repos",
      "events_url": "https://api.github.com/users/SravanYandrapalli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SravanYandrapalli/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": "Apply CodeRabbit-driven fixes \n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n## Summary by CodeRabbit\n\n- New Features\n  - Initial Spring Boot microservice with GET /users/{id}, validation, and in-memory caching; configurable via APP_SECRET.\n- Docker\n  - Multi-stage Docker image to build and run the app, exposing port 8080.\n- Tests\n  - Unit tests for controller, service (cache & validation), and model.\n- Documentation\n  - Added README, multiple CodeReview summaries, coverage stub, PR description, and policy file.\n- Chores\n  - Added EditorConfig; PR template (duplicated) and helper scripts to fetch/compare PR artifacts.\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
    "created_at": "2025-09-10T15:46:02Z",
    "updated_at": "2025-09-10T16:07:43Z",
    "closed_at": null,
    "merged_at": null,
    "merge_commit_sha": "58088f61d23d0d6a782b4f215cf7e7b32a845b85",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/3/commits",
    "review_comments_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/3/comments",
    "review_comment_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/issues/3/comments",
    "statuses_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/statuses/2acdf66c19ce5bb1a717dc121acee9d30c5c53fb",
    "head": {
      "label": "SravanYandrapalli:feature/fixes-after-coderabbit",
      "ref": "feature/fixes-after-coderabbit",
      "sha": "2acdf66c19ce5bb1a717dc121acee9d30c5c53fb",
      "user": {
        "login": "SravanYandrapalli",
        "id": 11624818,
        "node_id": "MDQ6VXNlcjExNjI0ODE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11624818?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/SravanYandrapalli",
        "html_url": "https://github.com/SravanYandrapalli",
        "followers_url": "https://api.github.com/users/SravanYandrapalli/followers",
        "following_url": "https://api.github.com/users/SravanYandrapalli/following{/other_user}",
        "gists_url": "https://api.github.com/users/SravanYandrapalli/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/SravanYandrapalli/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/SravanYandrapalli/subscriptions",
        "organizations_url": "https://api.github.com/users/SravanYandrapalli/orgs",
        "repos_url": "https://api.github.com/users/SravanYandrapalli/repos",
        "events_url": "https://api.github.com/users/SravanYandrapalli/events{/privacy}",
        "received_events_url": "https://api.github.com/users/SravanYandrapalli/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 1054213317,
        "node_id": "R_kgDOPtYExQ",
        "name": "code-rabbit-eval-java-ms",
        "full_name": "SravanYandrapalli/code-rabbit-eval-java-ms",
        "private": false,
        "owner": {
          "login": "SravanYandrapalli",
          "id": 11624818,
          "node_id": "MDQ6VXNlcjExNjI0ODE4",
          "avatar_url": "https://avatars.githubusercontent.com/u/11624818?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/SravanYandrapalli",
          "html_url": "https://github.com/SravanYandrapalli",
          "followers_url": "https://api.github.com/users/SravanYandrapalli/followers",
          "following_url": "https://api.github.com/users/SravanYandrapalli/following{/other_user}",
          "gists_url": "https://api.github.com/users/SravanYandrapalli/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/SravanYandrapalli/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/SravanYandrapalli/subscriptions",
          "organizations_url": "https://api.github.com/users/SravanYandrapalli/orgs",
          "repos_url": "https://api.github.com/users/SravanYandrapalli/repos",
          "events_url": "https://api.github.com/users/SravanYandrapalli/events{/privacy}",
          "received_events_url": "https://api.github.com/users/SravanYandrapalli/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms",
        "description": null,
        "fork": false,
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms",
        "forks_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/forks",
        "keys_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/teams",
        "hooks_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/hooks",
        "issue_events_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/issues/events{/number}",
        "events_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/events",
        "assignees_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/assignees{/user}",
        "branches_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/branches{/branch}",
        "tags_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/tags",
        "blobs_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/languages",
        "stargazers_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/stargazers",
        "contributors_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/contributors",
        "subscribers_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/subscribers",
        "subscription_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/subscription",
        "commits_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/contents/{+path}",
        "compare_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/merges",
        "archive_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/downloads",
        "issues_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/issues{/number}",
        "pulls_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/labels{/name}",
        "releases_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/releases{/id}",
        "deployments_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/deployments",
        "created_at": "2025-09-10T14:18:55Z",
        "updated_at": "2025-09-10T14:20:10Z",
        "pushed_at": "2025-09-10T16:05:04Z",
        "git_url": "git://github.com/SravanYandrapalli/code-rabbit-eval-java-ms.git",
        "ssh_url": "git@github.com:SravanYandrapalli/code-rabbit-eval-java-ms.git",
        "clone_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms.git",
        "svn_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms",
        "homepage": null,
        "size": 14,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": null,
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 2,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 2,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "SravanYandrapalli:main",
      "ref": "main",
      "sha": "5942b79abdc7a5eafd0c052d752e0b2ea1c6390b",
      "user": {
        "login": "SravanYandrapalli",
        "id": 11624818,
        "node_id": "MDQ6VXNlcjExNjI0ODE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11624818?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/SravanYandrapalli",
        "html_url": "https://github.com/SravanYandrapalli",
        "followers_url": "https://api.github.com/users/SravanYandrapalli/followers",
        "following_url": "https://api.github.com/users/SravanYandrapalli/following{/other_user}",
        "gists_url": "https://api.github.com/users/SravanYandrapalli/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/SravanYandrapalli/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/SravanYandrapalli/subscriptions",
        "organizations_url": "https://api.github.com/users/SravanYandrapalli/orgs",
        "repos_url": "https://api.github.com/users/SravanYandrapalli/repos",
        "events_url": "https://api.github.com/users/SravanYandrapalli/events{/privacy}",
        "received_events_url": "https://api.github.com/users/SravanYandrapalli/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 1054213317,
        "node_id": "R_kgDOPtYExQ",
        "name": "code-rabbit-eval-java-ms",
        "full_name": "SravanYandrapalli/code-rabbit-eval-java-ms",
        "private": false,
        "owner": {
          "login": "SravanYandrapalli",
          "id": 11624818,
          "node_id": "MDQ6VXNlcjExNjI0ODE4",
          "avatar_url": "https://avatars.githubusercontent.com/u/11624818?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/SravanYandrapalli",
          "html_url": "https://github.com/SravanYandrapalli",
          "followers_url": "https://api.github.com/users/SravanYandrapalli/followers",
          "following_url": "https://api.github.com/users/SravanYandrapalli/following{/other_user}",
          "gists_url": "https://api.github.com/users/SravanYandrapalli/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/SravanYandrapalli/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/SravanYandrapalli/subscriptions",
          "organizations_url": "https://api.github.com/users/SravanYandrapalli/orgs",
          "repos_url": "https://api.github.com/users/SravanYandrapalli/repos",
          "events_url": "https://api.github.com/users/SravanYandrapalli/events{/privacy}",
          "received_events_url": "https://api.github.com/users/SravanYandrapalli/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms",
        "description": null,
        "fork": false,
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms",
        "forks_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/forks",
        "keys_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/teams",
        "hooks_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/hooks",
        "issue_events_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/issues/events{/number}",
        "events_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/events",
        "assignees_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/assignees{/user}",
        "branches_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/branches{/branch}",
        "tags_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/tags",
        "blobs_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/languages",
        "stargazers_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/stargazers",
        "contributors_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/contributors",
        "subscribers_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/subscribers",
        "subscription_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/subscription",
        "commits_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/contents/{+path}",
        "compare_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/merges",
        "archive_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/downloads",
        "issues_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/issues{/number}",
        "pulls_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/labels{/name}",
        "releases_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/releases{/id}",
        "deployments_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/deployments",
        "created_at": "2025-09-10T14:18:55Z",
        "updated_at": "2025-09-10T14:20:10Z",
        "pushed_at": "2025-09-10T16:05:04Z",
        "git_url": "git://github.com/SravanYandrapalli/code-rabbit-eval-java-ms.git",
        "ssh_url": "git@github.com:SravanYandrapalli/code-rabbit-eval-java-ms.git",
        "clone_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms.git",
        "svn_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms",
        "homepage": null,
        "size": 14,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": null,
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 2,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 2,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/3"
      },
      "html": {
        "href": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/3"
      },
      "issue": {
        "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/issues/3"
      },
      "comments": {
        "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/issues/3/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/3/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/3/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/statuses/2acdf66c19ce5bb1a717dc121acee9d30c5c53fb"
      }
    },
    "author_association": "OWNER",
    "auto_merge": null,
    "active_lock_reason": null,
    "merged": false,
    "mergeable": true,
    "rebaseable": true,
    "mergeable_state": "unstable",
    "merged_by": null,
    "comments": 1,
    "review_comments": 7,
    "maintainer_can_modify": false,
    "commits": 5,
    "additions": 1676,
    "deletions": 0,
    "changed_files": 34
  },
  "issueComments": [
    {
      "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/issues/comments/3275540819",
      "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/3#issuecomment-3275540819",
      "issue_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/issues/3",
      "id": 3275540819,
      "node_id": "IC_kwDOPtYExc7DPMlT",
      "user": {
        "login": "coderabbitai[bot]",
        "id": 136622811,
        "node_id": "BOT_kgDOCCSy2w",
        "avatar_url": "https://avatars.githubusercontent.com/in/347564?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coderabbitai%5Bbot%5D",
        "html_url": "https://github.com/apps/coderabbitai",
        "followers_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/received_events",
        "type": "Bot",
        "user_view_type": "public",
        "site_admin": false
      },
      "created_at": "2025-09-10T15:46:10Z",
      "updated_at": "2025-09-10T16:05:15Z",
      "body": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n<!-- This is an auto-generated comment: review in progress by coderabbit.ai -->\n\n> [!NOTE]\n> Currently processing new changes in this PR. This may take a few minutes, please wait...\n> \n> <details>\n> <summary>📥 Commits</summary>\n> \n> Reviewing files that changed from the base of the PR and between 62eed20e6e70206319db2dbef9a30b15907c0c4b and 2acdf66c19ce5bb1a717dc121acee9d30c5c53fb.\n> \n> </details>\n> \n> <details>\n> <summary>📒 Files selected for processing (3)</summary>\n> \n> * `docs/CodeReview/comparison-pr1-vs-pr2.md` (1 hunks)\n> * `docs/CodeReview/pr1-coderabbit-summary.md` (1 hunks)\n> * `scripts/make-pr-comparison.ps1` (1 hunks)\n> \n> </details>\n> \n> ```ascii\n>  _________________________\n> < No pants, fast results! >\n>  -------------------------\n>   \\\n>    \\   \\\n>         \\ /\\\n>         ( )\n>       .( o ).\n> ```\n\n<!-- end of auto-generated comment: review in progress by coderabbit.ai -->\n<!-- walkthrough_start -->\n\n## Walkthrough\nInitializes a Spring Boot (Java 21) microservice with controller/service/model, configuration, validation, tests, Maven build, Dockerfile, and repo policies/docs. Adds a PowerShell script to fetch PR artifacts. Introduces .editorconfig and a GitHub PR template (duplicated block). Includes runtime/resource YAML and a built target config file.\n\n## Changes\n| Cohort / File(s) | Change Summary |\n|---|---|\n| **Repository configuration**<br>`\\.editorconfig`, `CODERABBIT_POLICY.md`, `README.md`, `.github/pull_request_template.md` | Adds editor settings (UTF-8, LF, spaces, 4-space indent; Markdown trailing spaces preserved), CodeRabbit policy doc, project README, and a PR template (contains duplicated template blocks). |\n| **Documentation and reports**<br>`docs/CodeReview/*`, `docs/PR1_DESCRIPTION.md` | Adds code review docs: PR1 summary, coverage stub, placeholders, and description of intentional issues and artifacts. |\n| **Build and containerization**<br>`pom.xml`, `Dockerfile` | Introduces Maven project (Spring Boot 3.3.3, Java 21, dependencies incl. commons-io 2.16.1) and a multi-stage Dockerfile (build with JDK, run with JRE, exposes 8080). |\n| **Automation script**<br>`scripts/fetch-coderabbit-pr-artifacts.ps1` | New PowerShell script to fetch PR data via GitHub API, emit JSON and Markdown summaries; accepts Owner/Repo/PrNumber params. |\n| **Application code**<br>`src/main/java/org/Application.java`, `src/main/java/org/api/UserController.java`, `src/main/java/org/configuration/AppConfig.java`, `src/main/java/org/model/User.java`, `src/main/java/org/service/UserService.java`, `src/main/java/org/validator/UserValidator.java` | Adds Spring Boot entrypoint, REST controller for GET `/users/{id}`, config bean reading APP_SECRET, User model, service with concurrent cache and validation, and a simple user ID validator. |\n| **Resources**<br>`src/main/resources/application.yml` | Adds Spring Boot YAML config (port 8080, app.secret from `APP_SECRET`, app name). |\n| **Tests**<br>`src/test/java/org/api/UserControllerTest.java`, `src/test/java/org/model/UserTest.java`, `src/test/java/org/service/UserServiceTest.java` | Adds JUnit 5 tests for controller happy path, model equality/getters-setters, and service caching/validation behavior. |\n| **Build artifact**<br>`target/classes/application.yml` | Adds compiled resources output file mirroring application.yml in target/classes. |\n\n## Sequence Diagram(s)\n```mermaid\nsequenceDiagram\n  autonumber\n  actor Client\n  participant Controller as UserController\n  participant Service as UserService\n  participant Config as AppConfig\n  note over Client,Controller: GET /users/{id}\n  Client->>Controller: HTTP GET /users/{id}\n  Controller->>Service: findUserById(id)\n  Service->>Service: validate id / check cache\n  Service->>Config: getAppSecret()\n  alt Secret missing\n    Service-->>Service: log debug (no secret)\n  end\n  alt User cached\n    Service-->>Controller: return cached User\n  else Miss cache\n    Service-->>Service: create placeholder User\n    Service-->>Controller: return new User\n  end\n  Controller-->>Client: 200 OK with User<br/>or 404 Not Found\n```\n\n## Estimated code review effort\n🎯 3 (Moderate) | ⏱️ ~25 minutes\n\n\n\n\n<!-- pre_merge_checks_walkthrough_start -->\n\n## Pre-merge checks (1 passed, 1 warning, 1 inconclusive)\n<details>\n<summary>❌ Failed checks (1 warning, 1 inconclusive)</summary>\n\n|     Check name     | Status         | Explanation                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         | Resolution                                                                                                                                                                                                                                                                   |\n| :----------------: | :------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Docstring Coverage | ⚠️ Warning     | Docstring coverage is 13.64% which is insufficient. The required threshold is 80.00%.                                                                                                                                                                                                                                                                                                                                                                                                                               | You can run `@coderabbitai generate docstrings` to improve docstring coverage.                                                                                                                                                                                               |\n|     Title Check    | ❓ Inconclusive | The current title “Feature/fixes after coderabbit” is too generic and does not clearly convey the primary scope or specific changes introduced by this pull request, making it difficult for reviewers to understand the main intent at a glance. It does not highlight any particular feature, fix, or component—even though the PR adds project scaffolding, configuration files, policy docs, Docker support, sample code, and tests. As a result, the title fails to provide meaningful context or specificity. | Please update the title to clearly summarize the most important change—for example, “Initial Java microservice scaffold with EditorConfig, Dockerfile, CodeRabbit policy, and sample endpoint”—so that reviewers can immediately understand the pull request’s main purpose. |\n\n</details>\n<details>\n<summary>✅ Passed checks (1 passed)</summary>\n\n|     Check name    | Status   | Explanation                                                 |\n| :---------------: | :------- | :---------------------------------------------------------- |\n| Description Check | ✅ Passed | Check skipped - CodeRabbit’s high-level summary is enabled. |\n\n</details>\n\n<!-- pre_merge_checks_walkthrough_end -->\n\n## Poem\n> I nibble the docs and hop through code,  \n> A Spring Boot burrow now fully bestowed.  \n> Docker hums softly, Maven packs tight,  \n> Tests like clover bloom in the light.  \n> With secrets hush-hush and configs neat,  \n> I thump approval—ship this treat! 🐇🚀\n\n<!-- walkthrough_end -->\n<!-- internal state start -->\n\n\n<!--  -->\n\n<!-- internal state end -->\n<!-- usage_tips_start -->\n\n> [!TIP]\n> <details>\n> <summary>You can generate walkthrough in a markdown collapsible section to save space.</summary>\n> \n> Enable the `reviews.collapse_walkthrough` setting in your project's settings in CodeRabbit to generate walkthrough in a markdown collapsible section.\n> \n> </details>\n\n<!-- usage_tips_end -->\n<!-- finishing_touch_checkbox_start -->\n\n<details>\n<summary>✨ Finishing Touches</summary>\n\n<details>\n<summary>🧪 Generate unit tests</summary>\n\n- [ ] <!-- {\"checkboxId\": \"f47ac10b-58cc-4372-a567-0e02b2c3d479\", \"radioGroupId\": \"utg-output-choice-group-unknown_comment_id\"} -->   Create PR with unit tests\n- [ ] <!-- {\"checkboxId\": \"07f1e7d6-8a8e-4e23-9900-8731c2c87f58\", \"radioGroupId\": \"utg-output-choice-group-unknown_comment_id\"} -->   Post copyable unit tests in a comment\n- [ ] <!-- {\"checkboxId\": \"6ba7b810-9dad-11d1-80b4-00c04fd430c8\", \"radioGroupId\": \"utg-output-choice-group-unknown_comment_id\"} -->   Commit unit tests in branch `feature/fixes-after-coderabbit`\n\n</details>\n\n</details>\n\n<!-- finishing_touch_checkbox_end -->\n<!-- tips_start -->\n\n---\n\n\n\n<sub>Comment `@coderabbitai help` to get the list of available commands and usage tips.</sub>\n\n<!-- tips_end -->",
      "author_association": "NONE",
      "reactions": {
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/issues/comments/3275540819/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "performed_via_github_app": {
        "id": 347564,
        "client_id": "Iv1.6aaafe4fe882736b",
        "slug": "coderabbitai",
        "node_id": "A_kwHOB96YWc4ABU2s",
        "owner": {
          "login": "coderabbitai",
          "id": 132028505,
          "node_id": "O_kgDOB96YWQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/132028505?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/coderabbitai",
          "html_url": "https://github.com/coderabbitai",
          "followers_url": "https://api.github.com/users/coderabbitai/followers",
          "following_url": "https://api.github.com/users/coderabbitai/following{/other_user}",
          "gists_url": "https://api.github.com/users/coderabbitai/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/coderabbitai/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/coderabbitai/subscriptions",
          "organizations_url": "https://api.github.com/users/coderabbitai/orgs",
          "repos_url": "https://api.github.com/users/coderabbitai/repos",
          "events_url": "https://api.github.com/users/coderabbitai/events{/privacy}",
          "received_events_url": "https://api.github.com/users/coderabbitai/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "name": "coderabbitai",
        "description": "# Transforming Code Reviews with AI\r\n\r\n## Features\r\n\r\n**Automated Reviews**: Continuous reviews of the pull requests including incremental commits. \r\n\r\n**Summarization**: Generates high-level summary and a technical walkthrough of the PR changes. \r\n\r\n**Line-by-line review**: Provides line-by-line suggestions committable with one click.\r\n\r\n**Codebase verification**:  Verifies the impact on the overall codebase and identifies missing changes.\r\n\r\n**Insights into your code**:  Ask any questions on your codebase within the pull request \r\n\r\n**Chat about your code** : Chat with the bot around your code. The more you chat, the smarter it gets.\r\n\r\n**Issue Validation**:  Validates the PR against the linked issues and identifies other related issues \r\n\r\n\r\n\r\n",
        "external_url": "https://coderabbit.ai?utm_source=cr_app&utm_medium=github",
        "html_url": "https://github.com/apps/coderabbitai",
        "created_at": "2023-06-14T15:47:27Z",
        "updated_at": "2025-08-21T21:40:57Z",
        "permissions": {
          "actions": "read",
          "checks": "read",
          "contents": "write",
          "discussions": "read",
          "issues": "write",
          "members": "read",
          "metadata": "read",
          "pull_requests": "write",
          "statuses": "write"
        },
        "events": [
          "issues",
          "issue_comment",
          "label",
          "organization",
          "pull_request",
          "pull_request_review",
          "pull_request_review_comment",
          "pull_request_review_thread",
          "release",
          "repository"
        ]
      }
    }
  ],
  "reviewComments": [
    {
      "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337220773",
      "pull_request_review_id": 3206825025,
      "id": 2337220773,
      "node_id": "PRRC_kwDOPtYExc6LTyil",
      "diff_hunk": "@@ -0,0 +1,12 @@\n+FROM eclipse-temurin:21-jdk AS build\n+WORKDIR /app\n+COPY . .\n+RUN ./mvnw -q -DskipTests package || mvn -q -DskipTests package\n+\n+FROM eclipse-temurin:21-jre\n+WORKDIR /app\n+COPY --from=build /app/target/*.jar app.jar\n+EXPOSE 8080\n+ENTRYPOINT [\"java\",\"-jar\",\"/app/app.jar\"]",
      "path": "Dockerfile",
      "commit_id": "2acdf66c19ce5bb1a717dc121acee9d30c5c53fb",
      "original_commit_id": "62eed20e6e70206319db2dbef9a30b15907c0c4b",
      "user": {
        "login": "coderabbitai[bot]",
        "id": 136622811,
        "node_id": "BOT_kgDOCCSy2w",
        "avatar_url": "https://avatars.githubusercontent.com/in/347564?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coderabbitai%5Bbot%5D",
        "html_url": "https://github.com/apps/coderabbitai",
        "followers_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/received_events",
        "type": "Bot",
        "user_view_type": "public",
        "site_admin": false
      },
      "body": "_🛠️ Refactor suggestion_\n\n**Run as non-root and fix file ownership in the runtime image.**\n\nContainers should not run as root; set a dedicated UID and chown the jar.\n\n\n```diff\n-FROM eclipse-temurin:21-jre\n-WORKDIR /app\n-COPY --from=build /app/target/*.jar app.jar\n-EXPOSE 8080\n-ENTRYPOINT [\"java\",\"-jar\",\"/app/app.jar\"]\n+FROM eclipse-temurin:21-jre\n+WORKDIR /app\n+# Create non-root user\n+RUN useradd -r -u 10001 app\n+# Copy jar and set ownership\n+COPY --from=build /app/target/*.jar /app/app.jar\n+RUN chown 10001:0 /app/app.jar\n+USER 10001\n+EXPOSE 8080\n+ENTRYPOINT [\"java\",\"-jar\",\"/app/app.jar\"]\n```\n\n<!-- suggestion_start -->\n\n<details>\n<summary>📝 Committable suggestion</summary>\n\n> ‼️ **IMPORTANT**\n> Carefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation. Thoroughly test & benchmark the code to ensure it meets the requirements.\n\n```suggestion\nFROM eclipse-temurin:21-jre\nWORKDIR /app\n\n# Create non-root user\nRUN useradd -r -u 10001 app\n\n# Copy jar and set ownership\nCOPY --from=build /app/target/*.jar /app/app.jar\nRUN chown 10001:0 /app/app.jar\n\n# Switch to the non-root user\nUSER 10001\n\nEXPOSE 8080\nENTRYPOINT [\"java\",\"-jar\",\"/app/app.jar\"]\n```\n\n</details>\n\n<!-- suggestion_end -->\n\n<details>\n<summary>🤖 Prompt for AI Agents</summary>\n\n```\nIn Dockerfile around lines 6 to 10, the runtime image runs the application as\nroot and doesn't set ownership of the copied jar; create a non-root user (e.g.,\naddgroup/adduser or use groupadd/useradd with a specific UID/GID), chown the\n/app directory and the app.jar to that UID/GID after copying the jar, and switch\nto that user with USER before ENTRYPOINT so the JVM runs unprivileged; ensure\nWORKDIR permissions are correct and use a fixed numeric UID to avoid collisions.\n```\n\n</details>\n\n<!-- fingerprinting:phantom:poseidon:chinchilla -->\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
      "created_at": "2025-09-10T15:57:52Z",
      "updated_at": "2025-09-10T15:57:53Z",
      "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/3#discussion_r2337220773",
      "pull_request_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/3",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337220773"
        },
        "html": {
          "href": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/3#discussion_r2337220773"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/3"
        }
      },
      "reactions": {
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337220773/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "start_line": 6,
      "original_start_line": 6,
      "start_side": "RIGHT",
      "line": 10,
      "original_line": 10,
      "side": "RIGHT",
      "original_position": 10,
      "position": 10,
      "subject_type": "line"
    },
    {
      "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337220780",
      "pull_request_review_id": 3206825025,
      "id": 2337220780,
      "node_id": "PRRC_kwDOPtYExc6LTyis",
      "diff_hunk": "@@ -0,0 +1,70 @@\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <groupId>org</groupId>\n+    <artifactId>code-rabbit-eval-java-microservice</artifactId>\n+    <version>0.1.0-SNAPSHOT</version>\n+    <name>code-rabbit-eval-java-microservice</name>\n+    <description>Spring Boot microservice scaffold to evaluate CodeRabbit</description>\n+\n+    <properties>\n+        <java.version>21</java.version>\n+        <spring-boot.version>3.3.3</spring-boot.version>\n+    </properties>",
      "path": "pom.xml",
      "commit_id": "2acdf66c19ce5bb1a717dc121acee9d30c5c53fb",
      "original_commit_id": "62eed20e6e70206319db2dbef9a30b15907c0c4b",
      "user": {
        "login": "coderabbitai[bot]",
        "id": 136622811,
        "node_id": "BOT_kgDOCCSy2w",
        "avatar_url": "https://avatars.githubusercontent.com/in/347564?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coderabbitai%5Bbot%5D",
        "html_url": "https://github.com/apps/coderabbitai",
        "followers_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/received_events",
        "type": "Bot",
        "user_view_type": "public",
        "site_admin": false
      },
      "body": "_💡 Verification agent_\n\n<details>\n<summary>🧩 Analysis chain</summary>\n\n**Upgrade Spring Boot BOM to pick patched Tomcat; multiple critical CVEs flagged.**\n\nOSV flags critical Tomcat issues via 3.3.3’s transitive set. Bump to the latest 3.3.x patch to consume fixed Tomcat automatically.\n\n\nRun to discover the latest 3.3.x and Tomcat 10.1.x:\n\n\n\n\nAfter confirming, update `<spring-boot.version>` to the latest 3.3.x.\n\n---\n\n🏁 Script executed:\n\n```shell\n#!/bin/bash\nset -euo pipefail\nfor coord in \\\n  \"org/springframework/boot/spring-boot-dependencies\" \\\n  \"org/apache/tomcat/embed/tomcat-embed-core\"\ndo\n  url=\"https://repo1.maven.org/maven2/${coord}/maven-metadata.xml\"\n  echo \"Latest versions for ${coord}:\"\n  curl -s \"$url\" | python - <<'PY'\nimport sys, xml.etree.ElementTree as ET, re\nroot = ET.fromstring(sys.stdin.read())\nversions = [v.text for v in root.findall(\".//version\")]\ndef sort_key(s): return [int(x) if x.isdigit() else x for x in re.split(r'[.-]', s)]\nversions.sort(key=sort_key)\ndef latest_prefix(p): \n    c=[v for v in versions if v.startswith(p)]\n    print(f\"  latest {p}x:\", c[-1] if c else \"n/a\")\nfor p in (\"3.3.\", \"3.4.\", \"10.1.\"):\n    latest_prefix(p)\nprint(\"  latest overall:\", versions[-1])\nPY\ndone\n```\n\nLength of output: 337\n\n---\n\n🏁 Script executed:\n\n```shell\n#!/usr/bin/env bash\nset -euo pipefail\nfor coord in \\\n  \"org/springframework/boot/spring-boot-dependencies\" \\\n  \"org/apache/tomcat/embed/tomcat-embed-core\"\ndo\n  url=\"https://repo1.maven.org/maven2/${coord}/maven-metadata.xml\"\n  echo \"Checking ${url}\"\n  curl -sSI \"${url}\" | sed -e 's/^/> /'\n  echo \"Content preview:\"\n  curl -s \"${url}\" | head -n 20 | sed -e 's/^/> /'\n  echo \"---\"\ndone\n```\n\nLength of output: 1488\n\n---\n\n🏁 Script executed:\n\n```shell\n#!/usr/bin/env bash\nset -euo pipefail\n\nboot_url=\"https://repo1.maven.org/maven2/org/springframework/boot/spring-boot-dependencies/maven-metadata.xml\"\ntomcat_url=\"https://repo1.maven.org/maven2/org/apache/tomcat/embed/tomcat-embed-core/maven-metadata.xml\"\n\necho \"Spring Boot latest 3.3.x:\"\ncurl -s \"$boot_url\" \\\n  | grep -Eo \"<version>3\\.3\\.[0-9]+</version>\" \\\n  | sed -E 's/.*<version>(.*)<\\/version>.*/\\1/' \\\n  | sort -V \\\n  | tail -n1\n\necho \"Tomcat latest 10.1.x:\"\ncurl -s \"$tomcat_url\" \\\n  | grep -Eo \"<version>10\\.1\\.[0-9]+</version>\" \\\n  | sed -E 's/.*<version>(.*)<\\/version>.*/\\1/' \\\n  | sort -V \\\n  | tail -n1\n```\n\nLength of output: 62\n\n---\n\n\n\n</details>\n\n**Update Spring Boot to 3.3.13 to pull in Tomcat 10.1.45 with CVE fixes.**\n\nIn pom.xml properties (lines 11–14), change:\n```diff\n-        <spring-boot.version>3.3.3</spring-boot.version>\n+        <spring-boot.version>3.3.13</spring-boot.version>\n```\nThis ensures the embedded Tomcat is upgraded to 10.1.45, addressing the flagged critical CVEs.\n\n<details>\n<summary>🤖 Prompt for AI Agents</summary>\n\n```\nIn pom.xml around lines 11 to 14, the Spring Boot version property is set to\n3.3.3 which pulls in an older Tomcat; update the <spring-boot.version> property\nvalue to 3.3.13 so the build uses Tomcat 10.1.45 and picks up the CVE fixes,\nthen run a full mvn build (including dependency:tree) to verify Tomcat was\nupgraded and adjust any impacted dependencies if tests fail.\n```\n\n</details>\n\n<!-- fingerprinting:phantom:poseidon:chinchilla -->\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
      "created_at": "2025-09-10T15:57:52Z",
      "updated_at": "2025-09-10T15:57:54Z",
      "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/3#discussion_r2337220780",
      "pull_request_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/3",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337220780"
        },
        "html": {
          "href": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/3#discussion_r2337220780"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/3"
        }
      },
      "reactions": {
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337220780/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "start_line": 11,
      "original_start_line": 11,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT",
      "original_position": 14,
      "position": 14,
      "subject_type": "line"
    },
    {
      "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337220784",
      "pull_request_review_id": 3206825025,
      "id": 2337220784,
      "node_id": "PRRC_kwDOPtYExc6LTyiw",
      "diff_hunk": "@@ -0,0 +1,67 @@\n+# Requires: public repo (no auth) or a GitHub token in $env:GITHUB_TOKEN for higher rate limits\n+param(\n+    [string]$Owner = \"SravanYandrapalli\",\n+    [string]$Repo = \"code-rabbit-eval-java-ms\",\n+    [int]$PrNumber\n+)\n+\n+$ErrorActionPreference = 'Stop'\n+\n+if (-not $PrNumber) {\n+    $prs = Invoke-RestMethod -Headers @{ 'User-Agent'='coderabbit-fetch'; 'Accept'='application/vnd.github+json' } -Uri \"https://api.github.com/repos/$Owner/$Repo/pulls?state=open\"\n+    if (-not $prs) {\n+        $prs = Invoke-RestMethod -Headers @{ 'User-Agent'='coderabbit-fetch'; 'Accept'='application/vnd.github+json' } -Uri \"https://api.github.com/repos/$Owner/$Repo/pulls?state=all&per_page=1&sort=created&direction=desc\"\n+    }\n+    $pr = $prs | Select-Object -First 1\n+    $PrNumber = $pr.number\n+}",
      "path": "scripts/fetch-coderabbit-pr-artifacts.ps1",
      "commit_id": "2acdf66c19ce5bb1a717dc121acee9d30c5c53fb",
      "original_commit_id": "62eed20e6e70206319db2dbef9a30b15907c0c4b",
      "user": {
        "login": "coderabbitai[bot]",
        "id": 136622811,
        "node_id": "BOT_kgDOCCSy2w",
        "avatar_url": "https://avatars.githubusercontent.com/in/347564?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coderabbitai%5Bbot%5D",
        "html_url": "https://github.com/apps/coderabbitai",
        "followers_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/received_events",
        "type": "Bot",
        "user_view_type": "public",
        "site_admin": false
      },
      "body": "_⚠️ Potential issue_\n\n**Guard against missing PRs to avoid null dereference.**\n\nIf no PRs are returned, `$pr` is `$null` and `$pr.number` throws.\n\n\n```diff\n if (-not $PrNumber) {\n   $prs = Invoke-RestMethod -Headers @{ 'User-Agent'='coderabbit-fetch'; 'Accept'='application/vnd.github+json' } -Uri \"https://api.github.com/repos/$Owner/$Repo/pulls?state=open\"\n   if (-not $prs) {\n     $prs = Invoke-RestMethod -Headers @{ 'User-Agent'='coderabbit-fetch'; 'Accept'='application/vnd.github+json' } -Uri \"https://api.github.com/repos/$Owner/$Repo/pulls?state=all&per_page=1&sort=created&direction=desc\"\n   }\n-  $pr = $prs | Select-Object -First 1\n-  $PrNumber = $pr.number\n+  $pr = $prs | Select-Object -First 1\n+  if (-not $pr) {\n+    throw \"No pull requests found for $Owner/$Repo.\"\n+  }\n+  $PrNumber = $pr.number\n }\n```\n\n<!-- suggestion_start -->\n\n<details>\n<summary>📝 Committable suggestion</summary>\n\n> ‼️ **IMPORTANT**\n> Carefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation. Thoroughly test & benchmark the code to ensure it meets the requirements.\n\n```suggestion\nif (-not $PrNumber) {\n    $prs = Invoke-RestMethod -Headers @{ 'User-Agent'='coderabbit-fetch'; 'Accept'='application/vnd.github+json' } `\n        -Uri \"https://api.github.com/repos/$Owner/$Repo/pulls?state=open\"\n    if (-not $prs) {\n        $prs = Invoke-RestMethod -Headers @{ 'User-Agent'='coderabbit-fetch'; 'Accept'='application/vnd.github+json' } `\n            -Uri \"https://api.github.com/repos/$Owner/$Repo/pulls?state=all&per_page=1&sort=created&direction=desc\"\n    }\n    $pr = $prs | Select-Object -First 1\n    if (-not $pr) {\n        throw \"No pull requests found for $Owner/$Repo.\"\n    }\n    $PrNumber = $pr.number\n}\n```\n\n</details>\n\n<!-- suggestion_end -->\n\n<details>\n<summary>🤖 Prompt for AI Agents</summary>\n\n```\nIn scripts/fetch-coderabbit-pr-artifacts.ps1 around lines 10 to 17, the code\nassumes $prs contains at least one PR and directly accesses $pr.number which can\ncause a null dereference if no PRs are returned; add a guard after selecting $pr\nthat checks if $pr is $null (or $prs is empty), and if so emit a helpful error\nor warning and exit/return with a non-zero status (or set a safe default),\notherwise set $PrNumber = $pr.number—ensure the flow clearly handles the \"no PRs\nfound\" case instead of dereferencing $null.\n```\n\n</details>\n\n<!-- fingerprinting:phantom:poseidon:chinchilla -->\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
      "created_at": "2025-09-10T15:57:52Z",
      "updated_at": "2025-09-10T15:57:54Z",
      "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/3#discussion_r2337220784",
      "pull_request_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/3",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337220784"
        },
        "html": {
          "href": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/3#discussion_r2337220784"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/3"
        }
      },
      "reactions": {
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337220784/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 17,
      "original_line": 17,
      "side": "RIGHT",
      "original_position": 17,
      "position": 17,
      "subject_type": "line"
    },
    {
      "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337220790",
      "pull_request_review_id": 3206825025,
      "id": 2337220790,
      "node_id": "PRRC_kwDOPtYExc6LTyi2",
      "diff_hunk": "@@ -0,0 +1,67 @@\n+# Requires: public repo (no auth) or a GitHub token in $env:GITHUB_TOKEN for higher rate limits\n+param(\n+    [string]$Owner = \"SravanYandrapalli\",\n+    [string]$Repo = \"code-rabbit-eval-java-ms\",\n+    [int]$PrNumber\n+)\n+\n+$ErrorActionPreference = 'Stop'\n+\n+if (-not $PrNumber) {\n+    $prs = Invoke-RestMethod -Headers @{ 'User-Agent'='coderabbit-fetch'; 'Accept'='application/vnd.github+json' } -Uri \"https://api.github.com/repos/$Owner/$Repo/pulls?state=open\"\n+    if (-not $prs) {\n+        $prs = Invoke-RestMethod -Headers @{ 'User-Agent'='coderabbit-fetch'; 'Accept'='application/vnd.github+json' } -Uri \"https://api.github.com/repos/$Owner/$Repo/pulls?state=all&per_page=1&sort=created&direction=desc\"\n+    }\n+    $pr = $prs | Select-Object -First 1\n+    $PrNumber = $pr.number\n+}\n+\n+$headers = @{ 'User-Agent'='coderabbit-fetch'; 'Accept'='application/vnd.github+json' }\n+if ($env:GITHUB_TOKEN) {\n+    $headers.Authorization = \"Bearer $($env:GITHUB_TOKEN)\"\n+}\n+\n+New-Item -ItemType Directory -Force -Path 'docs/CodeReview/pr1-suggested-patches' | Out-Null\n+",
      "path": "scripts/fetch-coderabbit-pr-artifacts.ps1",
      "commit_id": "2acdf66c19ce5bb1a717dc121acee9d30c5c53fb",
      "original_commit_id": "62eed20e6e70206319db2dbef9a30b15907c0c4b",
      "user": {
        "login": "coderabbitai[bot]",
        "id": 136622811,
        "node_id": "BOT_kgDOCCSy2w",
        "avatar_url": "https://avatars.githubusercontent.com/in/347564?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coderabbitai%5Bbot%5D",
        "html_url": "https://github.com/apps/coderabbitai",
        "followers_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/received_events",
        "type": "Bot",
        "user_view_type": "public",
        "site_admin": false
      },
      "body": "_🛠️ Refactor suggestion_\n\n**Remove hard-coded “pr1*” outputs; make filenames per-PR to avoid overwrites.**\n\nWrite artifacts under docs/CodeReview/pr$PrNumber-*. Also ensure parent dir exists.\n\n\n```diff\n-New-Item -ItemType Directory -Force -Path 'docs/CodeReview/pr1-suggested-patches' | Out-Null\n+New-Item -ItemType Directory -Force -Path 'docs/CodeReview' | Out-Null\n+$outPrefix = \"docs/CodeReview/pr$PrNumber\"\n+New-Item -ItemType Directory -Force -Path \"$outPrefix-suggested-patches\" | Out-Null\n```\n\n```diff\n-$obj | ConvertTo-Json -Depth 12 | Out-File -Encoding UTF8 'docs/CodeReview/pr1-coderabbit-report.json'\n+$obj | ConvertTo-Json -Depth 12 | Out-File -Encoding UTF8 \"$outPrefix-coderabbit-report.json\"\n```\n\n```diff\n-$lines -join \"`n\" | Out-File -Encoding UTF8 'docs/CodeReview/pr1-coderabbit-summary.md'\n-Write-Host \"Saved docs/CodeReview/pr1-coderabbit-report.json and docs/CodeReview/pr1-coderabbit-summary.md for PR #$PrNumber\"\n+$lines -join \"`n\" | Out-File -Encoding UTF8 \"$outPrefix-coderabbit-summary.md\"\n+Write-Host \"Saved $outPrefix-coderabbit-report.json and $outPrefix-coderabbit-summary.md for PR #$PrNumber\"\n```\n\n\nAlso applies to: 41-41, 66-67\n\n<details>\n<summary>🤖 Prompt for AI Agents</summary>\n\n```\nIn scripts/fetch-coderabbit-pr-artifacts.ps1 around lines 24-25 (and also update\noccurrences at 41 and 66-67), replace the hard-coded 'pr1' output paths with\nper-PR paths using a $PrNumber variable (e.g. docs/CodeReview/pr$PrNumber-*) so\nfiles are unique per PR; ensure the parent directory docs/CodeReview exists\nbefore creating or writing files (create it with Force if missing), and update\nall file creation and output path usages at the listed lines to build filenames\nwith the $PrNumber variable (use Join-Path or string interpolation consistently)\nto prevent overwrites.\n```\n\n</details>\n\n<!-- fingerprinting:phantom:poseidon:chinchilla -->\n\n<!-- This is an auto-generated comment by CodeRabbit -->\n\n✅ Addressed in commit 2acdf66",
      "created_at": "2025-09-10T15:57:52Z",
      "updated_at": "2025-09-10T16:06:00Z",
      "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/3#discussion_r2337220790",
      "pull_request_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/3",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337220790"
        },
        "html": {
          "href": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/3#discussion_r2337220790"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/3"
        }
      },
      "reactions": {
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337220790/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "start_line": 24,
      "original_start_line": 24,
      "start_side": "RIGHT",
      "line": 25,
      "original_line": 25,
      "side": "RIGHT",
      "original_position": 25,
      "position": 25,
      "subject_type": "line"
    },
    {
      "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337220797",
      "pull_request_review_id": 3206825025,
      "id": 2337220797,
      "node_id": "PRRC_kwDOPtYExc6LTyi9",
      "diff_hunk": "@@ -0,0 +1,23 @@\n+package org.configuration;\n+\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.annotation.Configuration;\n+\n+/**\n+ * Central application configuration and environment-derived settings.\n+ */\n+@Configuration\n+public class AppConfig {\n+\n+    @Value(\"${APP_SECRET:}\")\n+    private String appSecret;",
      "path": "src/main/java/org/configuration/AppConfig.java",
      "commit_id": "2acdf66c19ce5bb1a717dc121acee9d30c5c53fb",
      "original_commit_id": "62eed20e6e70206319db2dbef9a30b15907c0c4b",
      "user": {
        "login": "coderabbitai[bot]",
        "id": 136622811,
        "node_id": "BOT_kgDOCCSy2w",
        "avatar_url": "https://avatars.githubusercontent.com/in/347564?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coderabbitai%5Bbot%5D",
        "html_url": "https://github.com/apps/coderabbitai",
        "followers_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/received_events",
        "type": "Bot",
        "user_view_type": "public",
        "site_admin": false
      },
      "body": "_🛠️ Refactor suggestion_\n\n**Bind to the canonical property key, not the env var name.**\n\nUse `app.secret` (mapped from APP_SECRET) to leverage Spring’s relaxed binding and config files.\n\n\n```diff\n-    @Value(\"${APP_SECRET:}\")\n+    @Value(\"${app.secret:}\")\n     private String appSecret;\n```\n\n<!-- suggestion_start -->\n\n<details>\n<summary>📝 Committable suggestion</summary>\n\n> ‼️ **IMPORTANT**\n> Carefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation. Thoroughly test & benchmark the code to ensure it meets the requirements.\n\n```suggestion\n    @Value(\"${app.secret:}\")\n    private String appSecret;\n```\n\n</details>\n\n<!-- suggestion_end -->\n\n<details>\n<summary>🤖 Prompt for AI Agents</summary>\n\n```\nIn src/main/java/org/configuration/AppConfig.java around lines 12-13, the field\nis bound to the raw env var name (APP_SECRET) instead of the canonical Spring\nproperty key; change the @Value to use the property key \"app.secret\" (i.e., bind\nto ${app.secret:}) so Spring’s relaxed binding and config-file support apply\n(optionally support backwards compatibility by nesting the env var as a fallback\nlike ${app.secret:${APP_SECRET:}}).\n```\n\n</details>\n\n<!-- fingerprinting:phantom:poseidon:chinchilla -->\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
      "created_at": "2025-09-10T15:57:52Z",
      "updated_at": "2025-09-10T15:57:54Z",
      "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/3#discussion_r2337220797",
      "pull_request_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/3",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337220797"
        },
        "html": {
          "href": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/3#discussion_r2337220797"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/3"
        }
      },
      "reactions": {
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337220797/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "start_line": 12,
      "original_start_line": 12,
      "start_side": "RIGHT",
      "line": 13,
      "original_line": 13,
      "side": "RIGHT",
      "original_position": 13,
      "position": 13,
      "subject_type": "line"
    },
    {
      "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337220800",
      "pull_request_review_id": 3206825025,
      "id": 2337220800,
      "node_id": "PRRC_kwDOPtYExc6LTyjA",
      "diff_hunk": "@@ -0,0 +1,22 @@\n+package org.api;\n+\n+import org.junit.jupiter.api.Test;\n+import org.model.User;\n+import org.service.UserService;\n+import org.springframework.http.ResponseEntity;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+public class UserControllerTest {\n+\n+    @Test\n+    public void getUserById_shouldReturnOk_whenUserExists() {\n+        UserService mockService = new UserService();\n+        UserController controller = new UserController(mockService);\n+        ResponseEntity<User> response = controller.getUserById(\"123\");",
      "path": "src/test/java/org/api/UserControllerTest.java",
      "commit_id": "2acdf66c19ce5bb1a717dc121acee9d30c5c53fb",
      "original_commit_id": "62eed20e6e70206319db2dbef9a30b15907c0c4b",
      "user": {
        "login": "coderabbitai[bot]",
        "id": 136622811,
        "node_id": "BOT_kgDOCCSy2w",
        "avatar_url": "https://avatars.githubusercontent.com/in/347564?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coderabbitai%5Bbot%5D",
        "html_url": "https://github.com/apps/coderabbitai",
        "followers_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/received_events",
        "type": "Bot",
        "user_view_type": "public",
        "site_admin": false
      },
      "body": "_💡 Verification agent_\n\n<details>\n<summary>🧩 Analysis chain</summary>\n\n**Verify `UserService` constructor signature.**\n\nIf `UserService` requires `AppConfig`, `new UserService()` will not compile—inject a stub or supply the dependency.\n\n---\n\n🏁 Script executed:\n\n```shell\n#!/bin/bash\n# Inspect UserService constructors and controller ctor usage\nrg -n -C2 'class\\s+UserService\\b|public\\s+UserService\\s*\\(' --type=java\n```\n\nLength of output: 713\n\n---\n\n\n\n</details>\n\n**Provide valid UserService instantiation in test**  \nIn `src/test/java/org/api/UserControllerTest.java` (lines 14–16), `UserService` only defines `public UserService(AppConfig)`, so `new UserService()` won’t compile. Replace it with either a mock or supply an `AppConfig`, for example:  \n```java\nUserService mockService = mock(UserService.class);\n// or\nUserService mockService = new UserService(new AppConfig());\n```\n\n<details>\n<summary>🤖 Prompt for AI Agents</summary>\n\n```\nIn src/test/java/org/api/UserControllerTest.java around lines 14 to 16, the test\nconstructs UserService with a no-arg constructor that doesn't exist; replace the\ninvalid instantiation by either creating a Mockito mock of UserService or by\ncalling the real constructor with a valid AppConfig (e.g., new UserService(new\nAppConfig())), and adjust the test to stub expected service methods when using\nthe mock so the controller call returns predictable data.\n```\n\n</details>\n\n<!-- fingerprinting:phantom:poseidon:chinchilla -->\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
      "created_at": "2025-09-10T15:57:52Z",
      "updated_at": "2025-09-10T15:57:54Z",
      "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/3#discussion_r2337220800",
      "pull_request_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/3",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337220800"
        },
        "html": {
          "href": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/3#discussion_r2337220800"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/3"
        }
      },
      "reactions": {
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337220800/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "start_line": 14,
      "original_start_line": 14,
      "start_side": "RIGHT",
      "line": 16,
      "original_line": 16,
      "side": "RIGHT",
      "original_position": 16,
      "position": 16,
      "subject_type": "line"
    },
    {
      "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337220811",
      "pull_request_review_id": 3206825025,
      "id": 2337220811,
      "node_id": "PRRC_kwDOPtYExc6LTyjL",
      "diff_hunk": "@@ -0,0 +1,12 @@\n+server:\n+  port: 8080\n+\n+app:\n+  # Placeholder. Configure via environment variable APP_SECRET.\n+  secret: ${APP_SECRET:}\n+\n+spring:\n+  application:\n+    name: code-rabbit-eval-java-microservice",
      "path": "target/classes/application.yml",
      "commit_id": "2acdf66c19ce5bb1a717dc121acee9d30c5c53fb",
      "original_commit_id": "62eed20e6e70206319db2dbef9a30b15907c0c4b",
      "user": {
        "login": "coderabbitai[bot]",
        "id": 136622811,
        "node_id": "BOT_kgDOCCSy2w",
        "avatar_url": "https://avatars.githubusercontent.com/in/347564?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coderabbitai%5Bbot%5D",
        "html_url": "https://github.com/apps/coderabbitai",
        "followers_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/received_events",
        "type": "Bot",
        "user_view_type": "public",
        "site_admin": false
      },
      "body": "_🛠️ Refactor suggestion_\n\n**Do not commit build artifacts (target/*).**\n\nThis file should be generated, not versioned. Commiting it risks drift and accidental leaks.\n\n\nActions:\n- Delete target/classes/application.yml from VCS.\n- Add target/ to .gitignore:\n\n```gitignore\n# Maven\ntarget/\n```\n\n<details>\n<summary>🤖 Prompt for AI Agents</summary>\n\n```\nIn target/classes/application.yml (lines 1-10): this is a generated build\nartifact and must be removed from version control; delete\ntarget/classes/application.yml from the repo, add target/ to .gitignore (e.g.,\nadd a line \"target/\" under the Maven section), and commit the .gitignore change\nso the target directory and its generated files are no longer tracked.\n```\n\n</details>\n\n<!-- fingerprinting:phantom:poseidon:chinchilla -->\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
      "created_at": "2025-09-10T15:57:53Z",
      "updated_at": "2025-09-10T15:57:54Z",
      "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/3#discussion_r2337220811",
      "pull_request_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/3",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337220811"
        },
        "html": {
          "href": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/3#discussion_r2337220811"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/3"
        }
      },
      "reactions": {
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337220811/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "start_line": 1,
      "original_start_line": 1,
      "start_side": "RIGHT",
      "line": 10,
      "original_line": 10,
      "side": "RIGHT",
      "original_position": 10,
      "position": 10,
      "subject_type": "line"
    }
  ],
  "reviews": [
    {
      "id": 3206825025,
      "node_id": "PRR_kwDOPtYExc6_JERB",
      "user": {
        "login": "coderabbitai[bot]",
        "id": 136622811,
        "node_id": "BOT_kgDOCCSy2w",
        "avatar_url": "https://avatars.githubusercontent.com/in/347564?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coderabbitai%5Bbot%5D",
        "html_url": "https://github.com/apps/coderabbitai",
        "followers_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/received_events",
        "type": "Bot",
        "user_view_type": "public",
        "site_admin": false
      },
      "body": "**Actionable comments posted: 7**\n\n<details>\n<summary>🧹 Nitpick comments (21)</summary><blockquote>\n\n<details>\n<summary>.github/pull_request_template.md (1)</summary><blockquote>\n\n`1-57`: **Deduplicate template and add code fence language (fixes MD040).**\n\nThe block is duplicated (Lines 28–55). Also, fenced code blocks should declare a language.\n\n\nApply:\n\n```diff\n-### CodeRabbit requests\n-- Please run a full analysis with the following team rules:\n-```\n-coverage: core-modules >= 80%\n-no-hardcoded-secrets: true\n-folder-naming: enforce\n-forbid-system-out: true\n-formatting: enforce\n-javadoc-required: public-members\n-secrets-by-env: true\n-security-checks: high\n-exception-handling: no-silence\n-thread-safety-checks: enabled\n-```\n+### CodeRabbit requests\n+- Please run a full analysis with the following team rules:\n+```yaml\n+coverage: core-modules >= 80%\n+no-hardcoded-secrets: true\n+folder-naming: enforce\n+forbid-system-out: true\n+formatting: enforce\n+javadoc-required: public-members\n+secrets-by-env: true\n+security-checks: high\n+exception-handling: no-silence\n+thread-safety-checks: enabled\n+```\n@@\n-### Purpose\n-Evaluate CodeRabbit on a typical Java/Spring microservice.\n-\n-### Notes\n-- This PR may intentionally contain issues (see README) to exercise CodeRabbit.\n-\n-### CodeRabbit requests\n-- Please run a full analysis with the following team rules:\n-```\n-coverage: core-modules >= 80%\n-no-hardcoded-secrets: true\n-folder-naming: enforce\n-forbid-system-out: true\n-formatting: enforce\n-javadoc-required: public-members\n-secrets-by-env: true\n-security-checks: high\n-exception-handling: no-silence\n-thread-safety-checks: enabled\n-```\n-\n-### Artifacts\n-Please save artifacts into the repo:\n-- docs/CodeReview/pr1-coderabbit-report.json\n-- docs/CodeReview/pr1-coderabbit-summary.md\n-- docs/CodeReview/pr1-suggested-patches/\n```\n\n</blockquote></details>\n<details>\n<summary>.editorconfig (1)</summary><blockquote>\n\n`11-12`: **YAML indentation override (common convention).**\n\nYAML typically uses 2 spaces; add an override without impacting Java/Markdown.\n\n\n```diff\n [*.md]\n trim_trailing_whitespace = false\n+\n+[*.yml]\n+indent_size = 2\n+[*.yaml]\n+indent_size = 2\n```\n\n</blockquote></details>\n<details>\n<summary>docs/CodeReview/test-coverage-summary.md (1)</summary><blockquote>\n\n`1-8`: **Convert stub to CI-generated report or clearly label as non-source-of-truth.**\n\nIf this is illustrative only, ensure CI overwrites it with JaCoCo output or move it under docs/examples to avoid drift.\n\n\nWould you like a minimal JaCoCo + Maven config snippet to publish an HTML/CSV summary to docs/CodeReview during CI?\n\n</blockquote></details>\n<details>\n<summary>src/main/java/org/validator/UserValidator.java (2)</summary><blockquote>\n\n`10-12`: **Trim before length check to avoid rejecting otherwise valid IDs.**\n\nCounts should typically apply to trimmed IDs.\n\n\n```diff\n-    public static boolean isValidUserId(String id) {\n-        return StringUtils.hasText(id) && id.length() <= 64;\n-    }\n+    public static boolean isValidUserId(String id) {\n+        return StringUtils.hasText(id) && id.trim().length() <= 64;\n+    }\n```\n\nOptionally enforce an allowlist (e.g., `^[A-Za-z0-9_-]{1,64}$`) if IDs must exclude spaces or special chars.\n\n\nI can add unit tests covering null/blank, whitespace-only, exactly 64 chars, >64, and invalid chars. Want a PR patch?\n\n---\n\n`8-13`: **Make utility class non-instantiable.**\n\nPrevent accidental construction.\n\n\n```diff\n public class UserValidator {\n \n+    private UserValidator() { /* utility class */ }\n+\n     public static boolean isValidUserId(String id) {\n         return StringUtils.hasText(id) && id.length() <= 64;\n     }\n }\n```\n\n</blockquote></details>\n<details>\n<summary>pom.xml (2)</summary><blockquote>\n\n`50-65`: **Add enforcer to catch Java/Maven/version drift and duplicate classes.**\n\nImproves build hygiene and prevents accidental downgrades.\n\n\n```diff\n         <plugins>\n             <plugin>\n                 <groupId>org.springframework.boot</groupId>\n                 <artifactId>spring-boot-maven-plugin</artifactId>\n             </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-enforcer-plugin</artifactId>\n+                <version>3.4.1</version>\n+                <executions>\n+                    <execution>\n+                        <id>enforce</id>\n+                        <goals><goal>enforce</goal></goals>\n+                        <configuration>\n+                            <rules>\n+                                <requireMavenVersion>\n+                                    <version>[3.8,)</version>\n+                                </requireMavenVersion>\n+                                <requireJavaVersion>\n+                                    <version>[21,)</version>\n+                                </requireJavaVersion>\n+                                <banDuplicateClasses/>\n+                            </rules>\n+                        </configuration>\n+                    </execution>\n+                </executions>\n+            </plugin>\n             <plugin>\n                 <groupId>org.apache.maven.plugins</groupId>\n                 <artifactId>maven-compiler-plugin</artifactId>\n                 <version>3.11.0</version>\n                 <configuration>\n                     <source>${java.version}</source>\n                     <target>${java.version}</target>\n                 </configuration>\n             </plugin>\n         </plugins>\n```\n\n---\n\n`39-42`: **Verify need for explicit commons-io version.**\n\nIf not required for a fix, consider deferring to the Spring Boot BOM for version alignment; otherwise, pin to the latest secure patch and document the rationale.\n\n</blockquote></details>\n<details>\n<summary>Dockerfile (2)</summary><blockquote>\n\n`3-4`: **Improve build caching and ensure wrapper reliability.**\n\nCache dependencies by copying pom/.mvn first; avoid falling back to mvn (not installed in base).\n\n\n```diff\n-COPY . .\n-RUN ./mvnw -q -DskipTests package || mvn -q -DskipTests package\n+COPY .mvn/ .mvn/\n+COPY mvnw pom.xml ./\n+RUN chmod +x mvnw && ./mvnw -q -DskipTests dependency:go-offline\n+COPY src ./src\n+RUN ./mvnw -q -DskipTests package\n```\n\n---\n\n`1-1`: **Add a .dockerignore to shrink context and speed builds.**\n\nExclude target/, .git, docs, and local files from the build context.\n\n\nI can draft a .dockerignore if you want.\n\n</blockquote></details>\n<details>\n<summary>README.md (1)</summary><blockquote>\n\n`13-13`: **Specify a language for the fenced code block (markdownlint MD040).**\n\nUse a neutral language like text for the project layout block.\n\n\n```diff\n-```\n+```text\n```\n\n</blockquote></details>\n<details>\n<summary>docs/CodeReview/pr1-coderabbit-summary.md (2)</summary><blockquote>\n\n`3-3`: **Fix bare URL (markdownlint MD034).**\n\nWrap the PR URL in angle brackets.\n\n\n```diff\n-PR URL: https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1\n+PR URL: <https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1>\n```\n\n---\n\n`10-11`: **Trim spaces inside inline code spans (markdownlint MD038).**\n\nRemove leading/trailing spaces inside `…` spans in these lines.\n\n</blockquote></details>\n<details>\n<summary>src/main/java/org/configuration/AppConfig.java (1)</summary><blockquote>\n\n`6-20`: **Consider @ConfigurationProperties + validation for secrets.**\n\nPrefer type-safe binding with fail-fast validation (e.g., @NotBlank) over field @Value.\n\n\nI can provide a minimal `@ConfigurationProperties(prefix=\"app\")` example with `@Validated` if you want.\n\n</blockquote></details>\n<details>\n<summary>src/test/java/org/api/UserControllerTest.java (1)</summary><blockquote>\n\n`12-19`: **Add a 404/invalid-id test for the controller.**\n\nCover the negative path to assert NOT_FOUND for unknown IDs.\n\n\nI can draft the additional test.\n\n</blockquote></details>\n<details>\n<summary>CODERABBIT_POLICY.md (1)</summary><blockquote>\n\n`3-14`: **Add YAML language to fenced block for clarity and lint compliance**\n\nSpecify the language for the policy snippet to satisfy linters and enable syntax highlighting.\n\n\n```diff\n-```\n+```yaml\n coverage: core-modules >= 80%  # require 80% unit-test coverage for core modules (service, validator, api)\n no-hardcoded-secrets: true     # flag any literal-looking secrets (password=, secret=, API_KEY, etc.)\n folder-naming: enforce         # repo must match src/main/java/org/{api,model,service,validator,configuration} exactly (case-sensitive)\n forbid-system-out: true        # System.out.println usage is forbidden; prefer a logger\n formatting: enforce            # apply/prefer consistent formatting rules (Java standard)\n javadoc-required: public-members\n secrets-by-env: true           # secrets/config sensitive values must come from env or config (no literals)\n security-checks: high          # run SCA and flag suspicious dependency versions and common security antipatterns\n exception-handling: no-silence # flag empty or overly-broad exception swallowing\n thread-safety-checks: enabled  # detect unsafe static mutability or concurrency issues\n-```\n+```\n```\n\n</blockquote></details>\n<details>\n<summary>src/main/java/org/service/UserService.java (2)</summary><blockquote>\n\n`36-51`: **Normalize IDs before caching to avoid duplicate keys caused by whitespace**\n\nTrim the incoming id to prevent “ A1” vs “A1” producing different cache entries.\n\n\n```diff\n     public User findUserById(String id) {\n         if (id == null || id.isBlank()) {\n             throw new IllegalArgumentException(\"id must be provided\");\n         }\n \n-        // Access secret from configuration (never log the actual value)\n+        // Normalize key\n+        final String normalizedId = id.trim();\n+\n+        // Access secret from configuration (never log the actual value)\n         if (appConfig.getAppSecret() == null || appConfig.getAppSecret().isEmpty()) {\n             log.debug(\"APP_SECRET is not set; proceeding with default behavior\");\n         }\n \n         // Simple cache fetch or compute\n-        return userIdToUserCache.computeIfAbsent(id, key -> {\n-            log.info(\"Creating new user in cache for id={}\", key);\n-            return new User(key, \"User \" + key, key + \"@example.com\");\n+        return userIdToUserCache.computeIfAbsent(normalizedId, key -> {\n+            log.debug(\"Creating new user in cache for id={}\", key);\n+            return new User(key, \"User \" + key, key + \"@example.com\");\n         });\n     }\n```\n\n---\n\n`41-44`: **Warn-once for missing APP_SECRET instead of per-call check**\n\nMove the missing-secret debug log to a post-construction hook to avoid repetitive logs on hot paths.\n\n\nAdd this method to the class:\n\n```java\n@jakarta.annotation.PostConstruct\nvoid warnIfSecretMissing() {\n    if (appConfig.getAppSecret() == null || appConfig.getAppSecret().isEmpty()) {\n        log.debug(\"APP_SECRET is not set; proceeding with default behavior\");\n    }\n}\n```\n\n</blockquote></details>\n<details>\n<summary>src/test/java/org/service/UserServiceTest.java (1)</summary><blockquote>\n\n`9-27`: **Add tests for null id and distinct keys**\n\nBroaden coverage: null id should throw; different ids should yield different instances.\n\n\n```diff\n public class UserServiceTest {\n@@\n     public void findUserById_blankId_shouldThrow() {\n         AppConfig cfg = new AppConfig();\n         UserService svc = new UserService(cfg);\n         assertThrows(IllegalArgumentException.class, () -> svc.findUserById(\" \"));\n     }\n+\n+    @Test\n+    public void findUserById_nullId_shouldThrow() {\n+        AppConfig cfg = new AppConfig();\n+        UserService svc = new UserService(cfg);\n+        assertThrows(IllegalArgumentException.class, () -> svc.findUserById(null));\n+    }\n+\n+    @Test\n+    public void findUserById_differentIds_shouldNotReturnSameInstance() {\n+        AppConfig cfg = new AppConfig();\n+        UserService svc = new UserService(cfg);\n+        User u1 = svc.findUserById(\"A1\");\n+        User u2 = svc.findUserById(\"B2\");\n+        assertNotSame(u1, u2);\n+    }\n }\n```\n\n</blockquote></details>\n<details>\n<summary>src/main/java/org/api/UserController.java (1)</summary><blockquote>\n\n`35-42`: **Remove unreachable 404 branch (service never returns null)**\n\n`UserService.findUserById` always returns a placeholder; the 404 path is dead code.\n\n\n```diff\n     @GetMapping(\"/{id}\")\n     public ResponseEntity<User> getUserById(@PathVariable(\"id\") @NotBlank String id) {\n-        log.info(\"Fetching user with id={}\", id);\n+        log.debug(\"Fetching user with id={}\", id);\n         User user = userService.findUserById(id);\n-        if (user == null) {\n-            return ResponseEntity.notFound().build();\n-        }\n         return ResponseEntity.ok(user);\n     }\n```\n\n</blockquote></details>\n<details>\n<summary>docs/PR1_DESCRIPTION.md (1)</summary><blockquote>\n\n`12-23`: **Annotate fenced block with YAML to satisfy MD040**\n\nmarkdownlint flagged missing language; declare yaml for readability and CI lint compliance.\n\n\n```diff\n-```\n+```yaml\n coverage: core-modules >= 80%\n no-hardcoded-secrets: true\n folder-naming: enforce\n forbid-system-out: true\n formatting: enforce\n javadoc-required: public-members\n secrets-by-env: true\n security-checks: high\n exception-handling: no-silence\n thread-safety-checks: enabled\n ```\n```\n\n</blockquote></details>\n<details>\n<summary>src/main/java/org/model/User.java (1)</summary><blockquote>\n\n`8-42`: **Consider Java 21 record for immutability and less boilerplate**\n\nIf mutability isn’t required, a record improves clarity and thread-safety characteristics.\n\n\nExample:\n```java\npublic record User(String id, String name, String email) {}\n```\n\nIf keeping the class, optionally add bean validation hints on fields or setters (e.g., @NotBlank on id, @Email on email) to aid downstream validation.\n\n</blockquote></details>\n\n</blockquote></details>\n\n<details>\n<summary>📜 Review details</summary>\n\n**Configuration used**: CodeRabbit UI\n\n**Review profile**: CHILL\n\n**Plan**: Pro\n\n<details>\n<summary>📥 Commits</summary>\n\nReviewing files that changed from the base of the PR and between 5942b79abdc7a5eafd0c052d752e0b2ea1c6390b and 62eed20e6e70206319db2dbef9a30b15907c0c4b.\n\n</details>\n\n<details>\n<summary>⛔ Files ignored due to path filters (9)</summary>\n\n* `target/classes/org/Application.class` is excluded by `!**/*.class`\n* `target/classes/org/api/UserController.class` is excluded by `!**/*.class`\n* `target/classes/org/configuration/AppConfig.class` is excluded by `!**/*.class`\n* `target/classes/org/model/User.class` is excluded by `!**/*.class`\n* `target/classes/org/service/UserService.class` is excluded by `!**/*.class`\n* `target/classes/org/validator/UserValidator.class` is excluded by `!**/*.class`\n* `target/test-classes/org/api/UserControllerTest.class` is excluded by `!**/*.class`\n* `target/test-classes/org/model/UserTest.class` is excluded by `!**/*.class`\n* `target/test-classes/org/service/UserServiceTest.class` is excluded by `!**/*.class`\n\n</details>\n\n<details>\n<summary>📒 Files selected for processing (22)</summary>\n\n* `.editorconfig` (1 hunks)\n* `.github/pull_request_template.md` (1 hunks)\n* `CODERABBIT_POLICY.md` (1 hunks)\n* `Dockerfile` (1 hunks)\n* `README.md` (1 hunks)\n* `docs/CodeReview/.gitkeep` (1 hunks)\n* `docs/CodeReview/pr1-coderabbit-summary.md` (1 hunks)\n* `docs/CodeReview/test-coverage-summary.md` (1 hunks)\n* `docs/PR1_DESCRIPTION.md` (1 hunks)\n* `pom.xml` (1 hunks)\n* `scripts/fetch-coderabbit-pr-artifacts.ps1` (1 hunks)\n* `src/main/java/org/Application.java` (1 hunks)\n* `src/main/java/org/api/UserController.java` (1 hunks)\n* `src/main/java/org/configuration/AppConfig.java` (1 hunks)\n* `src/main/java/org/model/User.java` (1 hunks)\n* `src/main/java/org/service/UserService.java` (1 hunks)\n* `src/main/java/org/validator/UserValidator.java` (1 hunks)\n* `src/main/resources/application.yml` (1 hunks)\n* `src/test/java/org/api/UserControllerTest.java` (1 hunks)\n* `src/test/java/org/model/UserTest.java` (1 hunks)\n* `src/test/java/org/service/UserServiceTest.java` (1 hunks)\n* `target/classes/application.yml` (1 hunks)\n\n</details>\n\n<details>\n<summary>🧰 Additional context used</summary>\n\n<details>\n<summary>🧬 Code graph analysis (4)</summary>\n\n<details>\n<summary>src/main/java/org/service/UserService.java (1)</summary><blockquote>\n\n<details>\n<summary>src/main/java/org/model/User.java (1)</summary>\n\n* `User` (8-42)\n\n</details>\n\n</blockquote></details>\n<details>\n<summary>src/test/java/org/service/UserServiceTest.java (1)</summary><blockquote>\n\n<details>\n<summary>src/main/java/org/model/User.java (1)</summary>\n\n* `User` (8-42)\n\n</details>\n\n</blockquote></details>\n<details>\n<summary>src/test/java/org/api/UserControllerTest.java (1)</summary><blockquote>\n\n<details>\n<summary>src/main/java/org/model/User.java (1)</summary>\n\n* `User` (8-42)\n\n</details>\n\n</blockquote></details>\n<details>\n<summary>src/main/java/org/api/UserController.java (1)</summary><blockquote>\n\n<details>\n<summary>src/main/java/org/model/User.java (1)</summary>\n\n* `User` (8-42)\n\n</details>\n\n</blockquote></details>\n\n</details><details>\n<summary>🪛 OSV Scanner (2.1.0)</summary>\n\n<details>\n<summary>pom.xml</summary>\n\n[HIGH] 1-1: net.minidev:json-smart 2.5.1: Netplex Json-smart Uncontrolled Recursion vulnerability\n\n(GHSA-pq2g-wx69-c263)\n\n---\n\n[CRITICAL] 1-1: org.apache.tomcat.embed:tomcat-embed-core 10.1.28: Apache Tomcat Time-of-check Time-of-use (TOCTOU) Race Condition vulnerability\n\n(GHSA-27hp-xhwr-wr2m)\n\n---\n\n[CRITICAL] 1-1: org.apache.tomcat.embed:tomcat-embed-core 10.1.28: Apache Tomcat Denial of Service via invalid HTTP priority header\n\n(GHSA-3p2h-wqq4-wf4h)\n\n---\n\n[CRITICAL] 1-1: org.apache.tomcat.embed:tomcat-embed-core 10.1.28: Apache Tomcat Time-of-check Time-of-use (TOCTOU) Race Condition vulnerability\n\n(GHSA-5j33-cvvr-w245)\n\n---\n\n[CRITICAL] 1-1: org.apache.tomcat.embed:tomcat-embed-core 10.1.28: Apache Tomcat: Potential RCE and/or information disclosure and/or information corruption with partial PUT\n\n(GHSA-83qj-6fr2-vhqg)\n\n---\n\n[CRITICAL] 1-1: org.apache.tomcat.embed:tomcat-embed-core 10.1.28: Apache Tomcat Rewrite rule bypass\n\n(GHSA-ff77-26x5-69cr)\n\n---\n\n[CRITICAL] 1-1: org.apache.tomcat.embed:tomcat-embed-core 10.1.28: Apache Tomcat Improper Resource Shutdown or Release vulnerability\n\n(GHSA-gqp3-2cvr-x8m3)\n\n---\n\n[CRITICAL] 1-1: org.apache.tomcat.embed:tomcat-embed-core 10.1.28: Apache Tomcat - CGI security constraint bypass\n\n(GHSA-h2fw-rfh5-95r3)\n\n---\n\n[CRITICAL] 1-1: org.apache.tomcat.embed:tomcat-embed-core 10.1.28: Apache Tomcat - DoS in multipart upload\n\n(GHSA-h3gc-qfqq-6h8f)\n\n---\n\n[CRITICAL] 1-1: org.apache.tomcat.embed:tomcat-embed-core 10.1.28: Apache Tomcat Request and/or response mix-up\n\n(GHSA-qvf5-hvjx-wm27)\n\n---\n\n[CRITICAL] 1-1: org.apache.tomcat.embed:tomcat-embed-core 10.1.28: Apache Tomcat - Security constraint bypass for pre/post-resources\n\n(GHSA-wc4r-xq3c-5cf3)\n\n---\n\n[HIGH] 1-1: org.springframework.boot:spring-boot 3.3.3: Spring Boot EndpointRequest.to() creates wrong matcher if actuator endpoint is not exposed\n\n(GHSA-rc42-6c7j-7h5r)\n\n---\n\n[HIGH] 1-1: org.springframework:spring-webmvc 6.1.12: Path traversal vulnerability in functional web frameworks\n\n(GHSA-cx7f-g6mp-7hqm)\n\n---\n\n[HIGH] 1-1: org.springframework:spring-webmvc 6.1.12: Spring Framework Path Traversal vulnerability\n\n(GHSA-g5vr-rgqm-vf78)\n\n---\n\n[HIGH] 1-1: org.springframework:spring-webmvc 6.1.12: Spring Framework MVC Applications Path Traversal Vulnerability\n\n(GHSA-r936-gwx5-v52f)\n\n</details>\n\n</details>\n<details>\n<summary>🪛 markdownlint-cli2 (0.17.2)</summary>\n\n<details>\n<summary>docs/PR1_DESCRIPTION.md</summary>\n\n12-12: Fenced code blocks should have a language specified\n\n(MD040, fenced-code-language)\n\n</details>\n<details>\n<summary>.github/pull_request_template.md</summary>\n\n3-3: Fenced code blocks should have a language specified\n\n(MD040, fenced-code-language)\n\n</details>\n<details>\n<summary>README.md</summary>\n\n13-13: Fenced code blocks should have a language specified\n\n(MD040, fenced-code-language)\n\n</details>\n<details>\n<summary>docs/CodeReview/pr1-coderabbit-summary.md</summary>\n\n3-3: Bare URL used\n\n(MD034, no-bare-urls)\n\n---\n\n10-10: Spaces inside code span elements\n\n(MD038, no-space-in-code)\n\n---\n\n11-11: Spaces inside code span elements\n\n(MD038, no-space-in-code)\n\n</details>\n\n</details>\n\n</details>\n\n<details>\n<summary>🔇 Additional comments (8)</summary><blockquote>\n\n<details>\n<summary>docs/CodeReview/.gitkeep (1)</summary><blockquote>\n\n`1-2`: **LGTM: placeholder preserved for artifacts directory.**\n\nKeeps docs/CodeReview tracked in git. No action needed.\n\n</blockquote></details>\n<details>\n<summary>src/main/resources/application.yml (1)</summary><blockquote>\n\n`4-7`: **Require APP_SECRET without fallback**\n\nEmpty default weakens security; remove the `:` so startup fails if the variable is missing:\n\n```diff\n app:\n-  secret: ${APP_SECRET:}\n+  secret: ${APP_SECRET}\n```\n\nCentralize access in your config class (e.g. bind `app.secret` via `@ConfigurationProperties(\"app\")` with `@NotBlank` or use `@Value(\"${app.secret}\")`).\n\n</blockquote></details>\n<details>\n<summary>src/main/java/org/Application.java (1)</summary><blockquote>\n\n`12-14`: **LGTM: clean Spring Boot entrypoint.**\n\nBootstraps the app as expected.\n\n</blockquote></details>\n<details>\n<summary>src/test/java/org/model/UserTest.java (1)</summary><blockquote>\n\n`7-26`: **LGTM.**\n\nModel equality and getter/setter tests are clear and correct.\n\n</blockquote></details>\n<details>\n<summary>src/main/java/org/service/UserService.java (1)</summary><blockquote>\n\n`36-51`: **Clarify contract: method always returns a non-null placeholder**\n\nGiven the computeIfAbsent logic, this method never returns null. Ensure upstream callers (e.g., controller) don’t branch on null.\n\nWould you like me to align the controller to remove the unreachable 404 branch?\n\n</blockquote></details>\n<details>\n<summary>src/test/java/org/service/UserServiceTest.java (2)</summary><blockquote>\n\n`12-19`: **LGTM: verifies cache returns the same instance**\n\nSolid check for instance caching and id propagation.\n\n---\n\n`21-26`: **LGTM: validates blank id rejection**\n\nCovers the negative path well.\n\n</blockquote></details>\n<details>\n<summary>src/main/java/org/api/UserController.java (1)</summary><blockquote>\n\n`35-35`: **Validation on path variable is correctly set up**\n\n@NotBlank with @Validated on the class is appropriate here.\n\n</blockquote></details>\n\n</blockquote></details>\n\n</details>\n\n<!-- This is an auto-generated comment by CodeRabbit for review status -->",
      "state": "COMMENTED",
      "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/3#pullrequestreview-3206825025",
      "pull_request_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/3",
      "author_association": "NONE",
      "_links": {
        "html": {
          "href": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/3#pullrequestreview-3206825025"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/3"
        }
      },
      "submitted_at": "2025-09-10T15:57:53Z",
      "commit_id": "62eed20e6e70206319db2dbef9a30b15907c0c4b"
    }
  ],
  "fetchedAt": "2025-09-10T16:09:08.8933662Z"
}
