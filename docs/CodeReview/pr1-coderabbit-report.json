{
  "repository": "code-rabbit-eval-java-ms",
  "owner": "SravanYandrapalli",
  "pr": {
    "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1",
    "id": 2815726866,
    "node_id": "PR_kwDOPtYExc6n1JUS",
    "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1",
    "diff_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1.diff",
    "patch_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1.patch",
    "issue_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/issues/1",
    "number": 1,
    "state": "open",
    "locked": false,
    "title": "Feature/initial service",
    "user": {
      "login": "SravanYandrapalli",
      "id": 11624818,
      "node_id": "MDQ6VXNlcjExNjI0ODE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11624818?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SravanYandrapalli",
      "html_url": "https://github.com/SravanYandrapalli",
      "followers_url": "https://api.github.com/users/SravanYandrapalli/followers",
      "following_url": "https://api.github.com/users/SravanYandrapalli/following{/other_user}",
      "gists_url": "https://api.github.com/users/SravanYandrapalli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SravanYandrapalli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SravanYandrapalli/subscriptions",
      "organizations_url": "https://api.github.com/users/SravanYandrapalli/orgs",
      "repos_url": "https://api.github.com/users/SravanYandrapalli/repos",
      "events_url": "https://api.github.com/users/SravanYandrapalli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SravanYandrapalli/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "body": "### PR#1: Initial microservice scaffold (intentional issues)\r\n\r\nPurpose: evaluate CodeRabbit on typical Java/Spring microservice code.\r\n\r\nIntentional issue categories included:\r\n- A) Rule violations/team-specific: missing Javadoc, System.out, hard-coded placeholder secret, folder naming mismatch\r\n- B) Quality/security/perf/maintainability: catch-all exception swallow, non-thread-safe static cache, naive SQL-like concatenation, missing controller input validation, incomplete tests\r\n- C) Style/formatting: tabs vs spaces, inconsistent brace style, long method\r\n- D) Config/deps: older commons-io version\r\n\r\nTeam rules for CodeRabbit evaluation (see CODERABBIT_POLICY.md):\r\n```\r\ncoverage: core-modules >= 80%\r\nno-hardcoded-secrets: true\r\nfolder-naming: enforce\r\nforbid-system-out: true\r\nformatting: enforce\r\njavadoc-required: public-members\r\nsecrets-by-env: true\r\nsecurity-checks: high\r\nexception-handling: no-silence\r\nthread-safety-checks: enabled\r\n```\r\n\r\nArtifacts to save after CodeRabbit run:\r\n- docs/CodeReview/pr1-coderabbit-report.json\r\n- docs/CodeReview/pr1-coderabbit-summary.md\r\n- docs/CodeReview/pr1-suggested-patches/\r\n\r\n\r\n\n\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n## Summary by CodeRabbit\n\n- New Features\n  - Added a Spring Boot microservice with a REST endpoint to retrieve users and a runnable application entrypoint.\n- Documentation\n  - Added README, PR description, Code review docs, and a CodeRabbit policy/template for automated checks.\n- Tests\n  - Added unit tests for the user model and controller endpoint.\n- Chores\n  - Added multi-stage Docker image, Maven build configuration, app configuration supporting env secrets, helper scripts, and housekeeping files.\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
    "created_at": "2025-09-10T14:24:23Z",
    "updated_at": "2025-09-10T15:46:38Z",
    "closed_at": null,
    "merged_at": null,
    "merge_commit_sha": "5398f87734d5d429b7ec8a4f7f55721cbfddb96b",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1/commits",
    "review_comments_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1/comments",
    "review_comment_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/issues/1/comments",
    "statuses_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/statuses/6bfb9a72e4d4d4cf678c8859da87ea8d875bc85e",
    "head": {
      "label": "SravanYandrapalli:feature/initial-service",
      "ref": "feature/initial-service",
      "sha": "6bfb9a72e4d4d4cf678c8859da87ea8d875bc85e",
      "user": {
        "login": "SravanYandrapalli",
        "id": 11624818,
        "node_id": "MDQ6VXNlcjExNjI0ODE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11624818?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/SravanYandrapalli",
        "html_url": "https://github.com/SravanYandrapalli",
        "followers_url": "https://api.github.com/users/SravanYandrapalli/followers",
        "following_url": "https://api.github.com/users/SravanYandrapalli/following{/other_user}",
        "gists_url": "https://api.github.com/users/SravanYandrapalli/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/SravanYandrapalli/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/SravanYandrapalli/subscriptions",
        "organizations_url": "https://api.github.com/users/SravanYandrapalli/orgs",
        "repos_url": "https://api.github.com/users/SravanYandrapalli/repos",
        "events_url": "https://api.github.com/users/SravanYandrapalli/events{/privacy}",
        "received_events_url": "https://api.github.com/users/SravanYandrapalli/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 1054213317,
        "node_id": "R_kgDOPtYExQ",
        "name": "code-rabbit-eval-java-ms",
        "full_name": "SravanYandrapalli/code-rabbit-eval-java-ms",
        "private": false,
        "owner": {
          "login": "SravanYandrapalli",
          "id": 11624818,
          "node_id": "MDQ6VXNlcjExNjI0ODE4",
          "avatar_url": "https://avatars.githubusercontent.com/u/11624818?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/SravanYandrapalli",
          "html_url": "https://github.com/SravanYandrapalli",
          "followers_url": "https://api.github.com/users/SravanYandrapalli/followers",
          "following_url": "https://api.github.com/users/SravanYandrapalli/following{/other_user}",
          "gists_url": "https://api.github.com/users/SravanYandrapalli/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/SravanYandrapalli/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/SravanYandrapalli/subscriptions",
          "organizations_url": "https://api.github.com/users/SravanYandrapalli/orgs",
          "repos_url": "https://api.github.com/users/SravanYandrapalli/repos",
          "events_url": "https://api.github.com/users/SravanYandrapalli/events{/privacy}",
          "received_events_url": "https://api.github.com/users/SravanYandrapalli/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms",
        "description": null,
        "fork": false,
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms",
        "forks_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/forks",
        "keys_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/teams",
        "hooks_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/hooks",
        "issue_events_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/issues/events{/number}",
        "events_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/events",
        "assignees_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/assignees{/user}",
        "branches_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/branches{/branch}",
        "tags_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/tags",
        "blobs_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/languages",
        "stargazers_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/stargazers",
        "contributors_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/contributors",
        "subscribers_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/subscribers",
        "subscription_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/subscription",
        "commits_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/contents/{+path}",
        "compare_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/merges",
        "archive_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/downloads",
        "issues_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/issues{/number}",
        "pulls_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/labels{/name}",
        "releases_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/releases{/id}",
        "deployments_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/deployments",
        "created_at": "2025-09-10T14:18:55Z",
        "updated_at": "2025-09-10T14:20:10Z",
        "pushed_at": "2025-09-10T16:05:04Z",
        "git_url": "git://github.com/SravanYandrapalli/code-rabbit-eval-java-ms.git",
        "ssh_url": "git@github.com:SravanYandrapalli/code-rabbit-eval-java-ms.git",
        "clone_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms.git",
        "svn_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms",
        "homepage": null,
        "size": 14,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": null,
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 2,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 2,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "base": {
      "label": "SravanYandrapalli:main",
      "ref": "main",
      "sha": "5942b79abdc7a5eafd0c052d752e0b2ea1c6390b",
      "user": {
        "login": "SravanYandrapalli",
        "id": 11624818,
        "node_id": "MDQ6VXNlcjExNjI0ODE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11624818?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/SravanYandrapalli",
        "html_url": "https://github.com/SravanYandrapalli",
        "followers_url": "https://api.github.com/users/SravanYandrapalli/followers",
        "following_url": "https://api.github.com/users/SravanYandrapalli/following{/other_user}",
        "gists_url": "https://api.github.com/users/SravanYandrapalli/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/SravanYandrapalli/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/SravanYandrapalli/subscriptions",
        "organizations_url": "https://api.github.com/users/SravanYandrapalli/orgs",
        "repos_url": "https://api.github.com/users/SravanYandrapalli/repos",
        "events_url": "https://api.github.com/users/SravanYandrapalli/events{/privacy}",
        "received_events_url": "https://api.github.com/users/SravanYandrapalli/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "repo": {
        "id": 1054213317,
        "node_id": "R_kgDOPtYExQ",
        "name": "code-rabbit-eval-java-ms",
        "full_name": "SravanYandrapalli/code-rabbit-eval-java-ms",
        "private": false,
        "owner": {
          "login": "SravanYandrapalli",
          "id": 11624818,
          "node_id": "MDQ6VXNlcjExNjI0ODE4",
          "avatar_url": "https://avatars.githubusercontent.com/u/11624818?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/SravanYandrapalli",
          "html_url": "https://github.com/SravanYandrapalli",
          "followers_url": "https://api.github.com/users/SravanYandrapalli/followers",
          "following_url": "https://api.github.com/users/SravanYandrapalli/following{/other_user}",
          "gists_url": "https://api.github.com/users/SravanYandrapalli/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/SravanYandrapalli/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/SravanYandrapalli/subscriptions",
          "organizations_url": "https://api.github.com/users/SravanYandrapalli/orgs",
          "repos_url": "https://api.github.com/users/SravanYandrapalli/repos",
          "events_url": "https://api.github.com/users/SravanYandrapalli/events{/privacy}",
          "received_events_url": "https://api.github.com/users/SravanYandrapalli/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms",
        "description": null,
        "fork": false,
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms",
        "forks_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/forks",
        "keys_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/teams",
        "hooks_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/hooks",
        "issue_events_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/issues/events{/number}",
        "events_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/events",
        "assignees_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/assignees{/user}",
        "branches_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/branches{/branch}",
        "tags_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/tags",
        "blobs_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/languages",
        "stargazers_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/stargazers",
        "contributors_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/contributors",
        "subscribers_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/subscribers",
        "subscription_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/subscription",
        "commits_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/contents/{+path}",
        "compare_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/merges",
        "archive_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/downloads",
        "issues_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/issues{/number}",
        "pulls_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/labels{/name}",
        "releases_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/releases{/id}",
        "deployments_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/deployments",
        "created_at": "2025-09-10T14:18:55Z",
        "updated_at": "2025-09-10T14:20:10Z",
        "pushed_at": "2025-09-10T16:05:04Z",
        "git_url": "git://github.com/SravanYandrapalli/code-rabbit-eval-java-ms.git",
        "ssh_url": "git@github.com:SravanYandrapalli/code-rabbit-eval-java-ms.git",
        "clone_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms.git",
        "svn_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms",
        "homepage": null,
        "size": 14,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": null,
        "has_issues": true,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "has_discussions": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 2,
        "license": null,
        "allow_forking": true,
        "is_template": false,
        "web_commit_signoff_required": false,
        "topics": [],
        "visibility": "public",
        "forks": 0,
        "open_issues": 2,
        "watchers": 0,
        "default_branch": "main"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1"
      },
      "html": {
        "href": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1"
      },
      "issue": {
        "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/issues/1"
      },
      "comments": {
        "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/issues/1/comments"
      },
      "review_comments": {
        "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1/comments"
      },
      "review_comment": {
        "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments{/number}"
      },
      "commits": {
        "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1/commits"
      },
      "statuses": {
        "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/statuses/6bfb9a72e4d4d4cf678c8859da87ea8d875bc85e"
      }
    },
    "author_association": "OWNER",
    "auto_merge": null,
    "active_lock_reason": null,
    "merged": false,
    "mergeable": true,
    "rebaseable": true,
    "mergeable_state": "clean",
    "merged_by": null,
    "comments": 3,
    "review_comments": 21,
    "maintainer_can_modify": false,
    "commits": 3,
    "additions": 2539,
    "deletions": 0,
    "changed_files": 30
  },
  "issueComments": [
    {
      "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/issues/comments/3275247933",
      "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#issuecomment-3275247933",
      "issue_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/issues/1",
      "id": 3275247933,
      "node_id": "IC_kwDOPtYExc7DOFE9",
      "user": {
        "login": "SravanYandrapalli",
        "id": 11624818,
        "node_id": "MDQ6VXNlcjExNjI0ODE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11624818?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/SravanYandrapalli",
        "html_url": "https://github.com/SravanYandrapalli",
        "followers_url": "https://api.github.com/users/SravanYandrapalli/followers",
        "following_url": "https://api.github.com/users/SravanYandrapalli/following{/other_user}",
        "gists_url": "https://api.github.com/users/SravanYandrapalli/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/SravanYandrapalli/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/SravanYandrapalli/subscriptions",
        "organizations_url": "https://api.github.com/users/SravanYandrapalli/orgs",
        "repos_url": "https://api.github.com/users/SravanYandrapalli/repos",
        "events_url": "https://api.github.com/users/SravanYandrapalli/events{/privacy}",
        "received_events_url": "https://api.github.com/users/SravanYandrapalli/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "created_at": "2025-09-10T14:30:18Z",
      "updated_at": "2025-09-10T14:30:18Z",
      "body": "@coderabbitai full review",
      "author_association": "OWNER",
      "reactions": {
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/issues/comments/3275247933/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 1
      },
      "performed_via_github_app": null
    },
    {
      "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/issues/comments/3275248352",
      "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#issuecomment-3275248352",
      "issue_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/issues/1",
      "id": 3275248352,
      "node_id": "IC_kwDOPtYExc7DOFLg",
      "user": {
        "login": "coderabbitai[bot]",
        "id": 136622811,
        "node_id": "BOT_kgDOCCSy2w",
        "avatar_url": "https://avatars.githubusercontent.com/in/347564?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coderabbitai%5Bbot%5D",
        "html_url": "https://github.com/apps/coderabbitai",
        "followers_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/received_events",
        "type": "Bot",
        "user_view_type": "public",
        "site_admin": false
      },
      "created_at": "2025-09-10T14:30:24Z",
      "updated_at": "2025-09-10T14:30:24Z",
      "body": "<!-- This is an auto-generated reply by CodeRabbit -->\n<details>\n<summary>✅ Actions performed</summary>\n\nFull review triggered.\n\n</details>",
      "author_association": "NONE",
      "reactions": {
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/issues/comments/3275248352/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "performed_via_github_app": {
        "id": 347564,
        "client_id": "Iv1.6aaafe4fe882736b",
        "slug": "coderabbitai",
        "node_id": "A_kwHOB96YWc4ABU2s",
        "owner": {
          "login": "coderabbitai",
          "id": 132028505,
          "node_id": "O_kgDOB96YWQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/132028505?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/coderabbitai",
          "html_url": "https://github.com/coderabbitai",
          "followers_url": "https://api.github.com/users/coderabbitai/followers",
          "following_url": "https://api.github.com/users/coderabbitai/following{/other_user}",
          "gists_url": "https://api.github.com/users/coderabbitai/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/coderabbitai/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/coderabbitai/subscriptions",
          "organizations_url": "https://api.github.com/users/coderabbitai/orgs",
          "repos_url": "https://api.github.com/users/coderabbitai/repos",
          "events_url": "https://api.github.com/users/coderabbitai/events{/privacy}",
          "received_events_url": "https://api.github.com/users/coderabbitai/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "name": "coderabbitai",
        "description": "# Transforming Code Reviews with AI\r\n\r\n## Features\r\n\r\n**Automated Reviews**: Continuous reviews of the pull requests including incremental commits. \r\n\r\n**Summarization**: Generates high-level summary and a technical walkthrough of the PR changes. \r\n\r\n**Line-by-line review**: Provides line-by-line suggestions committable with one click.\r\n\r\n**Codebase verification**:  Verifies the impact on the overall codebase and identifies missing changes.\r\n\r\n**Insights into your code**:  Ask any questions on your codebase within the pull request \r\n\r\n**Chat about your code** : Chat with the bot around your code. The more you chat, the smarter it gets.\r\n\r\n**Issue Validation**:  Validates the PR against the linked issues and identifies other related issues \r\n\r\n\r\n\r\n",
        "external_url": "https://coderabbit.ai?utm_source=cr_app&utm_medium=github",
        "html_url": "https://github.com/apps/coderabbitai",
        "created_at": "2023-06-14T15:47:27Z",
        "updated_at": "2025-08-21T21:40:57Z",
        "permissions": {
          "actions": "read",
          "checks": "read",
          "contents": "write",
          "discussions": "read",
          "issues": "write",
          "members": "read",
          "metadata": "read",
          "pull_requests": "write",
          "statuses": "write"
        },
        "events": [
          "issues",
          "issue_comment",
          "label",
          "organization",
          "pull_request",
          "pull_request_review",
          "pull_request_review_comment",
          "pull_request_review_thread",
          "release",
          "repository"
        ]
      }
    },
    {
      "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/issues/comments/3275248539",
      "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#issuecomment-3275248539",
      "issue_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/issues/1",
      "id": 3275248539,
      "node_id": "IC_kwDOPtYExc7DOFOb",
      "user": {
        "login": "coderabbitai[bot]",
        "id": 136622811,
        "node_id": "BOT_kgDOCCSy2w",
        "avatar_url": "https://avatars.githubusercontent.com/in/347564?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coderabbitai%5Bbot%5D",
        "html_url": "https://github.com/apps/coderabbitai",
        "followers_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/received_events",
        "type": "Bot",
        "user_view_type": "public",
        "site_admin": false
      },
      "created_at": "2025-09-10T14:30:27Z",
      "updated_at": "2025-09-10T15:46:36Z",
      "body": "<!-- This is an auto-generated comment: summarize by coderabbit.ai -->\n<!-- walkthrough_start -->\n\n## Walkthrough\nAdds a Java 21 / Spring Boot microservice scaffold with Docker and Maven build, application code (controller, service, model, validator, config), tests, config files, CodeRabbit policy/docs, a PR template, helper scripts, and some committed build artifacts; includes an intentionally misnamed folder and deliberate issues for evaluation.\n\n## Changes\n| Cohort / File(s) | Change Summary |\n|---|---|\n| **PR Template**<br>`.github/pull_request_template.md` | Adds a GitHub PR template with CodeRabbit sections and artifact paths; template content is duplicated within the file. |\n| **Policy & PR Description**<br>`CODERABBIT_POLICY.md`, `docs/PR1_DESCRIPTION.md` | Adds CodeRabbit policy rules and a PR#1 description enumerating intentional issues and required artifacts. |\n| **Docs & README**<br>`README.md`, `docs/CodeReview/.gitkeep`, `docs/CodeReview/pr1-coderabbit-summary.md` | Adds project README, placeholder .gitkeep, and an auto-generated PR summary document with suggested changes. |\n| **Build & Packaging**<br>`Dockerfile`, `pom.xml` | Adds multi-stage Dockerfile (Eclipse Temurin 21 JDK/JRE) and Maven POM (Java 21, Spring Boot 3.3.3) with dependencies (intentional older commons-io). |\n| **Entrypoint & Config**<br>`src/main/java/org/Application.java`, `src/main/resources/application.yml`, `target/classes/application.yml` | Adds Spring Boot application entry point and application.yml loading APP_SECRET from env. |\n| **Spring Config Bean**<br>`src/main/java/org/configuration/AppConfig.java` | Adds configuration bean exposing the injected app secret via getter. |\n| **API Layer**<br>`src/main/java/org/api/UserController.java`, `src/test/java/org/api/UserControllerTest.java` | Adds REST controller GET /users/{id} and a basic unit test asserting 200 + non-null body. |\n| **Service Layer**<br>`src/main/java/org/service/UserService.java` | Adds service with a static non-thread-safe cache, hard-coded SECRET placeholder, naive query string, wasteful delay loop, and broad exception swallowing. |\n| **Domain Model**<br>`src/main/java/org/model/User.java`, `src/test/java/org/model/UserTest.java` | Adds User POJO (constructors, getters/setters, equals/hashCode) and unit tests for equality and accessors. |\n| **Validation Utility**<br>`src/main/java/org/validator/UserValidator.java` | Adds static validator isValidUserId(String) using StringUtils.hasText and length check. |\n| **Intentional Naming Violation**<br>`src/main/java/org/Service_misnamed/Readme.txt`, `target/classes/org/Service_misnamed/Readme.txt` | Adds a mis-cased folder Readme.txt to trigger folder-naming policy (present in source and compiled target). |\n| **Artifacts & Scripts**<br>`docs/CodeReview/pr1-coderabbit-report.json` (generated), `docs/CodeReview/pr1-suggested-patches/` (dir), `scripts/fetch-coderabbit-pr-artifacts.ps1` | Adds PR artifact JSON/summary artefacts and a PowerShell script to fetch PR data and produce summary artifacts. |\n\n## Sequence Diagram(s)\n```mermaid\nsequenceDiagram\n  autonumber\n  actor Client\n  participant Controller as UserController\n  participant Service as UserService\n  participant Cache as Static Cache\n\n  Client->>Controller: GET /users/{id}\n  Controller->>Service: findUserById(id)\n  Service->>Service: build query string\\nsimulate delay (O(n^2) loop)\n  Service->>Cache: lookup(id)\n  alt cache hit\n    Cache-->>Service: User\n  else cache miss\n    Service->>Service: create User, put in cache\n  end\n  Service-->>Controller: User or null (exceptions swallowed)\n  alt User found\n    Controller-->>Client: 200 OK (User)\n  else Not found / exception\n    Controller-->>Client: 404 Not Found\n  end\n```\n\n## Estimated code review effort\n🎯 3 (Moderate) | ⏱️ ~25 minutes\n\n\n\n\n<!-- pre_merge_checks_walkthrough_start -->\n\n## Pre-merge checks (2 passed, 1 inconclusive)\n<details>\n<summary>❌ Failed checks (1 inconclusive)</summary>\n\n|  Check name | Status         | Explanation                                                                                                                                                                                                     | Resolution                                                                                                                                                 |\n| :---------: | :------------- | :-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | :--------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Title Check | ❓ Inconclusive | The current title “Feature/initial service” reads more like a branch identifier than a clear, concise summary of the primary change and lacks context about the nature of the service or technology introduced. | Rename the pull request title to a descriptive phrase such as “Add initial Java Spring Boot microservice scaffold” to clearly communicate the main change. |\n\n</details>\n<details>\n<summary>✅ Passed checks (2 passed)</summary>\n\n|     Check name     | Status   | Explanation                                                          |\n| :----------------: | :------- | :------------------------------------------------------------------- |\n|  Description Check | ✅ Passed | Check skipped - CodeRabbit’s high-level summary is enabled.          |\n| Docstring Coverage | ✅ Passed | No functions found in the changes. Docstring coverage check skipped. |\n\n</details>\n\n<!-- pre_merge_checks_walkthrough_end -->\n\n## Poem\n> I thump my paws on fresh new code,  \n> A Booting burrow, Docker load.  \n> Controllers hop, a Service naps,  \n> A cache of carrots—oops, perhaps!  \n> With policy scrolls and tests in tow, I nose-twitch: to prod we go. 🥕🐇\n\n<!-- walkthrough_end -->\n\n<!-- announcements_start -->\n\n> [!TIP]\n> <details>\n> <summary>👮 Agentic pre-merge checks are now available in preview!</summary>\n> \n> Pro plan users can now enable pre-merge checks in their settings to enforce checklists before merging PRs.\n> \n> \t- Built-in checks – Quickly apply ready-made checks to enforce title conventions, require pull request descriptions that follow templates, validate linked issues for compliance, and more.\n> \t- Custom agentic checks – Define your own rules using CodeRabbit’s advanced agentic capabilities to enforce organization-specific policies and workflows. For example, you can instruct CodeRabbit’s agent to verify that API documentation is updated whenever API schema files are modified in a PR. Note: Upto 5 custom checks are currently allowed during the preview period. Pricing for this feature will be announced in a few weeks.\n> \n> Please see the [documentation](https://docs.coderabbit.ai/pr-reviews/pre-merge-checks) for more information.\n> \n> Example:\n> \n> ```yaml\n> reviews:\n>   pre_merge_checks:\n>     custom_checks:\n>       - name: \"Undocumented Breaking Changes\"\n>         mode: \"warning\"\n>         instructions: |\n>           Pass/fail criteria: All breaking changes to public APIs, CLI flags, environment variables, configuration keys, database schemas, or HTTP/GraphQL endpoints must be documented in the \"Breaking Change\" section of the PR description and in CHANGELOG.md. Exclude purely internal or private changes (e.g., code not exported from package entry points or explicitly marked as internal).\n> ```\n> \n> Please share your feedback with us on this [Discord post](https://discord.com/channels/1134356397673414807/1414771631775158383).\n> \n> </details>\n\n<!-- announcements_end -->\n<!-- internal state start -->\n\n\n<!--  -->\n\n<!-- internal state end -->\n<!-- finishing_touch_checkbox_start -->\n\n<details>\n<summary>✨ Finishing Touches</summary>\n\n<details>\n<summary>🧪 Generate unit tests</summary>\n\n- [ ] <!-- {\"checkboxId\": \"f47ac10b-58cc-4372-a567-0e02b2c3d479\", \"radioGroupId\": \"utg-output-choice-group-unknown_comment_id\"} -->   Create PR with unit tests\n- [ ] <!-- {\"checkboxId\": \"07f1e7d6-8a8e-4e23-9900-8731c2c87f58\", \"radioGroupId\": \"utg-output-choice-group-unknown_comment_id\"} -->   Post copyable unit tests in a comment\n- [ ] <!-- {\"checkboxId\": \"6ba7b810-9dad-11d1-80b4-00c04fd430c8\", \"radioGroupId\": \"utg-output-choice-group-unknown_comment_id\"} -->   Commit unit tests in branch `feature/initial-service`\n\n</details>\n\n</details>\n\n<!-- finishing_touch_checkbox_end -->\n<!-- tips_start -->\n\n---\n\n\n\n<sub>Comment `@coderabbitai help` to get the list of available commands and usage tips.</sub>\n\n<!-- tips_end -->",
      "author_association": "NONE",
      "reactions": {
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/issues/comments/3275248539/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "performed_via_github_app": {
        "id": 347564,
        "client_id": "Iv1.6aaafe4fe882736b",
        "slug": "coderabbitai",
        "node_id": "A_kwHOB96YWc4ABU2s",
        "owner": {
          "login": "coderabbitai",
          "id": 132028505,
          "node_id": "O_kgDOB96YWQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/132028505?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/coderabbitai",
          "html_url": "https://github.com/coderabbitai",
          "followers_url": "https://api.github.com/users/coderabbitai/followers",
          "following_url": "https://api.github.com/users/coderabbitai/following{/other_user}",
          "gists_url": "https://api.github.com/users/coderabbitai/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/coderabbitai/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/coderabbitai/subscriptions",
          "organizations_url": "https://api.github.com/users/coderabbitai/orgs",
          "repos_url": "https://api.github.com/users/coderabbitai/repos",
          "events_url": "https://api.github.com/users/coderabbitai/events{/privacy}",
          "received_events_url": "https://api.github.com/users/coderabbitai/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "name": "coderabbitai",
        "description": "# Transforming Code Reviews with AI\r\n\r\n## Features\r\n\r\n**Automated Reviews**: Continuous reviews of the pull requests including incremental commits. \r\n\r\n**Summarization**: Generates high-level summary and a technical walkthrough of the PR changes. \r\n\r\n**Line-by-line review**: Provides line-by-line suggestions committable with one click.\r\n\r\n**Codebase verification**:  Verifies the impact on the overall codebase and identifies missing changes.\r\n\r\n**Insights into your code**:  Ask any questions on your codebase within the pull request \r\n\r\n**Chat about your code** : Chat with the bot around your code. The more you chat, the smarter it gets.\r\n\r\n**Issue Validation**:  Validates the PR against the linked issues and identifies other related issues \r\n\r\n\r\n\r\n",
        "external_url": "https://coderabbit.ai?utm_source=cr_app&utm_medium=github",
        "html_url": "https://github.com/apps/coderabbitai",
        "created_at": "2023-06-14T15:47:27Z",
        "updated_at": "2025-08-21T21:40:57Z",
        "permissions": {
          "actions": "read",
          "checks": "read",
          "contents": "write",
          "discussions": "read",
          "issues": "write",
          "members": "read",
          "metadata": "read",
          "pull_requests": "write",
          "statuses": "write"
        },
        "events": [
          "issues",
          "issue_comment",
          "label",
          "organization",
          "pull_request",
          "pull_request_review",
          "pull_request_review_comment",
          "pull_request_review_thread",
          "release",
          "repository"
        ]
      }
    }
  ],
  "reviewComments": [
    {
      "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025594",
      "pull_request_review_id": 3206543212,
      "id": 2337025594,
      "node_id": "PRRC_kwDOPtYExc6LTC46",
      "diff_hunk": "@@ -0,0 +1,12 @@\n+FROM eclipse-temurin:21-jdk AS build\n+WORKDIR /app\n+COPY . .\n+RUN ./mvnw -q -DskipTests package || mvn -q -DskipTests package\n+\n+FROM eclipse-temurin:21-jre\n+WORKDIR /app\n+COPY --from=build /app/target/*.jar app.jar\n+EXPOSE 8080\n+ENTRYPOINT [\"java\",\"-jar\",\"/app/app.jar\"]",
      "path": "Dockerfile",
      "commit_id": "6bfb9a72e4d4d4cf678c8859da87ea8d875bc85e",
      "original_commit_id": "c9897eb80b102eb37ae12b02cdfa87d5425fbec9",
      "user": {
        "login": "coderabbitai[bot]",
        "id": 136622811,
        "node_id": "BOT_kgDOCCSy2w",
        "avatar_url": "https://avatars.githubusercontent.com/in/347564?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coderabbitai%5Bbot%5D",
        "html_url": "https://github.com/apps/coderabbitai",
        "followers_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/received_events",
        "type": "Bot",
        "user_view_type": "public",
        "site_admin": false
      },
      "body": "_🛠️ Refactor suggestion_\n\n**Harden image, improve build caching, and avoid root.**\n\n- Cache deps by copying pom + .mvn before sources.\n- Run as non-root and set ownership on the jar.\n- Optionally set sane JVM memory defaults.\n\n\n```diff\n-FROM eclipse-temurin:21-jdk AS build\n-WORKDIR /app\n-COPY . .\n-RUN ./mvnw -q -DskipTests package || mvn -q -DskipTests package\n-\n-FROM eclipse-temurin:21-jre\n-WORKDIR /app\n-COPY --from=build /app/target/*.jar app.jar\n-EXPOSE 8080\n-ENTRYPOINT [\"java\",\"-jar\",\"/app/app.jar\"]\n+FROM eclipse-temurin:21-jdk AS build\n+WORKDIR /app\n+# Cache dependencies\n+COPY .mvn/ .mvn/\n+COPY mvnw pom.xml ./\n+RUN ./mvnw -q -DskipTests dependency:go-offline || mvn -q -DskipTests dependency:go-offline\n+# Build\n+COPY src ./src\n+RUN ./mvnw -q -DskipTests package || mvn -q -DskipTests package\n+\n+FROM eclipse-temurin:21-jre\n+WORKDIR /app\n+RUN useradd -u 10001 -m app\n+COPY --chown=app:app --from=build /app/target/*.jar /app/app.jar\n+EXPOSE 8080\n+USER 10001\n+ENV JAVA_TOOL_OPTIONS=\"-XX:MaxRAMPercentage=75.0\"\n+ENTRYPOINT [\"java\",\"-jar\",\"/app/app.jar\"]\n```\n\nOptional: add a .dockerignore to shrink build context (target/, .git/, etc.).\n\n<!-- suggestion_start -->\n\n<details>\n<summary>📝 Committable suggestion</summary>\n\n> ‼️ **IMPORTANT**\n> Carefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation. Thoroughly test & benchmark the code to ensure it meets the requirements.\n\n```suggestion\nFROM eclipse-temurin:21-jdk AS build\nWORKDIR /app\n# Cache dependencies\nCOPY .mvn/ .mvn/\nCOPY mvnw pom.xml ./\nRUN ./mvnw -q -DskipTests dependency:go-offline || mvn -q -DskipTests dependency:go-offline\n# Build\nCOPY src ./src\nRUN ./mvnw -q -DskipTests package || mvn -q -DskipTests package\n\nFROM eclipse-temurin:21-jre\nWORKDIR /app\nRUN useradd -u 10001 -m app\nCOPY --chown=app:app --from=build /app/target/*.jar /app/app.jar\nEXPOSE 8080\nUSER 10001\nENV JAVA_TOOL_OPTIONS=\"-XX:MaxRAMPercentage=75.0\"\nENTRYPOINT [\"java\",\"-jar\",\"/app/app.jar\"]\n```\n\n</details>\n\n<!-- suggestion_end -->\n\n<details>\n<summary>🤖 Prompt for AI Agents</summary>\n\n```\nIn Dockerfile lines 1-10: the image is built as root with no build caching\noptimizations or ownership adjustments and no JVM defaults; update the\nDockerfile to (1) use a multi-stage build that first copies only pom.xml and\n.mvn (and any build-related files) and runs mvn dependency download to leverage\nlayer caching before copying source, (2) keep the build stage as a JDK image and\nthe runtime as a slim JRE/JDK runtime image, (3) create and use a non-root user\nin the runtime stage, change ownership of /app and the copied jar to that user,\nand run the JVM as that user, (4) add sane JVM memory defaults via\nJAVA_TOOL_OPTIONS or by passing -XX:MaxRAMPercentage and related flags in the\nENTRYPOINT, and (5) add a .dockerignore excluding target/, .git/, .mvn/wrapper,\nand other unnecessary files to shrink the build context.\n```\n\n</details>\n\n<!-- fingerprinting:phantom:poseidon:chinchilla -->\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
      "created_at": "2025-09-10T14:48:58Z",
      "updated_at": "2025-09-10T14:49:02Z",
      "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025594",
      "pull_request_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025594"
        },
        "html": {
          "href": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025594"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1"
        }
      },
      "reactions": {
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025594/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "start_line": 1,
      "original_start_line": 1,
      "start_side": "RIGHT",
      "line": 10,
      "original_line": 10,
      "side": "RIGHT",
      "original_position": 10,
      "position": 10,
      "subject_type": "line"
    },
    {
      "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025605",
      "pull_request_review_id": 3206543212,
      "id": 2337025605,
      "node_id": "PRRC_kwDOPtYExc6LTC5F",
      "diff_hunk": "@@ -0,0 +1,70 @@\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <groupId>org</groupId>\n+    <artifactId>code-rabbit-eval-java-microservice</artifactId>\n+    <version>0.1.0-SNAPSHOT</version>\n+    <name>code-rabbit-eval-java-microservice</name>\n+    <description>Spring Boot microservice scaffold to evaluate CodeRabbit</description>\n+\n+    <properties>\n+        <java.version>21</java.version>\n+        <spring-boot.version>3.3.3</spring-boot.version>\n+    </properties>",
      "path": "pom.xml",
      "commit_id": "6bfb9a72e4d4d4cf678c8859da87ea8d875bc85e",
      "original_commit_id": "c9897eb80b102eb37ae12b02cdfa87d5425fbec9",
      "user": {
        "login": "coderabbitai[bot]",
        "id": 136622811,
        "node_id": "BOT_kgDOCCSy2w",
        "avatar_url": "https://avatars.githubusercontent.com/in/347564?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coderabbitai%5Bbot%5D",
        "html_url": "https://github.com/apps/coderabbitai",
        "followers_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/received_events",
        "type": "Bot",
        "user_view_type": "public",
        "site_admin": false
      },
      "body": "_💡 Verification agent_\n\n<details>\n<summary>🧩 Analysis chain</summary>\n\n**Bump Spring Boot to latest 3.3.x patch to pull patched Tomcat/Framework transitive deps.**\n\nScanner flags multiple Tomcat and Spring MVC issues on 3.3.3’s transitive set. Upgrade to the newest 3.3.x.\n\nPlease confirm latest stable and update property:\n\n---\n\n🌐 Web query:\n\n```web\nWhat is the latest Spring Boot 3.3.x patch version and does it address recent Tomcat CVEs?\n```\n\n💡 Result:\n\n- Latest Spring Boot 3.3.x patch: 3.3.13 (released June 19, 2025). [1][2]\n\n- Does it address recent Tomcat CVEs? Yes — the 3.3.13 release upgrades the embedded Tomcat to 10.1.42, and Tomcat 10.1.42 contains fixes for several recent CVEs (for example CVE‑2025‑49125 / CVE‑2025‑49124 and related fixes noted in the Tomcat security advisories). Upgrading to Spring Boot 3.3.13 therefore picks up those Tomcat fixes. [2][3]\n\nSources:\n- Spring Boot 3.3.13 announcement. [1]\n- spring-projects/spring-boot release notes (v3.3.13 — \"upgrades to Tomcat 10.1.42\"). [2]\n- Apache Tomcat security advisories listing fixes in 10.1.42. [3]\n\n---\n\n\n\n</details>\n\n**Update Spring Boot version to 3.3.13 (pom.xml lines 11–14)**  \nBumps embedded Tomcat to 10.1.42, addressing CVE-2025-49125 and CVE-2025-49124. ([github.com](https://github.com/spring-projects/spring-boot/releases/tag/v3.3.13), [tomcat.apache.org](https://tomcat.apache.org/security-10?utm_source=openai), [herodevs.com](https://www.herodevs.com/vulnerability-directory/cve-2025-49124?utm_source=openai))\n\n<details>\n<summary>🤖 Prompt for AI Agents</summary>\n\n```\nIn pom.xml around lines 11 to 14, the Spring Boot version should be bumped from\n3.3.3 to 3.3.13 to pick up embedded Tomcat 10.1.42; update the\n<spring-boot.version> value to 3.3.13, then run a full build (mvn -U clean\npackage) and update or resolve any transient dependency or plugin version\nconflicts that arise (adjust plugin BOM/imports if necessary) to ensure the\nproject builds cleanly with the new Spring Boot version.\n```\n\n</details>\n\n<!-- fingerprinting:phantom:poseidon:chinchilla -->\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
      "created_at": "2025-09-10T14:48:58Z",
      "updated_at": "2025-09-10T14:49:02Z",
      "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025605",
      "pull_request_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025605"
        },
        "html": {
          "href": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025605"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1"
        }
      },
      "reactions": {
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025605/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "start_line": 11,
      "original_start_line": 11,
      "start_side": "RIGHT",
      "line": 14,
      "original_line": 14,
      "side": "RIGHT",
      "original_position": 14,
      "position": 14,
      "subject_type": "line"
    },
    {
      "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025611",
      "pull_request_review_id": 3206543212,
      "id": 2337025611,
      "node_id": "PRRC_kwDOPtYExc6LTC5L",
      "diff_hunk": "@@ -0,0 +1,70 @@\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <groupId>org</groupId>\n+    <artifactId>code-rabbit-eval-java-microservice</artifactId>\n+    <version>0.1.0-SNAPSHOT</version>\n+    <name>code-rabbit-eval-java-microservice</name>\n+    <description>Spring Boot microservice scaffold to evaluate CodeRabbit</description>\n+\n+    <properties>\n+        <java.version>21</java.version>\n+        <spring-boot.version>3.3.3</spring-boot.version>\n+    </properties>\n+\n+    <dependencyManagement>\n+        <dependencies>\n+            <dependency>\n+                <groupId>org.springframework.boot</groupId>\n+                <artifactId>spring-boot-dependencies</artifactId>\n+                <version>${spring-boot.version}</version>\n+                <type>pom</type>\n+                <scope>import</scope>\n+            </dependency>\n+        </dependencies>\n+    </dependencyManagement>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-web</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-validation</artifactId>\n+        </dependency>\n+        <!-- Intentionally older version to trigger SCA warning -->\n+        <dependency>\n+            <groupId>commons-io</groupId>\n+            <artifactId>commons-io</artifactId>\n+            <version>2.6</version>\n+        </dependency>",
      "path": "pom.xml",
      "commit_id": "6bfb9a72e4d4d4cf678c8859da87ea8d875bc85e",
      "original_commit_id": "c9897eb80b102eb37ae12b02cdfa87d5425fbec9",
      "user": {
        "login": "coderabbitai[bot]",
        "id": 136622811,
        "node_id": "BOT_kgDOCCSy2w",
        "avatar_url": "https://avatars.githubusercontent.com/in/347564?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coderabbitai%5Bbot%5D",
        "html_url": "https://github.com/apps/coderabbitai",
        "followers_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/received_events",
        "type": "Bot",
        "user_view_type": "public",
        "site_admin": false
      },
      "body": "_💡 Verification agent_\n\n<details>\n<summary>❓ Verification inconclusive</summary>\n\n**Upgrade or remove vulnerable commons-io 2.6.**\n\n2.6 has known vulns (path traversal, XML DoS). If unused, drop it; otherwise bump to a safe version.\n\n\nOption A – remove if unused:\n```diff\n-        <dependency>\n-            <groupId>commons-io</groupId>\n-            <artifactId>commons-io</artifactId>\n-            <version>2.6</version>\n-        </dependency>\n```\n\nOption B – upgrade with a pinned property:\n```diff\n     <properties>\n         <java.version>21</java.version>\n         <spring-boot.version>3.3.3</spring-boot.version>\n+        <commons-io.version>2.16.1</commons-io.version>\n     </properties>\n@@\n         <dependency>\n             <groupId>commons-io</groupId>\n             <artifactId>commons-io</artifactId>\n-            <version>2.6</version>\n+            <version>${commons-io.version}</version>\n         </dependency>\n```\n\n\nCheck actual usage:\n\n---\n\n🏁 Script executed:\n\n```shell\n#!/bin/bash\nrg -nP '\\borg\\.apache\\.commons\\.io\\b' -g '!**/target/**' -C2\n```\n\nLength of output: 148\n\n---\n\n🏁 Script executed:\n\n```shell\n#!/bin/bash\n# Search for direct imports from commons-io\nrg -nP 'import org\\.apache\\.commons\\.io\\.' -g '*.java' -n -C2\n# Search for common utility class usages from commons-io\nrg -nP 'IOUtils|FileUtils|FilenameUtils' -g '*.java' -n -C2\n```\n\nLength of output: 0\n\n---\n\n\n\n</details>\n\n**Remove vulnerable unused commons-io 2.6 dependency (pom.xml:38–42)**  \nRG search found no direct imports or utility-class usage of org.apache.commons.io; delete the entire `<dependency>` block to eliminate known vulnerabilities.\n\n<details>\n<summary>🤖 Prompt for AI Agents</summary>\n\n```\nIn pom.xml around lines 38–42, remove the entire <dependency> block for\ncommons-io:commons-io:2.6 because it is unused and vulnerable; after deleting\nthat block, run mvn dependency:tree to confirm nothing else requires it\ntransitively and run the test/build (mvn test or mvn package) to verify no\ncompilation or runtime breakages—if any part of the code actually requires\ncommons-io, replace the dependency with a supported, non-vulnerable version\ninstead of the 2.6 artifact.\n```\n\n</details>\n\n<!-- fingerprinting:phantom:poseidon:chinchilla -->\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
      "created_at": "2025-09-10T14:48:58Z",
      "updated_at": "2025-09-10T14:49:02Z",
      "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025611",
      "pull_request_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025611"
        },
        "html": {
          "href": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025611"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1"
        }
      },
      "reactions": {
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025611/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "start_line": 38,
      "original_start_line": 38,
      "start_side": "RIGHT",
      "line": 42,
      "original_line": 42,
      "side": "RIGHT",
      "original_position": 42,
      "position": 42,
      "subject_type": "line"
    },
    {
      "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025618",
      "pull_request_review_id": 3206543212,
      "id": 2337025618,
      "node_id": "PRRC_kwDOPtYExc6LTC5S",
      "diff_hunk": "@@ -0,0 +1,35 @@\n+package org.api;\n+\n+import org.model.User;\n+import org.service.UserService;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.validation.annotation.Validated;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RestController;",
      "path": "src/main/java/org/api/UserController.java",
      "commit_id": "6bfb9a72e4d4d4cf678c8859da87ea8d875bc85e",
      "original_commit_id": "c9897eb80b102eb37ae12b02cdfa87d5425fbec9",
      "user": {
        "login": "coderabbitai[bot]",
        "id": 136622811,
        "node_id": "BOT_kgDOCCSy2w",
        "avatar_url": "https://avatars.githubusercontent.com/in/347564?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coderabbitai%5Bbot%5D",
        "html_url": "https://github.com/apps/coderabbitai",
        "followers_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/received_events",
        "type": "Bot",
        "user_view_type": "public",
        "site_admin": false
      },
      "body": "_🛠️ Refactor suggestion_\n\n**Replace System.out with structured logging (SLF4J).**\n\nAvoid `System.out.println` in production paths; use SLF4J with parameterized messages. Also add a logger field.\n\n\n```diff\n import org.model.User;\n import org.service.UserService;\n import org.springframework.http.ResponseEntity;\n import org.springframework.validation.annotation.Validated;\n import org.springframework.web.bind.annotation.GetMapping;\n import org.springframework.web.bind.annotation.PathVariable;\n import org.springframework.web.bind.annotation.RequestMapping;\n import org.springframework.web.bind.annotation.RestController;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n@@\n public class UserController {\n \n+    private static final Logger log = LoggerFactory.getLogger(UserController.class);\n+\n     private final UserService userService;\n@@\n-        System.out.println(\"Fetching user with id=\" + id); // Intentional for PR#1\n+        log.info(\"Fetching user with id={}\", id);\n```\n\n\nAlso applies to: 17-21, 26-26\n\n<details>\n<summary>🤖 Prompt for AI Agents</summary>\n\n```\nIn src/main/java/org/api/UserController.java around lines 3-10 (and also update\nusages at 17-21 and 26-26), replace all System.out.println calls with SLF4J\nstructured logging: add imports for org.slf4j.Logger and\norg.slf4j.LoggerFactory, add a private static final Logger logger =\nLoggerFactory.getLogger(UserController.class) field, and change prints to\nlogger.info/debug/error(...) using parameterized messages with {} placeholders\nand passing variables as arguments; remove any System.out usage and ensure the\nlogging level matches the message semantics.\n```\n\n</details>\n\n<!-- fingerprinting:phantom:poseidon:chinchilla -->\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
      "created_at": "2025-09-10T14:48:59Z",
      "updated_at": "2025-09-10T14:49:02Z",
      "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025618",
      "pull_request_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025618"
        },
        "html": {
          "href": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025618"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1"
        }
      },
      "reactions": {
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025618/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "start_line": 3,
      "original_start_line": 3,
      "start_side": "RIGHT",
      "line": 10,
      "original_line": 10,
      "side": "RIGHT",
      "original_position": 10,
      "position": 10,
      "subject_type": "line"
    },
    {
      "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025625",
      "pull_request_review_id": 3206543212,
      "id": 2337025625,
      "node_id": "PRRC_kwDOPtYExc6LTC5Z",
      "diff_hunk": "@@ -0,0 +1,14 @@\n+package org;\n+\n+import org.springframework.boot.SpringApplication;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+\n+@SpringBootApplication\n+public class Application {\n+\n+    public static void main(String[] args) {\n+        SpringApplication.run(Application.class, args);\n+    }\n+}",
      "path": "src/main/java/org/Application.java",
      "commit_id": "6bfb9a72e4d4d4cf678c8859da87ea8d875bc85e",
      "original_commit_id": "c9897eb80b102eb37ae12b02cdfa87d5425fbec9",
      "user": {
        "login": "coderabbitai[bot]",
        "id": 136622811,
        "node_id": "BOT_kgDOCCSy2w",
        "avatar_url": "https://avatars.githubusercontent.com/in/347564?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coderabbitai%5Bbot%5D",
        "html_url": "https://github.com/apps/coderabbitai",
        "followers_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/received_events",
        "type": "Bot",
        "user_view_type": "public",
        "site_admin": false
      },
      "body": "_💡 Verification agent_\n\n<details>\n<summary>🧩 Analysis chain</summary>\n\n**Base package “org” is too broad; rename to a project-specific package.**\n\nUsing package org triggers component scanning across many third‑party org.* classes, increasing startup time and risk of accidental bean pickup. Move code to something like com.coderabbit.eval (or your org domain) and update package declarations accordingly.\n\n\n\nProposed change for this file (after repo-wide package rename):\n\n```diff\n-package org;\n+package com.coderabbit.eval;\n \n import org.springframework.boot.SpringApplication;\n import org.springframework.boot.autoconfigure.SpringBootApplication;\n \n @SpringBootApplication\n public class Application {\n     public static void main(String[] args) {\n         SpringApplication.run(Application.class, args);\n     }\n }\n```\n\nFind files to update:\n\n---\n\n🏁 Script executed:\n\n```shell\n#!/bin/bash\n# List Java files declaring package org... to be renamed consistently\nrg -nP '^\\s*package\\s+org(\\.|;)' --type java -C0\n```\n\nLength of output: 503\n\n---\n\n\n\n</details>\n\n**Rename root package to `com.coderabbit.eval`**  \n`org` is too broad for Spring’s component scanning; change all package declarations in `src/main/java/org/...` and `src/test/java/org/...` to `com.coderabbit.eval` (and update imports).\n\n```diff\n// src/main/java/org/Application.java\n-package org;\n+package com.coderabbit.eval;\n```\n\n<!-- suggestion_start -->\n\n<details>\n<summary>📝 Committable suggestion</summary>\n\n> ‼️ **IMPORTANT**\n> Carefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation. Thoroughly test & benchmark the code to ensure it meets the requirements.\n\n```suggestion\npackage com.coderabbit.eval;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class Application {\n\n    public static void main(String[] args) {\n        SpringApplication.run(Application.class, args);\n    }\n}\n```\n\n</details>\n\n<!-- suggestion_end -->\n\n<details>\n<summary>🤖 Prompt for AI Agents</summary>\n\n```\nIn src/main/java/org/Application.java lines 1-12 (and all files under\nsrc/main/java/org/... and src/test/java/org/...), change the Java package\ndeclaration from \"org\" to \"com.coderabbit.eval\" and update all affected import\nstatements and package references accordingly; move the source files into a\nmatching directory structure (src/main/java/com/coderabbit/eval/... and\nsrc/test/java/com/coderabbit/eval/...) and update any build/test configurations\nor resource paths that reference the old package name so Spring component\nscanning and tests use com.coderabbit.eval.\n```\n\n</details>\n\n<!-- fingerprinting:phantom:poseidon:chinchilla -->\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
      "created_at": "2025-09-10T14:48:59Z",
      "updated_at": "2025-09-10T14:49:02Z",
      "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025625",
      "pull_request_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025625"
        },
        "html": {
          "href": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025625"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1"
        }
      },
      "reactions": {
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025625/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "start_line": 1,
      "original_start_line": 1,
      "start_side": "RIGHT",
      "line": 12,
      "original_line": 12,
      "side": "RIGHT",
      "original_position": 12,
      "position": 12,
      "subject_type": "line"
    },
    {
      "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025636",
      "pull_request_review_id": 3206543212,
      "id": 2337025636,
      "node_id": "PRRC_kwDOPtYExc6LTC5k",
      "diff_hunk": "@@ -0,0 +1,18 @@\n+package org.configuration;\n+\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.annotation.Configuration;\n+\n+@Configuration\n+public class AppConfig {\n+\n+    // Intentionally use @Value with default empty to align with secrets-by-env\n+    @Value(\"${APP_SECRET:}\")\n+    private String appSecret;",
      "path": "src/main/java/org/configuration/AppConfig.java",
      "commit_id": "6bfb9a72e4d4d4cf678c8859da87ea8d875bc85e",
      "original_commit_id": "c9897eb80b102eb37ae12b02cdfa87d5425fbec9",
      "user": {
        "login": "coderabbitai[bot]",
        "id": 136622811,
        "node_id": "BOT_kgDOCCSy2w",
        "avatar_url": "https://avatars.githubusercontent.com/in/347564?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coderabbitai%5Bbot%5D",
        "html_url": "https://github.com/apps/coderabbitai",
        "followers_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/received_events",
        "type": "Bot",
        "user_view_type": "public",
        "site_admin": false
      },
      "body": "_🛠️ Refactor suggestion_\n\n**Don’t read env directly with @Value; bind via properties and fail fast if missing.**\n\nUse @ConfigurationProperties + @Validated + @NotBlank to bind app.secret and avoid defaulting to empty (silent misconfig). Aligns with application.yml and secrets-by-env policy.\n\nApply:\n\n```diff\n-import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.validation.annotation.Validated;\n+import jakarta.validation.constraints.NotBlank;\n import org.springframework.context.annotation.Configuration;\n@@\n-@Configuration\n-public class AppConfig {\n-\n-    // Intentionally use @Value with default empty to align with secrets-by-env\n-    @Value(\"${APP_SECRET:}\")\n-    private String appSecret;\n-\n-    public String getAppSecret() {\n-        return appSecret;\n-    }\n-}\n+@Configuration\n+@ConfigurationProperties(prefix = \"app\")\n+@Validated\n+public class AppConfig {\n+    /**\n+     * Secret used by the service. Must be provided via APP_SECRET -> app.secret.\n+     */\n+    @NotBlank\n+    private String secret;\n+\n+    public String getSecret() {\n+        return secret;\n+    }\n+    public void setSecret(String secret) {\n+        this.secret = secret;\n+    }\n+}\n```\n\nFollow-up: annotate your Spring Boot application class with @ConfigurationPropertiesScan if not already present.\n\n<!-- suggestion_start -->\n\n<details>\n<summary>📝 Committable suggestion</summary>\n\n> ‼️ **IMPORTANT**\n> Carefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation. Thoroughly test & benchmark the code to ensure it meets the requirements.\n\n```suggestion\nimport org.springframework.boot.context.properties.ConfigurationProperties;\nimport org.springframework.validation.annotation.Validated;\nimport jakarta.validation.constraints.NotBlank;\nimport org.springframework.context.annotation.Configuration;\n\n@Configuration\n@ConfigurationProperties(prefix = \"app\")\n@Validated\npublic class AppConfig {\n    /**\n     * Secret used by the service. Must be provided via APP_SECRET -> app.secret.\n     */\n    @NotBlank\n    private String secret;\n\n    public String getSecret() {\n        return secret;\n    }\n\n    public void setSecret(String secret) {\n        this.secret = secret;\n    }\n}\n```\n\n</details>\n\n<!-- suggestion_end -->\n\n<!-- fingerprinting:phantom:poseidon:chinchilla -->\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
      "created_at": "2025-09-10T14:48:59Z",
      "updated_at": "2025-09-10T14:49:02Z",
      "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025636",
      "pull_request_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025636"
        },
        "html": {
          "href": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025636"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1"
        }
      },
      "reactions": {
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025636/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 11,
      "original_line": 11,
      "side": "RIGHT",
      "original_position": 11,
      "position": 11,
      "subject_type": "line"
    },
    {
      "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025648",
      "pull_request_review_id": 3206543212,
      "id": 2337025648,
      "node_id": "PRRC_kwDOPtYExc6LTC5w",
      "diff_hunk": "@@ -0,0 +1,3 @@\n+This folder is intentionally mis-cased to trigger folder-naming policy.\n+\n+",
      "path": "src/main/java/org/Service_misnamed/Readme.txt",
      "commit_id": "6bfb9a72e4d4d4cf678c8859da87ea8d875bc85e",
      "original_commit_id": "c9897eb80b102eb37ae12b02cdfa87d5425fbec9",
      "user": {
        "login": "coderabbitai[bot]",
        "id": 136622811,
        "node_id": "BOT_kgDOCCSy2w",
        "avatar_url": "https://avatars.githubusercontent.com/in/347564?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coderabbitai%5Bbot%5D",
        "html_url": "https://github.com/apps/coderabbitai",
        "followers_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/received_events",
        "type": "Bot",
        "user_view_type": "public",
        "site_admin": false
      },
      "body": "_🛠️ Refactor suggestion_\n\n**Folder naming violates Java package conventions.**\n\nDirectories under src/main/java must mirror package names (all lowercase). Either:\n- Move this note to docs/ (preferred), or\n- Rename folder to src/main/java/org/service/ if you truly need a service package.\n\n<details>\n<summary>🤖 Prompt for AI Agents</summary>\n\n```\nIn src/main/java/org/Service_misnamed/Readme.txt lines 1-3, the folder name\n\"Service_misnamed\" violates Java package naming conventions (directories under\nsrc/main/java must be all-lowercase and match package names). Fix by either\nmoving this README to a documentation folder (e.g., docs/ or\nsrc/main/resources/) and deleting the mis-cased directory, or if a package is\nrequired, rename the directory to a proper lowercase package path (e.g.,\nsrc/main/java/org/service/) and update any package declarations/imports to\nmatch.\n```\n\n</details>\n\n<!-- fingerprinting:phantom:poseidon:chinchilla -->\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
      "created_at": "2025-09-10T14:48:59Z",
      "updated_at": "2025-09-10T14:49:03Z",
      "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025648",
      "pull_request_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025648"
        },
        "html": {
          "href": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025648"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1"
        }
      },
      "reactions": {
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025648/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "start_line": 1,
      "original_start_line": 1,
      "start_side": "RIGHT",
      "line": 3,
      "original_line": 3,
      "side": "RIGHT",
      "original_position": 3,
      "position": 3,
      "subject_type": "line"
    },
    {
      "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025660",
      "pull_request_review_id": 3206543212,
      "id": 2337025660,
      "node_id": "PRRC_kwDOPtYExc6LTC58",
      "diff_hunk": "@@ -0,0 +1,49 @@\n+package org.service;\n+\n+import org.model.User;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+@Service\n+public class UserService {",
      "path": "src/main/java/org/service/UserService.java",
      "commit_id": "6bfb9a72e4d4d4cf678c8859da87ea8d875bc85e",
      "original_commit_id": "c9897eb80b102eb37ae12b02cdfa87d5425fbec9",
      "user": {
        "login": "coderabbitai[bot]",
        "id": 136622811,
        "node_id": "BOT_kgDOCCSy2w",
        "avatar_url": "https://avatars.githubusercontent.com/in/347564?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coderabbitai%5Bbot%5D",
        "html_url": "https://github.com/apps/coderabbitai",
        "followers_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/received_events",
        "type": "Bot",
        "user_view_type": "public",
        "site_admin": false
      },
      "body": "_🛠️ Refactor suggestion_\n\n**Add public Javadoc comments as per team policy.**\n\nThe team policy requires \"javadoc-required: public-members\" but this public class is missing Javadoc documentation.\n\n\nApply this diff:\n\n```diff\n+/**\n+ * Service layer for user-related operations.\n+ * Contains intentional issues for CodeRabbit evaluation purposes.\n+ */\n @Service\n public class UserService {\n```\n\n<!-- suggestion_start -->\n\n<details>\n<summary>📝 Committable suggestion</summary>\n\n> ‼️ **IMPORTANT**\n> Carefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation. Thoroughly test & benchmark the code to ensure it meets the requirements.\n\n```suggestion\n/**\n * Service layer for user-related operations.\n * Contains intentional issues for CodeRabbit evaluation purposes.\n */\n@Service\npublic class UserService {\n```\n\n</details>\n\n<!-- suggestion_end -->\n\n<details>\n<summary>🤖 Prompt for AI Agents</summary>\n\n```\nIn src/main/java/org/service/UserService.java around lines 11 to 12, the public\nclass UserService is missing the required public Javadoc; add a concise Javadoc\nblock immediately above the class declaration that describes the purpose of the\nservice, any important responsibilities or behavior, and optional author/version\ntags per project conventions so it satisfies the \"javadoc-required:\npublic-members\" policy.\n```\n\n</details>\n\n<!-- fingerprinting:phantom:poseidon:tarantula -->\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
      "created_at": "2025-09-10T14:48:59Z",
      "updated_at": "2025-09-10T14:49:03Z",
      "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025660",
      "pull_request_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025660"
        },
        "html": {
          "href": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025660"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1"
        }
      },
      "reactions": {
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025660/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "start_line": 11,
      "original_start_line": 11,
      "start_side": "RIGHT",
      "line": 12,
      "original_line": 12,
      "side": "RIGHT",
      "original_position": 12,
      "position": 12,
      "subject_type": "line"
    },
    {
      "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025665",
      "pull_request_review_id": 3206543212,
      "id": 2337025665,
      "node_id": "PRRC_kwDOPtYExc6LTC6B",
      "diff_hunk": "@@ -0,0 +1,49 @@\n+package org.service;\n+\n+import org.model.User;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+@Service\n+public class UserService {\n+\n+    // Intentional: non-thread-safe static mutable cache\n+    private static Map<String, User> USER_CACHE = new HashMap<>();",
      "path": "src/main/java/org/service/UserService.java",
      "commit_id": "6bfb9a72e4d4d4cf678c8859da87ea8d875bc85e",
      "original_commit_id": "c9897eb80b102eb37ae12b02cdfa87d5425fbec9",
      "user": {
        "login": "coderabbitai[bot]",
        "id": 136622811,
        "node_id": "BOT_kgDOCCSy2w",
        "avatar_url": "https://avatars.githubusercontent.com/in/347564?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coderabbitai%5Bbot%5D",
        "html_url": "https://github.com/apps/coderabbitai",
        "followers_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/received_events",
        "type": "Bot",
        "user_view_type": "public",
        "site_admin": false
      },
      "body": "_⚠️ Potential issue_\n\n**Critical concurrency issue: Non-thread-safe static cache.**\n\nThe static HashMap is accessed concurrently without synchronization, causing race conditions and potential data corruption in multi-threaded environments.\n\n\nApply this diff to use a thread-safe alternative:\n\n```diff\n-    // Intentional: non-thread-safe static mutable cache\n-    private static Map<String, User> USER_CACHE = new HashMap<>();\n+    // Thread-safe cache implementation\n+    private static final Map<String, User> USER_CACHE = new ConcurrentHashMap<>();\n```\n\n<!-- suggestion_start -->\n\n<details>\n<summary>📝 Committable suggestion</summary>\n\n> ‼️ **IMPORTANT**\n> Carefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation. Thoroughly test & benchmark the code to ensure it meets the requirements.\n\n```suggestion\n    // Thread-safe cache implementation\n    private static final Map<String, User> USER_CACHE = new ConcurrentHashMap<>();\n```\n\n</details>\n\n<!-- suggestion_end -->\n\n<details>\n<summary>🤖 Prompt for AI Agents</summary>\n\n```\nIn src/main/java/org/service/UserService.java around lines 14-15, the static\nHashMap USER_CACHE is not thread-safe; replace it with a thread-safe concurrent\nmap by declaring it as a private static final ConcurrentMap<String, User> and\ninitialize it with a new ConcurrentHashMap<>(), adding the necessary imports\n(java.util.concurrent.ConcurrentMap and java.util.concurrent.ConcurrentHashMap);\nensure all usages rely on concurrent-safe operations (avoid manual external\nsynchronization) so the cache is safe for multi-threaded access.\n```\n\n</details>\n\n<!-- fingerprinting:phantom:poseidon:tarantula -->\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
      "created_at": "2025-09-10T14:48:59Z",
      "updated_at": "2025-09-10T14:49:03Z",
      "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025665",
      "pull_request_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025665"
        },
        "html": {
          "href": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025665"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1"
        }
      },
      "reactions": {
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025665/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "start_line": 14,
      "original_start_line": 14,
      "start_side": "RIGHT",
      "line": 15,
      "original_line": 15,
      "side": "RIGHT",
      "original_position": 15,
      "position": 15,
      "subject_type": "line"
    },
    {
      "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025672",
      "pull_request_review_id": 3206543212,
      "id": 2337025672,
      "node_id": "PRRC_kwDOPtYExc6LTC6I",
      "diff_hunk": "@@ -0,0 +1,49 @@\n+package org.service;\n+\n+import org.model.User;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+@Service\n+public class UserService {\n+\n+    // Intentional: non-thread-safe static mutable cache\n+    private static Map<String, User> USER_CACHE = new HashMap<>();\n+\n+    // Intentional: hard-coded secret placeholder (do not use in production)\n+    private static final String SECRET = \"changeme\";",
      "path": "src/main/java/org/service/UserService.java",
      "commit_id": "6bfb9a72e4d4d4cf678c8859da87ea8d875bc85e",
      "original_commit_id": "c9897eb80b102eb37ae12b02cdfa87d5425fbec9",
      "user": {
        "login": "coderabbitai[bot]",
        "id": 136622811,
        "node_id": "BOT_kgDOCCSy2w",
        "avatar_url": "https://avatars.githubusercontent.com/in/347564?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coderabbitai%5Bbot%5D",
        "html_url": "https://github.com/apps/coderabbitai",
        "followers_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/received_events",
        "type": "Bot",
        "user_view_type": "public",
        "site_admin": false
      },
      "body": "_⚠️ Potential issue_\n\n**Security vulnerability: Hard-coded secret.**\n\nThe hard-coded secret violates the team policy \"no-hardcoded-secrets: true\" and poses a security risk.\n\n\nApply this diff to remove the hard-coded secret:\n\n```diff\n-    // Intentional: hard-coded secret placeholder (do not use in production)\n-    private static final String SECRET = \"changeme\";\n```\n\nThe secret should be injected from environment variables via `AppConfig` if needed.\n\n<!-- suggestion_start -->\n\n<details>\n<summary>📝 Committable suggestion</summary>\n\n> ‼️ **IMPORTANT**\n> Carefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation. Thoroughly test & benchmark the code to ensure it meets the requirements.\n\n```suggestion\n// (lines 17–18 removed: hard-coded SECRET constant)\n```\n\n</details>\n\n<!-- suggestion_end -->\n\n<details>\n<summary>🤖 Prompt for AI Agents</summary>\n\n```\nIn src/main/java/org/service/UserService.java around lines 17 to 18, remove the\nhard-coded SECRET constant and fetch the secret from AppConfig (which reads\nenvironment variables) instead: delete the private static final String SECRET =\n\"changeme\"; add an instance field for the secret that is initialized via\nAppConfig (passed into the UserService constructor or via dependency injection),\nand replace usages of SECRET with that field; validate the injected value (throw\nIllegalStateException or log error and abort startup if missing) to ensure\nfail-fast behavior and no fallback to hard-coded defaults.\n```\n\n</details>\n\n<!-- fingerprinting:phantom:poseidon:tarantula -->\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
      "created_at": "2025-09-10T14:49:00Z",
      "updated_at": "2025-09-10T14:49:03Z",
      "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025672",
      "pull_request_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025672"
        },
        "html": {
          "href": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025672"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1"
        }
      },
      "reactions": {
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025672/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "start_line": 17,
      "original_start_line": 17,
      "start_side": "RIGHT",
      "line": 18,
      "original_line": 18,
      "side": "RIGHT",
      "original_position": 18,
      "position": 18,
      "subject_type": "line"
    },
    {
      "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025678",
      "pull_request_review_id": 3206543212,
      "id": 2337025678,
      "node_id": "PRRC_kwDOPtYExc6LTC6O",
      "diff_hunk": "@@ -0,0 +1,49 @@\n+package org.service;\n+\n+import org.model.User;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+@Service\n+public class UserService {\n+\n+    // Intentional: non-thread-safe static mutable cache\n+    private static Map<String, User> USER_CACHE = new HashMap<>();\n+\n+    // Intentional: hard-coded secret placeholder (do not use in production)\n+    private static final String SECRET = \"changeme\";\n+\n+    public User findUserById(String id) {",
      "path": "src/main/java/org/service/UserService.java",
      "commit_id": "6bfb9a72e4d4d4cf678c8859da87ea8d875bc85e",
      "original_commit_id": "c9897eb80b102eb37ae12b02cdfa87d5425fbec9",
      "user": {
        "login": "coderabbitai[bot]",
        "id": 136622811,
        "node_id": "BOT_kgDOCCSy2w",
        "avatar_url": "https://avatars.githubusercontent.com/in/347564?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coderabbitai%5Bbot%5D",
        "html_url": "https://github.com/apps/coderabbitai",
        "followers_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/received_events",
        "type": "Bot",
        "user_view_type": "public",
        "site_admin": false
      },
      "body": "_🛠️ Refactor suggestion_\n\n**Add public Javadoc for method.**\n\nThe team policy requires documentation for public members.\n\n\nApply this diff:\n\n```diff\n+    /**\n+     * Finds a user by ID, creating a new one if not found in cache.\n+     * \n+     * @param id the user ID to search for\n+     * @return the User object, or null if an error occurs\n+     */\n     public User findUserById(String id) {\n```\n\n<!-- suggestion_start -->\n\n<details>\n<summary>📝 Committable suggestion</summary>\n\n> ‼️ **IMPORTANT**\n> Carefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation. Thoroughly test & benchmark the code to ensure it meets the requirements.\n\n```suggestion\n    /**\n     * Finds a user by ID, creating a new one if not found in cache.\n     * \n     * @param id the user ID to search for\n     * @return the User object, or null if an error occurs\n     */\n    public User findUserById(String id) {\n```\n\n</details>\n\n<!-- suggestion_end -->\n\n<details>\n<summary>🤖 Prompt for AI Agents</summary>\n\n```\nIn src/main/java/org/service/UserService.java around line 20, the public method\nfindUserById(String id) lacks the required public Javadoc; add a standard\nJavadoc block immediately above the method that describes the method's purpose,\nthe parameter (id) and its semantics, the return value (what type of User or\nnull/optional behavior), and any thrown exceptions or special cases, following\nproject Javadoc conventions.\n```\n\n</details>\n\n<!-- fingerprinting:phantom:poseidon:tarantula -->\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
      "created_at": "2025-09-10T14:49:00Z",
      "updated_at": "2025-09-10T14:49:03Z",
      "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025678",
      "pull_request_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025678"
        },
        "html": {
          "href": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025678"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1"
        }
      },
      "reactions": {
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025678/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 20,
      "original_line": 20,
      "side": "RIGHT",
      "original_position": 20,
      "position": 20,
      "subject_type": "line"
    },
    {
      "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025690",
      "pull_request_review_id": 3206543212,
      "id": 2337025690,
      "node_id": "PRRC_kwDOPtYExc6LTC6a",
      "diff_hunk": "@@ -0,0 +1,49 @@\n+package org.service;\n+\n+import org.model.User;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+@Service\n+public class UserService {\n+\n+    // Intentional: non-thread-safe static mutable cache\n+    private static Map<String, User> USER_CACHE = new HashMap<>();\n+\n+    // Intentional: hard-coded secret placeholder (do not use in production)\n+    private static final String SECRET = \"changeme\";\n+\n+    public User findUserById(String id) {\n+        System.out.println(\"UserService.findUserById called with id=\" + id); // Intentional",
      "path": "src/main/java/org/service/UserService.java",
      "commit_id": "6bfb9a72e4d4d4cf678c8859da87ea8d875bc85e",
      "original_commit_id": "c9897eb80b102eb37ae12b02cdfa87d5425fbec9",
      "user": {
        "login": "coderabbitai[bot]",
        "id": 136622811,
        "node_id": "BOT_kgDOCCSy2w",
        "avatar_url": "https://avatars.githubusercontent.com/in/347564?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coderabbitai%5Bbot%5D",
        "html_url": "https://github.com/apps/coderabbitai",
        "followers_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/received_events",
        "type": "Bot",
        "user_view_type": "public",
        "site_admin": false
      },
      "body": "_⚠️ Potential issue_\n\n**Forbidden System.out usage violates team policy.**\n\nThe team policy \"forbid-system-out: true\" prohibits System.out.println usage. Use a proper logger instead.\n\n\nApply this diff:\n\n```diff\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n @Service\n public class UserService {\n\n+    private static final Logger logger = LoggerFactory.getLogger(UserService.class);\n+\n     public User findUserById(String id) {\n-        System.out.println(\"UserService.findUserById called with id=\" + id); // Intentional\n+        logger.info(\"UserService.findUserById called with id={}\", id);\n```\n\n<!-- suggestion_start -->\n\n<details>\n<summary>📝 Committable suggestion</summary>\n\n> ‼️ **IMPORTANT**\n> Carefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation. Thoroughly test & benchmark the code to ensure it meets the requirements.\n\n```suggestion\n// Add these imports at the top of the file\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n@Service\npublic class UserService {\n\n    // Add a logger field to the class\n    private static final Logger logger = LoggerFactory.getLogger(UserService.class);\n\n    public User findUserById(String id) {\n        logger.info(\"UserService.findUserById called with id={}\", id);\n         // ... rest of method ...\n    }\n\n    // ... other methods ...\n}\n```\n\n</details>\n\n<!-- suggestion_end -->\n\n<details>\n<summary>🤖 Prompt for AI Agents</summary>\n\n```\nIn src/main/java/org/service/UserService.java at line 21, replace the forbidden\nSystem.out.println call with a proper logger: remove the System.out.println(...)\nline and use a private static final org.slf4j.Logger LOGGER =\norg.slf4j.LoggerFactory.getLogger(UserService.class); (declare this logger at\nthe top of the class if it doesn't exist), then log the same message using\nLOGGER.info(\"UserService.findUserById called with id={}\", id); and add the\nnecessary imports (org.slf4j.Logger and org.slf4j.LoggerFactory).\n```\n\n</details>\n\n<!-- fingerprinting:phantom:poseidon:tarantula -->\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
      "created_at": "2025-09-10T14:49:00Z",
      "updated_at": "2025-09-10T14:49:03Z",
      "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025690",
      "pull_request_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025690"
        },
        "html": {
          "href": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025690"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1"
        }
      },
      "reactions": {
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025690/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 21,
      "original_line": 21,
      "side": "RIGHT",
      "original_position": 21,
      "position": 21,
      "subject_type": "line"
    },
    {
      "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025703",
      "pull_request_review_id": 3206543212,
      "id": 2337025703,
      "node_id": "PRRC_kwDOPtYExc6LTC6n",
      "diff_hunk": "@@ -0,0 +1,49 @@\n+package org.service;\n+\n+import org.model.User;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+@Service\n+public class UserService {\n+\n+    // Intentional: non-thread-safe static mutable cache\n+    private static Map<String, User> USER_CACHE = new HashMap<>();\n+\n+    // Intentional: hard-coded secret placeholder (do not use in production)\n+    private static final String SECRET = \"changeme\";\n+\n+    public User findUserById(String id) {\n+        System.out.println(\"UserService.findUserById called with id=\" + id); // Intentional\n+        try {\n+            // Simulate bad data-access pattern with string concatenation\n+            String query = \"SELECT * FROM users WHERE id = '\" + id + \"'\";",
      "path": "src/main/java/org/service/UserService.java",
      "commit_id": "6bfb9a72e4d4d4cf678c8859da87ea8d875bc85e",
      "original_commit_id": "c9897eb80b102eb37ae12b02cdfa87d5425fbec9",
      "user": {
        "login": "coderabbitai[bot]",
        "id": 136622811,
        "node_id": "BOT_kgDOCCSy2w",
        "avatar_url": "https://avatars.githubusercontent.com/in/347564?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coderabbitai%5Bbot%5D",
        "html_url": "https://github.com/apps/coderabbitai",
        "followers_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/received_events",
        "type": "Bot",
        "user_view_type": "public",
        "site_admin": false
      },
      "body": "_⚠️ Potential issue_\n\n**SQL injection vulnerability in string concatenation.**\n\nThe naive string concatenation for SQL query construction is vulnerable to SQL injection attacks, even though no real database is used here.\n\n\nApply this diff to use parameterized queries:\n\n```diff\n-            // Simulate bad data-access pattern with string concatenation\n-            String query = \"SELECT * FROM users WHERE id = '\" + id + \"'\";\n+            // Use parameterized query approach\n+            String query = \"SELECT * FROM users WHERE id = ?\";\n             // Pretend to execute query (no real DB)\n```\n\n<!-- suggestion_start -->\n\n<details>\n<summary>📝 Committable suggestion</summary>\n\n> ‼️ **IMPORTANT**\n> Carefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation. Thoroughly test & benchmark the code to ensure it meets the requirements.\n\n```suggestion\n            // Use parameterized query approach\n            String query = \"SELECT * FROM users WHERE id = ?\";\n            // Pretend to execute query (no real DB)\n```\n\n</details>\n\n<!-- suggestion_end -->\n\n<details>\n<summary>🤖 Prompt for AI Agents</summary>\n\n```\nIn src/main/java/org/service/UserService.java around line 24, the SQL query is\nbuilt via string concatenation which creates an SQL injection risk; replace it\nwith a parameterized PreparedStatement (use a parameter placeholder like ?), set\nthe id value via the PreparedStatement#setString (or appropriate setter),\nexecute the prepared statement, and wrap JDBC resources in a try-with-resources\nto ensure proper closing and exception safety.\n```\n\n</details>\n\n<!-- fingerprinting:phantom:poseidon:tarantula -->\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
      "created_at": "2025-09-10T14:49:00Z",
      "updated_at": "2025-09-10T14:49:03Z",
      "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025703",
      "pull_request_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025703"
        },
        "html": {
          "href": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025703"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1"
        }
      },
      "reactions": {
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025703/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 24,
      "original_line": 24,
      "side": "RIGHT",
      "original_position": 24,
      "position": 24,
      "subject_type": "line"
    },
    {
      "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025716",
      "pull_request_review_id": 3206543212,
      "id": 2337025716,
      "node_id": "PRRC_kwDOPtYExc6LTC60",
      "diff_hunk": "@@ -0,0 +1,49 @@\n+package org.service;\n+\n+import org.model.User;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+@Service\n+public class UserService {\n+\n+    // Intentional: non-thread-safe static mutable cache\n+    private static Map<String, User> USER_CACHE = new HashMap<>();\n+\n+    // Intentional: hard-coded secret placeholder (do not use in production)\n+    private static final String SECRET = \"changeme\";\n+\n+    public User findUserById(String id) {\n+        System.out.println(\"UserService.findUserById called with id=\" + id); // Intentional\n+        try {\n+            // Simulate bad data-access pattern with string concatenation\n+            String query = \"SELECT * FROM users WHERE id = '\" + id + \"'\";\n+            // Pretend to execute query (no real DB)\n+\n+            // Inefficient O(n^2) loop for demo\n+            List<User> all = new ArrayList<>(USER_CACHE.values());\n+            for (int i = 0; i < all.size(); i++) {\n+                for (int j = 0; j < all.size(); j++) {\n+                    // no-op to waste time\n+                }\n+            }",
      "path": "src/main/java/org/service/UserService.java",
      "commit_id": "6bfb9a72e4d4d4cf678c8859da87ea8d875bc85e",
      "original_commit_id": "c9897eb80b102eb37ae12b02cdfa87d5425fbec9",
      "user": {
        "login": "coderabbitai[bot]",
        "id": 136622811,
        "node_id": "BOT_kgDOCCSy2w",
        "avatar_url": "https://avatars.githubusercontent.com/in/347564?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coderabbitai%5Bbot%5D",
        "html_url": "https://github.com/apps/coderabbitai",
        "followers_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/received_events",
        "type": "Bot",
        "user_view_type": "public",
        "site_admin": false
      },
      "body": "_🛠️ Refactor suggestion_\n\n**Performance issue: Inefficient O(n²) algorithm.**\n\nThe nested loops create unnecessary O(n²) complexity without any functional purpose, wasting CPU resources.\n\n\nApply this diff to remove the inefficient code:\n\n```diff\n-            // Inefficient O(n^2) loop for demo\n-            List<User> all = new ArrayList<>(USER_CACHE.values());\n-            for (int i = 0; i < all.size(); i++) {\n-                for (int j = 0; j < all.size(); j++) {\n-                    // no-op to waste time\n-                }\n-            }\n-\n```\n\n<!-- suggestion_start -->\n\n<details>\n<summary>📝 Committable suggestion</summary>\n\n> ‼️ **IMPORTANT**\n> Carefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation. Thoroughly test & benchmark the code to ensure it meets the requirements.\n\n```suggestion\n\n```\n\n</details>\n\n<!-- suggestion_end -->\n\n<details>\n<summary>🤖 Prompt for AI Agents</summary>\n\n```\nIn src/main/java/org/service/UserService.java around lines 27 to 33, remove the\nunused nested loops that create an O(n²) CPU waste: delete the temporary\nList<User> all = new ArrayList<>(USER_CACHE.values()) and the two for-loops\n(including the inner no-op) so no-op iteration is eliminated; if iteration over\nusers is actually needed later, replace with a single linear pass or stream\noperation performing the required work, otherwise remove the block entirely to\nrestore O(n) or better performance.\n```\n\n</details>\n\n<!-- fingerprinting:phantom:poseidon:tarantula -->\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
      "created_at": "2025-09-10T14:49:00Z",
      "updated_at": "2025-09-10T14:49:03Z",
      "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025716",
      "pull_request_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025716"
        },
        "html": {
          "href": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025716"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1"
        }
      },
      "reactions": {
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025716/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "start_line": 27,
      "original_start_line": 27,
      "start_side": "RIGHT",
      "line": 33,
      "original_line": 33,
      "side": "RIGHT",
      "original_position": 33,
      "position": 33,
      "subject_type": "line"
    },
    {
      "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025727",
      "pull_request_review_id": 3206543212,
      "id": 2337025727,
      "node_id": "PRRC_kwDOPtYExc6LTC6_",
      "diff_hunk": "@@ -0,0 +1,49 @@\n+package org.service;\n+\n+import org.model.User;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+@Service\n+public class UserService {\n+\n+    // Intentional: non-thread-safe static mutable cache\n+    private static Map<String, User> USER_CACHE = new HashMap<>();\n+\n+    // Intentional: hard-coded secret placeholder (do not use in production)\n+    private static final String SECRET = \"changeme\";\n+\n+    public User findUserById(String id) {\n+        System.out.println(\"UserService.findUserById called with id=\" + id); // Intentional\n+        try {\n+            // Simulate bad data-access pattern with string concatenation\n+            String query = \"SELECT * FROM users WHERE id = '\" + id + \"'\";\n+            // Pretend to execute query (no real DB)\n+\n+            // Inefficient O(n^2) loop for demo\n+            List<User> all = new ArrayList<>(USER_CACHE.values());\n+            for (int i = 0; i < all.size(); i++) {\n+                for (int j = 0; j < all.size(); j++) {\n+                    // no-op to waste time\n+                }\n+            }\n+\n+            User cached = USER_CACHE.get(id);\n+            if (cached != null) return cached;\n+\n+            // Fake user creation\n+            User user = new User(id, \"User \" + id, id + \"@example.com\");\n+            USER_CACHE.put(id, user);\n+            return user;\n+        } catch (Exception e) {\n+            // Intentional: swallow exception (bad practice)\n+        }\n+        return null;",
      "path": "src/main/java/org/service/UserService.java",
      "commit_id": "6bfb9a72e4d4d4cf678c8859da87ea8d875bc85e",
      "original_commit_id": "c9897eb80b102eb37ae12b02cdfa87d5425fbec9",
      "user": {
        "login": "coderabbitai[bot]",
        "id": 136622811,
        "node_id": "BOT_kgDOCCSy2w",
        "avatar_url": "https://avatars.githubusercontent.com/in/347564?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coderabbitai%5Bbot%5D",
        "html_url": "https://github.com/apps/coderabbitai",
        "followers_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/received_events",
        "type": "Bot",
        "user_view_type": "public",
        "site_admin": false
      },
      "body": "_⚠️ Potential issue_\n\n**Critical exception handling issue: Silent exception swallowing.**\n\nThe team policy \"exception-handling: no-silence\" forbids catching exceptions without proper handling. This violates best practices and makes debugging difficult.\n\n\nApply this diff:\n\n```diff\n         } catch (Exception e) {\n-            // Intentional: swallow exception (bad practice)\n+            logger.error(\"Error finding user with id: {}\", id, e);\n+            // Consider re-throwing or returning a proper error response\n+            throw new UserServiceException(\"Failed to find user with id: \" + id, e);\n         }\n```\n\nYou'll need to create a custom `UserServiceException` class or use an existing Spring exception.\n\n\n> Committable suggestion skipped: line range outside the PR's diff.\n\n<details>\n<summary>🤖 Prompt for AI Agents</summary>\n\n```\nIn src/main/java/org/service/UserService.java around lines 42 to 45, replace the\nempty catch that swallows Exception with proper handling: create a custom\nunchecked UserServiceException (or use an appropriate Spring RuntimeException),\nlog the original exception with context (using the class logger), and rethrow a\nnew UserServiceException that wraps the caught exception and provides a clear\nmessage; ensure method signatures or callers expect runtime exceptions or update\nthem to declare the new exception as needed.\n```\n\n</details>\n\n<!-- fingerprinting:phantom:poseidon:tarantula -->\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
      "created_at": "2025-09-10T14:49:00Z",
      "updated_at": "2025-09-10T14:49:03Z",
      "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025727",
      "pull_request_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025727"
        },
        "html": {
          "href": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025727"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1"
        }
      },
      "reactions": {
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025727/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "start_line": 42,
      "original_start_line": 42,
      "start_side": "RIGHT",
      "line": 45,
      "original_line": 45,
      "side": "RIGHT",
      "original_position": 45,
      "position": 45,
      "subject_type": "line"
    },
    {
      "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025741",
      "pull_request_review_id": 3206543212,
      "id": 2337025741,
      "node_id": "PRRC_kwDOPtYExc6LTC7N",
      "diff_hunk": "@@ -0,0 +1,12 @@\n+server:\n+  port: 8080\n+\n+app:\n+  # Placeholder. Configure via environment variable APP_SECRET.\n+  secret: ${APP_SECRET:}\n+\n+spring:\n+  application:\n+    name: code-rabbit-eval-java-microservice",
      "path": "src/main/resources/application.yml",
      "commit_id": "6bfb9a72e4d4d4cf678c8859da87ea8d875bc85e",
      "original_commit_id": "c9897eb80b102eb37ae12b02cdfa87d5425fbec9",
      "user": {
        "login": "coderabbitai[bot]",
        "id": 136622811,
        "node_id": "BOT_kgDOCCSy2w",
        "avatar_url": "https://avatars.githubusercontent.com/in/347564?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coderabbitai%5Bbot%5D",
        "html_url": "https://github.com/apps/coderabbitai",
        "followers_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/received_events",
        "type": "Bot",
        "user_view_type": "public",
        "site_admin": false
      },
      "body": "_💡 Verification agent_\n\n<details>\n<summary>🧩 Analysis chain</summary>\n\n**Tighten config: honor PORT env; fail fast on missing secret; align injection.**\n\n- Prefer 12‑factor port: use ${PORT:8080}.\n- Avoid defaulting secrets to empty; fail fast by omitting the default.\n- Ensure code injects app.secret (not APP_SECRET directly) to keep one canonical property.\n\n\n\n\nApply:\n\n```diff\n server:\n-  port: 8080\n+  port: ${PORT:8080}\n\n app:\n   # Placeholder. Configure via environment variable APP_SECRET.\n-  secret: ${APP_SECRET:}\n+  secret: ${APP_SECRET}\n```\n\nThen verify and update any usages to bind to app.secret:\n\n---\n\n🏁 Script executed:\n\n```shell\n#!/bin/bash\n# Find direct injections of APP_SECRET and suggest switching to app.secret\nrg -nP '@Value\\(\\s*\"\\$\\{APP_SECRET' -C2 || true\nrg -nP '@Value\\(\\s*\"\\$\\{app\\.secret' -C2 || true\n```\n\nLength of output: 388\n\n---\n\n\n\n</details>\n\n**Tighten config: honor PORT env; fail fast on missing app.secret; update injection**\n\n- Apply to application.yml:\n```diff\n server:\n-  port: 8080\n+  port: ${PORT:8080}\n\n app:\n-  secret: ${APP_SECRET:}\n+  secret: ${APP_SECRET}\n```\n- In AppConfig.java, switch direct APP_SECRET injection to the canonical app.secret:\n```diff\n@@ src/main/java/org/configuration/AppConfig.java:10\n-    @Value(\"${APP_SECRET:}\")\n+    @Value(\"${app.secret}\")\n     private String appSecret;\n```\nVerify no remaining `@Value(\"${APP_SECRET\")` usages.\n\n<!-- suggestion_start -->\n\n<details>\n<summary>📝 Committable suggestion</summary>\n\n> ‼️ **IMPORTANT**\n> Carefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation. Thoroughly test & benchmark the code to ensure it meets the requirements.\n\n```suggestion\n# File: src/main/resources/application.yml\nserver:\n  # Honor PORT env var, defaulting to 8080 if not set\n  port: ${PORT:8080}\n\napp:\n  # Fail fast if APP_SECRET is missing\n  secret: ${APP_SECRET}\n\nspring:\n  application:\n    name: code-rabbit-eval-java-microservice\n```\n\n```suggestion\n// File: src/main/java/org/configuration/AppConfig.java\npackage org.configuration;\n\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.context.annotation.Configuration;\n\n@Configuration\npublic class AppConfig {\n    // Inject the canonical app.secret property (must be present or startup will fail)\n    @Value(\"${app.secret}\")\n    private String appSecret;\n\n    // getters, other beans, etc.\n}\n```\n\n</details>\n\n<!-- suggestion_end -->\n\n<details>\n<summary>🤖 Prompt for AI Agents</summary>\n\n```\nIn src/main/resources/application.yml lines 1-10: server.port should honor the\nPORT environment variable and app.secret must fail fast if missing; update\nserver.port to use ${PORT:8080} and change app.secret to\n${app.secret:${APP_SECRET:}} (or simply ${app.secret:} with no default and rely\non fail-fast validation). In AppConfig.java replace any direct injection of\nAPP_SECRET (e.g. @Value(\"${APP_SECRET...}\") ) with the canonical property key\n(inject @Value(\"${app.secret}\") or bind via @ConfigurationProperties) and add\nstartup validation to throw an exception when app.secret is empty so the app\nfails fast. Finally search the codebase for any remaining occurrences of\n@Value(\"${APP_SECRET\") and replace them with the canonical app.secret usage.\n```\n\n</details>\n\n<!-- fingerprinting:phantom:poseidon:chinchilla -->\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
      "created_at": "2025-09-10T14:49:00Z",
      "updated_at": "2025-09-10T14:49:03Z",
      "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025741",
      "pull_request_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025741"
        },
        "html": {
          "href": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025741"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1"
        }
      },
      "reactions": {
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025741/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "start_line": 1,
      "original_start_line": 1,
      "start_side": "RIGHT",
      "line": 10,
      "original_line": 10,
      "side": "RIGHT",
      "original_position": 10,
      "position": 10,
      "subject_type": "line"
    },
    {
      "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025757",
      "pull_request_review_id": 3206543212,
      "id": 2337025757,
      "node_id": "PRRC_kwDOPtYExc6LTC7d",
      "diff_hunk": "@@ -0,0 +1,22 @@\n+package org.api;\n+\n+import org.junit.jupiter.api.Test;\n+import org.model.User;\n+import org.service.UserService;\n+import org.springframework.http.ResponseEntity;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+public class UserControllerTest {\n+\n+    @Test\n+    public void getUserById_shouldReturnOk_whenUserExists() {\n+        UserService mockService = new UserService();\n+        UserController controller = new UserController(mockService);\n+        ResponseEntity<User> response = controller.getUserById(\"123\");\n+        assertEquals(200, response.getStatusCode().value());\n+        assertNotNull(response.getBody());\n+    }\n+}",
      "path": "src/test/java/org/api/UserControllerTest.java",
      "commit_id": "6bfb9a72e4d4d4cf678c8859da87ea8d875bc85e",
      "original_commit_id": "c9897eb80b102eb37ae12b02cdfa87d5425fbec9",
      "user": {
        "login": "coderabbitai[bot]",
        "id": 136622811,
        "node_id": "BOT_kgDOCCSy2w",
        "avatar_url": "https://avatars.githubusercontent.com/in/347564?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coderabbitai%5Bbot%5D",
        "html_url": "https://github.com/apps/coderabbitai",
        "followers_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/received_events",
        "type": "Bot",
        "user_view_type": "public",
        "site_admin": false
      },
      "body": "_🛠️ Refactor suggestion_\n\n**Add missing Javadoc and improve test coverage.**\n\nThe team policy requires \"javadoc-required: public-members\" but this public test class is missing documentation. Additionally, the test has incomplete coverage - it doesn't verify the actual User data or test error scenarios.\n\n\nApply this diff to add documentation and improve the test:\n\n```diff\n+/**\n+ * Unit tests for UserController functionality.\n+ */\n public class UserControllerTest {\n\n+    /**\n+     * Tests that getUserById returns HTTP 200 and non-null user when user exists.\n+     */\n     @Test\n     public void getUserById_shouldReturnOk_whenUserExists() {\n         UserService mockService = new UserService();\n         UserController controller = new UserController(mockService);\n         ResponseEntity<User> response = controller.getUserById(\"123\");\n         assertEquals(200, response.getStatusCode().value());\n         assertNotNull(response.getBody());\n+        assertEquals(\"123\", response.getBody().getId());\n+        assertEquals(\"User 123\", response.getBody().getName());\n     }\n }\n```\n\n<!-- suggestion_start -->\n\n<details>\n<summary>📝 Committable suggestion</summary>\n\n> ‼️ **IMPORTANT**\n> Carefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation. Thoroughly test & benchmark the code to ensure it meets the requirements.\n\n```suggestion\n/**\n * Unit tests for UserController functionality.\n */\npublic class UserControllerTest {\n\n    /**\n     * Tests that getUserById returns HTTP 200 and non-null user when user exists.\n     */\n    @Test\n    public void getUserById_shouldReturnOk_whenUserExists() {\n        UserService mockService = new UserService();\n        UserController controller = new UserController(mockService);\n        ResponseEntity<User> response = controller.getUserById(\"123\");\n        assertEquals(200, response.getStatusCode().value());\n        assertNotNull(response.getBody());\n        assertEquals(\"123\", response.getBody().getId());\n        assertEquals(\"User 123\", response.getBody().getName());\n    }\n}\n```\n\n</details>\n\n<!-- suggestion_end -->\n\n<details>\n<summary>🤖 Prompt for AI Agents</summary>\n\n```\nIn src/test/java/org/api/UserControllerTest.java around lines 10 to 20, add\nJavadoc for the public test class and its public test methods to satisfy the\n\"javadoc-required: public-members\" policy, and expand test coverage: replace the\nconcrete UserService with a mocked service (or a simple stub) so you can control\nresponses, update the existing happy-path test to assert specific User fields\n(id, name, etc.) in the response body in addition to status code, and add at\nleast one negative test that simulates the service returning no user (or\nthrowing a NotFound) and asserts the controller returns the appropriate error\nstatus (e.g., 404) and no body; ensure tests remain self-contained and clean\nup/verify mock interactions as needed.\n```\n\n</details>\n\n<!-- fingerprinting:phantom:poseidon:tarantula -->\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
      "created_at": "2025-09-10T14:49:00Z",
      "updated_at": "2025-09-10T14:49:03Z",
      "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025757",
      "pull_request_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025757"
        },
        "html": {
          "href": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025757"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1"
        }
      },
      "reactions": {
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025757/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 20,
      "original_line": 20,
      "side": "RIGHT",
      "original_position": 20,
      "position": 20,
      "subject_type": "line"
    },
    {
      "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025774",
      "pull_request_review_id": 3206543212,
      "id": 2337025774,
      "node_id": "PRRC_kwDOPtYExc6LTC7u",
      "diff_hunk": "@@ -0,0 +1,12 @@\n+server:\n+  port: 8080\n+\n+app:\n+  # Placeholder. Configure via environment variable APP_SECRET.\n+  secret: ${APP_SECRET:}\n+\n+spring:\n+  application:\n+    name: code-rabbit-eval-java-microservice\n+",
      "path": "target/classes/application.yml",
      "commit_id": "6bfb9a72e4d4d4cf678c8859da87ea8d875bc85e",
      "original_commit_id": "c9897eb80b102eb37ae12b02cdfa87d5425fbec9",
      "user": {
        "login": "coderabbitai[bot]",
        "id": 136622811,
        "node_id": "BOT_kgDOCCSy2w",
        "avatar_url": "https://avatars.githubusercontent.com/in/347564?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coderabbitai%5Bbot%5D",
        "html_url": "https://github.com/apps/coderabbitai",
        "followers_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/received_events",
        "type": "Bot",
        "user_view_type": "public",
        "site_admin": false
      },
      "body": "_⚠️ Potential issue_\n\n**Remove build artifacts from VCS (commit includes target/).**\n\nGenerated files under target/ should not be committed; this risks config drift and secret exposure. Add target/ to .gitignore and delete this file from the repo. The real source is already under src/main/resources/application.yml.\n\n\n\nAdd (or update) a top-level .gitignore:\n\n```diff\n+ /target/\n```\n\n<!-- suggestion_start -->\n\n<details>\n<summary>📝 Committable suggestion</summary>\n\n> ‼️ **IMPORTANT**\n> Carefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation. Thoroughly test & benchmark the code to ensure it meets the requirements.\n\n```suggestion\n# /.gitignore (at the root of your repository)\n\n# Ignore Maven build output\n/target/\n```\n\n</details>\n\n<!-- suggestion_end -->\n\n<details>\n<summary>🤖 Prompt for AI Agents</summary>\n\n```\nIn target/classes/application.yml around lines 1-11, this is a generated build\nartifact that should not be tracked; remove the committed file and ensure the\nreal configuration remains under src/main/resources/application.yml, then add or\nupdate the repository .gitignore to include target/ (and any other build output\ndirectories) so future build artifacts are ignored, and commit the .gitignore\nchange and the deletion of target/classes/application.yml in the same PR.\n```\n\n</details>\n\n<!-- fingerprinting:phantom:poseidon:chinchilla -->\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
      "created_at": "2025-09-10T14:49:01Z",
      "updated_at": "2025-09-10T14:49:03Z",
      "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025774",
      "pull_request_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025774"
        },
        "html": {
          "href": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025774"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1"
        }
      },
      "reactions": {
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025774/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "start_line": 1,
      "original_start_line": 1,
      "start_side": "RIGHT",
      "line": 11,
      "original_line": 11,
      "side": "RIGHT",
      "original_position": 11,
      "position": 11,
      "subject_type": "line"
    },
    {
      "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025804",
      "pull_request_review_id": 3206543212,
      "id": 2337025804,
      "node_id": "PRRC_kwDOPtYExc6LTC8M",
      "diff_hunk": "@@ -0,0 +1,3 @@\n+This folder is intentionally mis-cased to trigger folder-naming policy.\n+\n+",
      "path": "target/classes/org/Service_misnamed/Readme.txt",
      "commit_id": "6bfb9a72e4d4d4cf678c8859da87ea8d875bc85e",
      "original_commit_id": "c9897eb80b102eb37ae12b02cdfa87d5425fbec9",
      "user": {
        "login": "coderabbitai[bot]",
        "id": 136622811,
        "node_id": "BOT_kgDOCCSy2w",
        "avatar_url": "https://avatars.githubusercontent.com/in/347564?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coderabbitai%5Bbot%5D",
        "html_url": "https://github.com/apps/coderabbitai",
        "followers_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/received_events",
        "type": "Bot",
        "user_view_type": "public",
        "site_admin": false
      },
      "body": "_🛠️ Refactor suggestion_\n\n**Remove mis-cased folder in build output; ignore target/.**\n\nThis is both a misnamed folder and a compiled artifact. Fix the source folder name (see src/main/java) and ensure target/ is ignored so this file never appears in commits.\n\n<details>\n<summary>🤖 Prompt for AI Agents</summary>\n\n```\nIn target/classes/org/Service_misnamed/Readme.txt around lines 1 to 3: this file\ncomes from a mis-cased source folder and compiled output; fix it by renaming the\nsource folder in src/main/java to the correct case so package paths match,\nrebuild to regenerate correct classes, remove the mis-cased compiled folder from\nthe repo (git rm -r --cached target/classes/org/Service_misnamed or delete and\ncommit) and ensure target/ is listed in .gitignore so build artifacts are never\ncommitted.\n```\n\n</details>\n\n<!-- fingerprinting:phantom:poseidon:chinchilla -->\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
      "created_at": "2025-09-10T14:49:01Z",
      "updated_at": "2025-09-10T14:49:04Z",
      "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025804",
      "pull_request_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025804"
        },
        "html": {
          "href": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337025804"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1"
        }
      },
      "reactions": {
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337025804/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "start_line": 1,
      "original_start_line": 1,
      "start_side": "RIGHT",
      "line": 3,
      "original_line": 3,
      "side": "RIGHT",
      "original_position": 3,
      "position": 3,
      "subject_type": "line"
    },
    {
      "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337193096",
      "pull_request_review_id": 3206788086,
      "id": 2337193096,
      "node_id": "PRRC_kwDOPtYExc6LTryI",
      "diff_hunk": "@@ -0,0 +1,67 @@\n+# Requires: public repo (no auth) or a GitHub token in $env:GITHUB_TOKEN for higher rate limits\n+param(\n+    [string]$Owner = \"SravanYandrapalli\",\n+    [string]$Repo = \"code-rabbit-eval-java-ms\",\n+    [int]$PrNumber\n+)\n+\n+$ErrorActionPreference = 'Stop'",
      "path": "scripts/fetch-coderabbit-pr-artifacts.ps1",
      "commit_id": "6bfb9a72e4d4d4cf678c8859da87ea8d875bc85e",
      "original_commit_id": "6bfb9a72e4d4d4cf678c8859da87ea8d875bc85e",
      "user": {
        "login": "coderabbitai[bot]",
        "id": 136622811,
        "node_id": "BOT_kgDOCCSy2w",
        "avatar_url": "https://avatars.githubusercontent.com/in/347564?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coderabbitai%5Bbot%5D",
        "html_url": "https://github.com/apps/coderabbitai",
        "followers_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/received_events",
        "type": "Bot",
        "user_view_type": "public",
        "site_admin": false
      },
      "body": "_🛠️ Refactor suggestion_\n\n**Define headers (incl. token) before any API calls**\n\nInitial requests don’t use the token, risking rate limits and inconsistent behavior.\n\n\n```diff\n $ErrorActionPreference = 'Stop'\n+\n+# Reuse for all requests (adds token if present)\n+$headers = @{ \n+  'User-Agent'='coderabbit-fetch'\n+  'Accept'='application/vnd.github+json'\n+  'X-GitHub-Api-Version'='2022-11-28'\n+}\n+if ($env:GITHUB_TOKEN) {\n+  $headers.Authorization = \"Bearer $($env:GITHUB_TOKEN)\"\n+}\n```\n\n<!-- suggestion_start -->\n\n<details>\n<summary>📝 Committable suggestion</summary>\n\n> ‼️ **IMPORTANT**\n> Carefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation. Thoroughly test & benchmark the code to ensure it meets the requirements.\n\n```suggestion\n$ErrorActionPreference = 'Stop'\n\n# Reuse for all requests (adds token if present)\n$headers = @{ \n  'User-Agent'          = 'coderabbit-fetch'\n  'Accept'              = 'application/vnd.github+json'\n  'X-GitHub-Api-Version' = '2022-11-28'\n}\nif ($env:GITHUB_TOKEN) {\n  $headers.Authorization = \"Bearer $($env:GITHUB_TOKEN)\"\n}\n```\n\n</details>\n\n<!-- suggestion_end -->\n\n<details>\n<summary>🤖 Prompt for AI Agents</summary>\n\n```\nIn scripts/fetch-coderabbit-pr-artifacts.ps1 around line 8, the script sets\n$ErrorActionPreference but makes initial API requests without defining the\nAuthorization and other HTTP headers first; define a headers hashtable\n(including the Authorization: \"Bearer $token\" header and any Accept/Content-Type\nheaders) immediately after the token is obtained and before any\nInvoke-RestMethod/Invoke-WebRequest calls, then pass that headers hashtable to\nall subsequent API calls to ensure the token is always sent and avoid\nrate-limit/inconsistent behavior.\n```\n\n</details>\n\n<!-- fingerprinting:phantom:poseidon:chinchilla -->\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
      "created_at": "2025-09-10T15:46:37Z",
      "updated_at": "2025-09-10T15:46:38Z",
      "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337193096",
      "pull_request_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337193096"
        },
        "html": {
          "href": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337193096"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1"
        }
      },
      "reactions": {
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337193096/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 8,
      "original_line": 8,
      "side": "RIGHT",
      "original_position": 8,
      "position": 8,
      "subject_type": "line"
    },
    {
      "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337193106",
      "pull_request_review_id": 3206788086,
      "id": 2337193106,
      "node_id": "PRRC_kwDOPtYExc6LTryS",
      "diff_hunk": "@@ -0,0 +1,67 @@\n+# Requires: public repo (no auth) or a GitHub token in $env:GITHUB_TOKEN for higher rate limits\n+param(\n+    [string]$Owner = \"SravanYandrapalli\",\n+    [string]$Repo = \"code-rabbit-eval-java-ms\",\n+    [int]$PrNumber\n+)\n+\n+$ErrorActionPreference = 'Stop'\n+\n+if (-not $PrNumber) {\n+    $prs = Invoke-RestMethod -Headers @{ 'User-Agent'='coderabbit-fetch'; 'Accept'='application/vnd.github+json' } -Uri \"https://api.github.com/repos/$Owner/$Repo/pulls?state=open\"\n+    if (-not $prs) {\n+        $prs = Invoke-RestMethod -Headers @{ 'User-Agent'='coderabbit-fetch'; 'Accept'='application/vnd.github+json' } -Uri \"https://api.github.com/repos/$Owner/$Repo/pulls?state=all&per_page=1&sort=created&direction=desc\"\n+    }\n+    $pr = $prs | Select-Object -First 1\n+    $PrNumber = $pr.number\n+}",
      "path": "scripts/fetch-coderabbit-pr-artifacts.ps1",
      "commit_id": "6bfb9a72e4d4d4cf678c8859da87ea8d875bc85e",
      "original_commit_id": "6bfb9a72e4d4d4cf678c8859da87ea8d875bc85e",
      "user": {
        "login": "coderabbitai[bot]",
        "id": 136622811,
        "node_id": "BOT_kgDOCCSy2w",
        "avatar_url": "https://avatars.githubusercontent.com/in/347564?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coderabbitai%5Bbot%5D",
        "html_url": "https://github.com/apps/coderabbitai",
        "followers_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/received_events",
        "type": "Bot",
        "user_view_type": "public",
        "site_admin": false
      },
      "body": "_⚠️ Potential issue_\n\n**Fix PR discovery: empty-array check can skip fallback and cause $null deref**\n\n`if (-not $prs)` is false for empty arrays; `$pr.number` then throws. Also fetch only the latest PR and use auth headers.\n\n\n```diff\n-if (-not $PrNumber) {\n-    $prs = Invoke-RestMethod -Headers @{ 'User-Agent'='coderabbit-fetch'; 'Accept'='application/vnd.github+json' } -Uri \"https://api.github.com/repos/$Owner/$Repo/pulls?state=open\"\n-    if (-not $prs) {\n-        $prs = Invoke-RestMethod -Headers @{ 'User-Agent'='coderabbit-fetch'; 'Accept'='application/vnd.github+json' } -Uri \"https://api.github.com/repos/$Owner/$Repo/pulls?state=all&per_page=1&sort=created&direction=desc\"\n-    }\n-    $pr = $prs | Select-Object -First 1\n-    $PrNumber = $pr.number\n-}\n+if (-not $PrNumber) {\n+    $prs = Invoke-RestMethod -Headers $headers -Uri \"https://api.github.com/repos/$Owner/$Repo/pulls?state=open&per_page=1&sort=created&direction=desc\"\n+    if (-not $prs -or @($prs).Count -eq 0) {\n+        $prs = Invoke-RestMethod -Headers $headers -Uri \"https://api.github.com/repos/$Owner/$Repo/pulls?state=all&per_page=1&sort=created&direction=desc\"\n+    }\n+    $pr = $prs | Select-Object -First 1\n+    if (-not $pr) { throw \"No pull requests found for $Owner/$Repo.\" }\n+    $PrNumber = $pr.number\n+}\n```\n\n<!-- suggestion_start -->\n\n<details>\n<summary>📝 Committable suggestion</summary>\n\n> ‼️ **IMPORTANT**\n> Carefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation. Thoroughly test & benchmark the code to ensure it meets the requirements.\n\n```suggestion\nif (-not $PrNumber) {\n    # Try fetching the latest open PR (paginated to 1, sorted by creation descending)\n    $prs = Invoke-RestMethod -Headers $headers -Uri \"https://api.github.com/repos/$Owner/$Repo/pulls?state=open&per_page=1&sort=created&direction=desc\"\n    # If no open PRs (array empty or null), fall back to the newest PR regardless of state\n    if (-not $prs -or @($prs).Count -eq 0) {\n        $prs = Invoke-RestMethod -Headers $headers -Uri \"https://api.github.com/repos/$Owner/$Repo/pulls?state=all&per_page=1&sort=created&direction=desc\"\n    }\n    $pr = $prs | Select-Object -First 1\n    if (-not $pr) { throw \"No pull requests found for $Owner/$Repo.\" }\n    $PrNumber = $pr.number\n}\n```\n\n</details>\n\n<!-- suggestion_end -->\n\n<!-- fingerprinting:phantom:poseidon:chinchilla -->\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
      "created_at": "2025-09-10T15:46:37Z",
      "updated_at": "2025-09-10T15:46:38Z",
      "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337193106",
      "pull_request_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337193106"
        },
        "html": {
          "href": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#discussion_r2337193106"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1"
        }
      },
      "reactions": {
        "url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/comments/2337193106/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "start_line": 10,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": 17,
      "original_line": 17,
      "side": "RIGHT",
      "original_position": 17,
      "position": 17,
      "subject_type": "line"
    }
  ],
  "reviews": [
    {
      "id": 3206543212,
      "node_id": "PRR_kwDOPtYExc6_H_ds",
      "user": {
        "login": "coderabbitai[bot]",
        "id": 136622811,
        "node_id": "BOT_kgDOCCSy2w",
        "avatar_url": "https://avatars.githubusercontent.com/in/347564?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coderabbitai%5Bbot%5D",
        "html_url": "https://github.com/apps/coderabbitai",
        "followers_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/received_events",
        "type": "Bot",
        "user_view_type": "public",
        "site_admin": false
      },
      "body": "**Actionable comments posted: 19**\n\n<details>\n<summary>🧹 Nitpick comments (17)</summary><blockquote>\n\n<details>\n<summary>docs/CodeReview/.gitkeep (1)</summary><blockquote>\n\n`1-2`: **Keep .gitkeep truly empty.**\n\nDrop the stray blank lines to avoid noisy diffs.\n\n\n```diff\n-\n-\n```\n\n</blockquote></details>\n<details>\n<summary>README.md (1)</summary><blockquote>\n\n`13-28`: **Add language to fenced code block (markdownlint MD040).**\n\nMark the “Project layout” block as text for consistent linting/rendering.\n\n\n```diff\n-```\n+```text\n src/\n   main/java/org/\n     api/             # REST controllers\n     model/           # Domain models\n     service/         # Business logic\n     validator/       # Validation utilities\n     configuration/   # App config\n     Application.java # Spring Boot entrypoint\n   main/resources/\n     application.yml\n   test/java/org/\n     api/             # Controller tests (mocked service)\n     model/           # Model tests\n docs/CodeReview/     # CodeRabbit reports and suggested patches\n-```\n+```\n```\n\n</blockquote></details>\n<details>\n<summary>src/main/java/org/validator/UserValidator.java (1)</summary><blockquote>\n\n`5-10`: **Harden ID validation; fix minor style; make utility class non-instantiable.**\n\n- Enforce a safe character set and trim; keep max 64.\n- Replace tab with spaces; mark class final; add private ctor.\n\n\n\n\n```diff\n package org.validator;\n \n import org.springframework.util.StringUtils;\n+import java.util.regex.Pattern;\n \n-public class UserValidator {\n+public final class UserValidator {\n \n-\tpublic static boolean isValidUserId(String id) { // Intentionally uses a tab\n-        return StringUtils.hasText(id) && id.length() <= 64;\n+    private static final Pattern SAFE_ID = Pattern.compile(\"^[A-Za-z0-9_-]{1,64}$\");\n+\n+    private UserValidator() {}\n+\n+    public static boolean isValidUserId(String id) {\n+        if (!StringUtils.hasText(id)) return false;\n+        String trimmed = id.trim();\n+        return SAFE_ID.matcher(trimmed).matches();\n     }\n }\n```\n\nIf you prefer Bean Validation, annotate the DTO field with @NotBlank @Size(max=64) @Pattern(...) and drop this helper; I can generate that patch and tests on request.\n\n</blockquote></details>\n<details>\n<summary>CODERABBIT_POLICY.md (1)</summary><blockquote>\n\n`3-14`: **Add language specification to code fence.**\n\nThe code fence should specify the language for proper syntax highlighting and validation.\n\n\nApply this diff:\n\n```diff\n-```\n+```yaml\n coverage: core-modules >= 80%  # require 80% unit-test coverage for core modules (service, validator, api)\n```\n\n</blockquote></details>\n<details>\n<summary>docs/PR1_DESCRIPTION.md (1)</summary><blockquote>\n\n`12-23`: **Add language specification to code fence.**\n\nThe code fence should specify the language for consistency with other policy documents.\n\n\nApply this diff:\n\n```diff\n-```\n+```yaml\n coverage: core-modules >= 80%\n```\n\n</blockquote></details>\n<details>\n<summary>src/main/java/org/api/UserController.java (4)</summary><blockquote>\n\n`27-31`: **Use ResponseEntity.of(Optional) for concise 200/404 handling.**\n\nSimplifies null-check and avoids duplication.\n\n\n```diff\n-        User user = userService.findUserById(id);\n-        if (user == null) {\n-            return ResponseEntity.notFound().build();\n-        }\n-        return ResponseEntity.ok(user);\n+        User user = userService.findUserById(id);\n+        return ResponseEntity.of(java.util.Optional.ofNullable(user));\n```\n\n---\n\n`12-15`: **Add brief Javadoc for API discoverability (team rule A).**\n\nDocument the controller and endpoint behavior, including response codes.\n\n\n```diff\n @RestController\n @RequestMapping(\"/users\")\n @Validated\n public class UserController {\n+    /**\n+     * Retrieves a user by id.\n+     * @param id user identifier\n+     * @return 200 with User when found; 404 when not found; 400 for invalid input (via bean validation)\n+     */\n@@\n-    @GetMapping(\"/{id}\")\n+    @GetMapping(\"/{id}\")\n```\n\n\nAlso applies to: 23-24\n\n---\n\n`23-31`: **Consider using a typed UUID for id (future-proofing).**\n\nMapping `@PathVariable UUID id` lets Spring convert and respond 400 on invalid UUID automatically; propagates type safety into service/DB layers. Requires updating `UserService.findUserById` signature.\n\n\nWould you like a follow-up patch to migrate the service signature and tests to `UUID`?\n\n---\n\n`23-31`: **Observability: add request-scoped context to logs.**\n\nInclude a correlation/request id (e.g., from headers or MDC) to tie logs across services.\n\n</blockquote></details>\n<details>\n<summary>src/test/java/org/model/UserTest.java (1)</summary><blockquote>\n\n`17-26`: **Add negative and contract-focused tests to harden equals/hashCode.**\n\nCover inequality and null/other-class cases to guard future regressions.\n\n\n\n```diff\n     @Test\n     public void gettersSetters_shouldWork() {\n         User u = new User();\n         u.setId(\"2\");\n         u.setName(\"Bob\");\n         u.setEmail(\"bob@example.com\");\n         assertEquals(\"2\", u.getId());\n         assertEquals(\"Bob\", u.getName());\n         assertEquals(\"bob@example.com\", u.getEmail());\n     }\n+\n+    @Test\n+    public void equals_shouldNotMatchForDifferentValues() {\n+        User a = new User(\"1\", \"Alice\", \"alice@example.com\");\n+        User b = new User(\"2\", \"Alice\", \"alice@example.com\");\n+        assertNotEquals(a, b);\n+    }\n+\n+    @Test\n+    public void equalsContract_nullAndOtherType() {\n+        User a = new User(\"1\", \"Alice\", \"alice@example.com\");\n+        assertNotEquals(a, null);\n+        assertNotEquals(a, \"not-a-user\");\n+    }\n```\n\nI can also add controller tests for 404 and 400 (invalid id) if you adopt validation. Want me to open a follow-up?\n\n</blockquote></details>\n<details>\n<summary>src/main/java/org/model/User.java (2)</summary><blockquote>\n\n`5-9`: **Add basic bean validation annotations to model fields.**\n\nHelps catch invalid data at boundaries (especially if used as request/response payloads).\n\n\n```diff\n import java.util.Objects;\n \n public class User {\n-    private String id;\n-    private String name;\n-    private String email;\n+    // If Spring Boot 3.x:\n+    // import jakarta.validation.constraints.*;\n+    // If Spring Boot 2.x:\n+    // import javax.validation.constraints.*;\n+    @jakarta.validation.constraints.NotBlank\n+    private String id;\n+    @jakarta.validation.constraints.NotBlank\n+    private String name;\n+    @jakarta.validation.constraints.Email\n+    private String email;\n```\n\n\nAlso applies to: 18-26\n\n---\n\n`5-16`: **Optional: add a toString and Javadoc; consider immutability or Lombok if acceptable.**\n\nA readable `toString` aids debugging; Javadoc improves API clarity. If team permits, Lombok or Java records (if persistence allows) can reduce boilerplate.\n\n\n```diff\n public class User {\n@@\n     public User(String id, String name, String email) {\n         this.id = id;\n         this.name = name;\n         this.email = email;\n     }\n@@\n     public int hashCode() {\n         return Objects.hash(id, name, email);\n     }\n+\n+    @Override\n+    public String toString() {\n+        return \"User{id='\" + id + \"', name='\" + name + \"', email='\" + email + \"'}\";\n+    }\n```\n\n\nAlso applies to: 35-39\n\n</blockquote></details>\n<details>\n<summary>src/main/java/org/configuration/AppConfig.java (1)</summary><blockquote>\n\n`13-15`: **Add Javadoc per team rule.**\n\nPublic getter needs Javadoc (javadoc-required).\n\nExample:\n\n```diff\n-    public String getSecret() {\n+    /**\n+     * Returns the configured application secret.\n+     */\n+    public String getSecret() {\n         return secret;\n     }\n```\n\n</blockquote></details>\n<details>\n<summary>.github/pull_request_template.md (2)</summary><blockquote>\n\n`9-20`: **Specify fenced code language.**\n\nAdd yaml to fenced blocks to satisfy MD040 and improve rendering.\n\n\n```diff\n-```\n+```yaml\n coverage: core-modules >= 80%\n no-hardcoded-secrets: true\n ...\n-```\n+```\n```\n\n\nAlso applies to: 36-47\n\n---\n\n`28-54`: **Remove duplicated sections and duplicate headings.**\n\nThe second “Purpose/Notes/CodeRabbit requests/Artifacts” block is a copy; drop it to satisfy MD024.\n\n\n```diff\n-### Purpose\n-Evaluate CodeRabbit on a typical Java/Spring microservice.\n-\n-### Notes\n-- This PR may intentionally contain issues (see README) to exercise CodeRabbit.\n-\n-### CodeRabbit requests\n-- Please run a full analysis with the following team rules:\n-``` \n-coverage: core-modules >= 80%\n-no-hardcoded-secrets: true\n-folder-naming: enforce\n-forbid-system-out: true\n-formatting: enforce\n-javadoc-required: public-members\n-secrets-by-env: true\n-security-checks: high\n-exception-handling: no-silence\n-thread-safety-checks: enabled\n-```\n-\n-### Artifacts\n-Please save artifacts into the repo:\n-- docs/CodeReview/pr1-coderabbit-report.json\n-- docs/CodeReview/pr1-coderabbit-summary.md\n-- docs/CodeReview/pr1-suggested-patches/\n+<!-- duplicate block removed -->\n```\n\n</blockquote></details>\n<details>\n<summary>pom.xml (2)</summary><blockquote>\n\n`57-64`: **Use ‘release’ instead of source/target.**\n\nSimplifies config and avoids mismatches.\n\n\n```diff\n-                <configuration>\n-                    <source>${java.version}</source>\n-                    <target>${java.version}</target>\n-                </configuration>\n+                <configuration>\n+                    <release>${java.version}</release>\n+                </configuration>\n```\n\n---\n\n`51-55`: **Enable layered jar for better Docker caching.**\n\nAdd Spring Boot plugin layers to produce an efficiently layered jar.\n\n\n```diff\n             <plugin>\n                 <groupId>org.springframework.boot</groupId>\n                 <artifactId>spring-boot-maven-plugin</artifactId>\n+                <configuration>\n+                    <layers>\n+                        <enabled>true</enabled>\n+                    </layers>\n+                </configuration>\n             </plugin>\n```\n\n</blockquote></details>\n\n</blockquote></details>\n\n<details>\n<summary>📜 Review details</summary>\n\n**Configuration used**: CodeRabbit UI\n\n**Review profile**: CHILL\n\n**Plan**: Pro\n\n<details>\n<summary>📥 Commits</summary>\n\nReviewing files that changed from the base of the PR and between 5942b79abdc7a5eafd0c052d752e0b2ea1c6390b and c9897eb80b102eb37ae12b02cdfa87d5425fbec9.\n\n</details>\n\n<details>\n<summary>⛔ Files ignored due to path filters (8)</summary>\n\n* `target/classes/org/Application.class` is excluded by `!**/*.class`\n* `target/classes/org/api/UserController.class` is excluded by `!**/*.class`\n* `target/classes/org/configuration/AppConfig.class` is excluded by `!**/*.class`\n* `target/classes/org/model/User.class` is excluded by `!**/*.class`\n* `target/classes/org/service/UserService.class` is excluded by `!**/*.class`\n* `target/classes/org/validator/UserValidator.class` is excluded by `!**/*.class`\n* `target/test-classes/org/api/UserControllerTest.class` is excluded by `!**/*.class`\n* `target/test-classes/org/model/UserTest.class` is excluded by `!**/*.class`\n\n</details>\n\n<details>\n<summary>📒 Files selected for processing (19)</summary>\n\n* `.github/pull_request_template.md` (1 hunks)\n* `CODERABBIT_POLICY.md` (1 hunks)\n* `Dockerfile` (1 hunks)\n* `README.md` (1 hunks)\n* `docs/CodeReview/.gitkeep` (1 hunks)\n* `docs/PR1_DESCRIPTION.md` (1 hunks)\n* `pom.xml` (1 hunks)\n* `src/main/java/org/Application.java` (1 hunks)\n* `src/main/java/org/Service_misnamed/Readme.txt` (1 hunks)\n* `src/main/java/org/api/UserController.java` (1 hunks)\n* `src/main/java/org/configuration/AppConfig.java` (1 hunks)\n* `src/main/java/org/model/User.java` (1 hunks)\n* `src/main/java/org/service/UserService.java` (1 hunks)\n* `src/main/java/org/validator/UserValidator.java` (1 hunks)\n* `src/main/resources/application.yml` (1 hunks)\n* `src/test/java/org/api/UserControllerTest.java` (1 hunks)\n* `src/test/java/org/model/UserTest.java` (1 hunks)\n* `target/classes/application.yml` (1 hunks)\n* `target/classes/org/Service_misnamed/Readme.txt` (1 hunks)\n\n</details>\n\n<details>\n<summary>🧰 Additional context used</summary>\n\n<details>\n<summary>🪛 markdownlint-cli2 (0.17.2)</summary>\n\n<details>\n<summary>README.md</summary>\n\n13-13: Fenced code blocks should have a language specified\n\n(MD040, fenced-code-language)\n\n</details>\n<details>\n<summary>CODERABBIT_POLICY.md</summary>\n\n3-3: Fenced code blocks should have a language specified\n\n(MD040, fenced-code-language)\n\n</details>\n<details>\n<summary>.github/pull_request_template.md</summary>\n\n9-9: Fenced code blocks should have a language specified\n\n(MD040, fenced-code-language)\n\n---\n\n28-28: Multiple headings with the same content\n\n(MD024, no-duplicate-heading)\n\n---\n\n31-31: Multiple headings with the same content\n\n(MD024, no-duplicate-heading)\n\n---\n\n34-34: Multiple headings with the same content\n\n(MD024, no-duplicate-heading)\n\n---\n\n36-36: Fenced code blocks should have a language specified\n\n(MD040, fenced-code-language)\n\n---\n\n49-49: Multiple headings with the same content\n\n(MD024, no-duplicate-heading)\n\n</details>\n<details>\n<summary>docs/PR1_DESCRIPTION.md</summary>\n\n12-12: Fenced code blocks should have a language specified\n\n(MD040, fenced-code-language)\n\n</details>\n\n</details>\n<details>\n<summary>🪛 OSV Scanner (2.1.0)</summary>\n\n<details>\n<summary>pom.xml</summary>\n\n[HIGH] 1-1: commons-io:commons-io 2.6: Apache Commons IO: Possible denial of service attack on untrusted input to XmlStreamReader\n\n(GHSA-78wr-2p64-hpwj)\n\n---\n\n[HIGH] 1-1: commons-io:commons-io 2.6: Path Traversal and Improper Input Validation in Apache Commons IO\n\n(GHSA-gwrp-pvrq-jmwv)\n\n---\n\n[HIGH] 1-1: net.minidev:json-smart 2.5.1: Netplex Json-smart Uncontrolled Recursion vulnerability\n\n(GHSA-pq2g-wx69-c263)\n\n---\n\n[CRITICAL] 1-1: org.apache.tomcat.embed:tomcat-embed-core 10.1.28: Apache Tomcat Time-of-check Time-of-use (TOCTOU) Race Condition vulnerability\n\n(GHSA-27hp-xhwr-wr2m)\n\n---\n\n[CRITICAL] 1-1: org.apache.tomcat.embed:tomcat-embed-core 10.1.28: Apache Tomcat Denial of Service via invalid HTTP priority header\n\n(GHSA-3p2h-wqq4-wf4h)\n\n---\n\n[CRITICAL] 1-1: org.apache.tomcat.embed:tomcat-embed-core 10.1.28: Apache Tomcat Time-of-check Time-of-use (TOCTOU) Race Condition vulnerability\n\n(GHSA-5j33-cvvr-w245)\n\n---\n\n[CRITICAL] 1-1: org.apache.tomcat.embed:tomcat-embed-core 10.1.28: Apache Tomcat: Potential RCE and/or information disclosure and/or information corruption with partial PUT\n\n(GHSA-83qj-6fr2-vhqg)\n\n---\n\n[CRITICAL] 1-1: org.apache.tomcat.embed:tomcat-embed-core 10.1.28: Apache Tomcat Rewrite rule bypass\n\n(GHSA-ff77-26x5-69cr)\n\n---\n\n[CRITICAL] 1-1: org.apache.tomcat.embed:tomcat-embed-core 10.1.28: Apache Tomcat Improper Resource Shutdown or Release vulnerability\n\n(GHSA-gqp3-2cvr-x8m3)\n\n---\n\n[CRITICAL] 1-1: org.apache.tomcat.embed:tomcat-embed-core 10.1.28: Apache Tomcat - CGI security constraint bypass\n\n(GHSA-h2fw-rfh5-95r3)\n\n---\n\n[CRITICAL] 1-1: org.apache.tomcat.embed:tomcat-embed-core 10.1.28: Apache Tomcat - DoS in multipart upload\n\n(GHSA-h3gc-qfqq-6h8f)\n\n---\n\n[CRITICAL] 1-1: org.apache.tomcat.embed:tomcat-embed-core 10.1.28: Apache Tomcat Request and/or response mix-up\n\n(GHSA-qvf5-hvjx-wm27)\n\n---\n\n[CRITICAL] 1-1: org.apache.tomcat.embed:tomcat-embed-core 10.1.28: Apache Tomcat - Security constraint bypass for pre/post-resources\n\n(GHSA-wc4r-xq3c-5cf3)\n\n---\n\n[HIGH] 1-1: org.springframework.boot:spring-boot 3.3.3: Spring Boot EndpointRequest.to() creates wrong matcher if actuator endpoint is not exposed\n\n(GHSA-rc42-6c7j-7h5r)\n\n---\n\n[HIGH] 1-1: org.springframework:spring-webmvc 6.1.12: Path traversal vulnerability in functional web frameworks\n\n(GHSA-cx7f-g6mp-7hqm)\n\n---\n\n[HIGH] 1-1: org.springframework:spring-webmvc 6.1.12: Spring Framework Path Traversal vulnerability\n\n(GHSA-g5vr-rgqm-vf78)\n\n---\n\n[HIGH] 1-1: org.springframework:spring-webmvc 6.1.12: Spring Framework MVC Applications Path Traversal Vulnerability\n\n(GHSA-r936-gwx5-v52f)\n\n</details>\n\n</details>\n\n</details>\n\n<details>\n<summary>🔇 Additional comments (5)</summary><blockquote>\n\n<details>\n<summary>src/main/java/org/api/UserController.java (1)</summary><blockquote>\n\n`3-10`: **Add @NotBlank validation on path variable using Jakarta for Spring Boot 3.x**  \nSince your pom declares `<spring-boot.version>3.3.3</spring-boot.version>`, use Jakarta’s validation API.  \n\n```diff\n@@ src/main/java/org/api/UserController.java\n+ import jakarta.validation.constraints.NotBlank;\n\n@@\n- public ResponseEntity<User> getUserById(@PathVariable(\"id\") String id) {\n+ public ResponseEntity<User> getUserById(@PathVariable(\"id\") @NotBlank String id) {\n```\n\n</blockquote></details>\n<details>\n<summary>src/test/java/org/model/UserTest.java (1)</summary><blockquote>\n\n`7-15`: **Equals/hashCode happy-path test looks good.**\n\n</blockquote></details>\n<details>\n<summary>src/main/java/org/model/User.java (1)</summary><blockquote>\n\n`27-38`: **LGTM on equals/hashCode implementation.**\n\nUses all fields and `Objects` utility—correct and consistent.\n\n</blockquote></details>\n<details>\n<summary>src/main/java/org/configuration/AppConfig.java (1)</summary><blockquote>\n\n`6-16`: **Double-check call sites for getAppSecret() before renaming**  \nI wasn’t able to locate any occurrences via ripgrep; please manually verify that no code or framework integration relies on the existing method name.\n\n</blockquote></details>\n<details>\n<summary>Dockerfile (1)</summary><blockquote>\n\n`4-4`: **Consider running tests in CI instead of skipping in image build.**\n\nKeep -DskipTests here for faster image builds, but ensure CI runs full test suite.\n\n</blockquote></details>\n\n</blockquote></details>\n\n</details>\n\n<!-- This is an auto-generated comment by CodeRabbit for review status -->",
      "state": "COMMENTED",
      "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#pullrequestreview-3206543212",
      "pull_request_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1",
      "author_association": "NONE",
      "_links": {
        "html": {
          "href": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#pullrequestreview-3206543212"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1"
        }
      },
      "submitted_at": "2025-09-10T14:49:02Z",
      "commit_id": "c9897eb80b102eb37ae12b02cdfa87d5425fbec9"
    },
    {
      "id": 3206788086,
      "node_id": "PRR_kwDOPtYExc6_I7P2",
      "user": {
        "login": "coderabbitai[bot]",
        "id": 136622811,
        "node_id": "BOT_kgDOCCSy2w",
        "avatar_url": "https://avatars.githubusercontent.com/in/347564?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coderabbitai%5Bbot%5D",
        "html_url": "https://github.com/apps/coderabbitai",
        "followers_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/followers",
        "following_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/following{/other_user}",
        "gists_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/subscriptions",
        "organizations_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/orgs",
        "repos_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/repos",
        "events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coderabbitai%5Bbot%5D/received_events",
        "type": "Bot",
        "user_view_type": "public",
        "site_admin": false
      },
      "body": "**Actionable comments posted: 2**\n\n<details>\n<summary>🧹 Nitpick comments (5)</summary><blockquote>\n\n<details>\n<summary>docs/CodeReview/pr1-coderabbit-summary.md (1)</summary><blockquote>\n\n`1-6`: **Disable markdownlint rules and mark file as generated**\n\n- At the top of docs/CodeReview/pr1-coderabbit-summary.md, add:\n  ```diff\n  +<!-- markdownlint-disable MD009 MD013 MD022 MD032 MD033 MD034 MD038 -->\n  +<!-- Auto-generated by scripts/fetch-coderabbit-pr-artifacts.ps1; do not edit. -->\n  ```\n- Wrap the PR URL in angle brackets:\n  ```diff\n  -PR URL: https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1\n  +PR URL: <https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1>\n  ```\n- Rerun `npx markdownlint-cli2 docs/CodeReview/pr1-coderabbit-summary.md` to confirm zero lint errors.\n\n</blockquote></details>\n<details>\n<summary>scripts/fetch-coderabbit-pr-artifacts.ps1 (4)</summary><blockquote>\n\n`19-22`: **Remove duplicate header creation block**\n\nHeaders are now defined before first use; keep a single source of truth.\n\n\n```diff\n-$headers = @{ 'User-Agent'='coderabbit-fetch'; 'Accept'='application/vnd.github+json' }\n-if ($env:GITHUB_TOKEN) {\n-    $headers.Authorization = \"Bearer $($env:GITHUB_TOKEN)\"\n-}\n```\n\n---\n\n`43-46`: **Include review bodies in the summary aggregation**\n\nReviews often carry the main feedback; include them alongside issue and review comments.\n\n\n```diff\n if ($issueComments) { $allBodies += ($issueComments | ForEach-Object { $_.body }) }\n if ($reviewComments) { $allBodies += ($reviewComments | ForEach-Object { $_.body }) }\n+if ($reviews) { $allBodies += ($reviews | ForEach-Object { $_.body }) }\n```\n\n---\n\n`47-53`: **Add lint-disables, “autogenerated” header, and wrap PR URL; start fenced block for comments**\n\nFenced block prevents MD038 from inline code spans inside copied comments.\n\n\n```diff\n-$lines = @(\n-    \"# CodeRabbit Summary for PR #$PrNumber\",\n-    \"Repository: $Owner/$Repo\",\n-    \"PR URL: $($pr.html_url)\",\n-    \"\",\n-    \"## First 10 comments (truncated)\"\n-)\n+$lines = @(\n+    \"<!-- markdownlint-disable MD034 MD038 -->\",\n+    \"<!-- Auto-generated by scripts/fetch-coderabbit-pr-artifacts.ps1; do not edit. -->\",\n+    \"# CodeRabbit Summary for PR #$PrNumber\",\n+    \"Repository: $Owner/$Repo\",\n+    \"PR URL: <$($pr.html_url)>\",\n+    \"\",\n+    \"## First 10 comments (truncated)\",\n+    \"```\"\n+)\n```\n\n---\n\n`65-67`: **Close the fenced block before writing the file**\n\nPrevents unterminated code fences and silences MD038 in the comments section.\n\n\n```diff\n-$lines -join \"`n\" | Out-File -Encoding UTF8 'docs/CodeReview/pr1-coderabbit-summary.md'\n+$lines += '```'\n+$lines -join \"`n\" | Out-File -Encoding UTF8 'docs/CodeReview/pr1-coderabbit-summary.md'\n Write-Host \"Saved docs/CodeReview/pr1-coderabbit-report.json and docs/CodeReview/pr1-coderabbit-summary.md for PR #$PrNumber\"\n```\n\n</blockquote></details>\n\n</blockquote></details>\n\n<details>\n<summary>📜 Review details</summary>\n\n**Configuration used**: CodeRabbit UI\n\n**Review profile**: CHILL\n\n**Plan**: Pro\n\n<details>\n<summary>📥 Commits</summary>\n\nReviewing files that changed from the base of the PR and between c9897eb80b102eb37ae12b02cdfa87d5425fbec9 and 6bfb9a72e4d4d4cf678c8859da87ea8d875bc85e.\n\n</details>\n\n<details>\n<summary>📒 Files selected for processing (2)</summary>\n\n* `docs/CodeReview/pr1-coderabbit-summary.md` (1 hunks)\n* `scripts/fetch-coderabbit-pr-artifacts.ps1` (1 hunks)\n\n</details>\n\n<details>\n<summary>🧰 Additional context used</summary>\n\n<details>\n<summary>🪛 markdownlint-cli2 (0.17.2)</summary>\n\n<details>\n<summary>docs/CodeReview/pr1-coderabbit-summary.md</summary>\n\n3-3: Bare URL used\n\n(MD034, no-bare-urls)\n\n---\n\n10-10: Spaces inside code span elements\n\n(MD038, no-space-in-code)\n\n---\n\n11-11: Spaces inside code span elements\n\n(MD038, no-space-in-code)\n\n</details>\n\n</details>\n\n</details>\n\n</details>\n\n<!-- This is an auto-generated comment by CodeRabbit for review status -->",
      "state": "COMMENTED",
      "html_url": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#pullrequestreview-3206788086",
      "pull_request_url": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1",
      "author_association": "NONE",
      "_links": {
        "html": {
          "href": "https://github.com/SravanYandrapalli/code-rabbit-eval-java-ms/pull/1#pullrequestreview-3206788086"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/SravanYandrapalli/code-rabbit-eval-java-ms/pulls/1"
        }
      },
      "submitted_at": "2025-09-10T15:46:38Z",
      "commit_id": "6bfb9a72e4d4d4cf678c8859da87ea8d875bc85e"
    }
  ],
  "fetchedAt": "2025-09-10T16:08:59.382732Z"
}
